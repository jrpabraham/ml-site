%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: a6.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Iana
%%CreationDate: 25.07.14
%%BoundingBox: 0 0 358 471
%%HiResBoundingBox: 0 0 357.2334 470.7539
%%CropBox: 0 0 357.2334 470.7539
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 100 128 8%%BeginData: 7128 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD30FFA8F8A8FD57FFA8FF7D522752A8FFFFFF52F852FFFFFFA852%27527DFFA8FD48FFA8A8A8FFFF7D27527D7D2727A8A87DA8F8A87DA8A827%277D7D52277DFFFFA8A8A8FD40FF7D52F8F8F852275227277D7DF8272727%F8F8F852F8F8F8522727F87D7D27F8522752F8F8F8527DFD40FFA8A8A8FF%FF7D27527D7D2727A8A87DA8F8A87DA8A827277D7D7D277DFFFFA8A8A8FD%48FFA8FF7D522752A8FFFFFF52F852FFFFFFA85227527DFFA8FD57FFA827%A8FDFCFFFDFCFFFDA7FFA8FD23FFA8A8A8FD0EFFA852FD0EFFA87DA8FD15%FFFD057DFFA8A87DFFA8A87D7D7DA8FD1AFFA87D7DA852FD0CFFA87D7D7D%FD0CFF7D7DA852A8FD13FFA8527DA87D52277D7D7D525252A8A8A827A8FD%19FF7DA8FFFFFF7DFD0AFFA8FD04527DFD0AFFA87DFFA8FF52FD05FFA8A8%FFA8FFA8FFA8FFA8FFA8FF7D7D527D52527DFFA8A87DA8A87D5252527D7D%A8FFFFA8FFA8FFA8FFA8FFA8A87DFD0BFF7DFFA8FFFF7DFD08FFA8FFA87D%27277DA8A8FD09FF7DA8FFFFFFA8A8FD04FF27527D7D7DA87D7D7DA87D7D%5252A8FFA8FF7D27527DA8FF7D52277DA8FFFFA827FD047DA87D7D7DA87D%A85252FD07FFA87DFFFF7DFFA8A87DA8FFA8A87D7D27522727527DFD0452%7D7D27275252527D7DA8FFFF7DA87DFF7DA8A8A87DFD0EFFFD047D275252%7DFD05527D27527D7D7DA8FD14FF7DA8A8FF7D7DFFFF7DA8527D7D7D527D%A8FFA8A87DFF7D7DA8A87DA8A8FF7D5252FD047DA8A8FF7D7DFFFFA8A8A8%FD0EFFA8FFFF7D7DA87DA87DA8A8FD047DFFA8FD16FFA87DA8A8FF27FD04%52FD047DFD07FFA8A8A8FFA8FD06FFA8527D7D7D52525227A8FFA87D52FD%38FF7DA87DA8FD057DA8FD16FFA8A87D7D7DA8FD057DFDFCFFFDFCFFFDFC%FFFD44FF2752A8FD60FF7D52277DFD5FFF7D275252F87DFD55FFA8A8FD06%FF5252527D7D52527DFD06FFA8A8FD14FF7DA8FD26FFA87DFD0DFFA87D52%7DFD04FFA87DA852A8A852FF52FD05FF525252A8FD12FF7D2727FF7DA8A8%FD0FFFA8FD0FFFA8A8FF52F852FD0CFFA85252A8FFFFFF7DA8527D527D52%7D527DA8A8A8FFFFA8527DA8FD11FF272752522727F827527D5252527D52%52527DFD055227527D5252527D5252527D5252527D2727F85227522727FD%04A8FFA8A8A8FFA8FFA85252A87D7D52A8A8A85252F827527D7DA87D5252%A8A87D52FD04A8FFA8A8A8FFA8A8FD07FFA852F827FF527DA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8A87D7DA852%F8527DFF527DA87DA87DA87DA87DA8FD057DA87DA87DFFFF7D7DFFFFA87D%A87D7D527D52A87DA87DA87DA87DA87D7D52FD09FF7D7DFD26FFA87DA8FD%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFD40FF5252FD5EFFA8A87DFD0452A87D%A8FD1AFF7DFD07FFA8FD1BFFA8FD06FFA8A8FD13FF5252527D7D527D5252%52FD19FF7D7D52FFFFFFFD05A8FD19FFA8A87DA8FFFFFF7D527DFFA8A87D%FD04A8FFA8FFA8FFA8FFA8FFA8FF525252275252277D277DFFFFA8FFA8FF%A8FFA8FFA8FFFD05A8FD07FFA87D527D7DFD042752272727522752275227%522752527D7D5227522752275227522752272727522727277D7D5252A87D%5252275252FD047DFD0CA87D7DFD0BA8FD047D527D525227527DFD07FFA8%7D7D7D52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FF7D272752277DA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA85252A87D7DFD37FFA8A8A8FD10FFA87D7D7DA8A8%FD10FFA87DA8FDFCFFFDFCFFFDFCFFFDFCFFFDA6FFA87D525227527DA8FD%5CFFFD075227FD22FFA8FFFFFFA8FFA8A8527DA8A8FFFFA8FFA8FD16FFA8%7DA8FD047D527D527D527D527D527D527D7D7D27A8A852527D7D7D527D52%7D527D527D527D527D7DA8A8A87DFFFFA8A87DA87D7D527D52522752FD04%27F82752F8F85227F8F852F8FD0627522752527D527D7DFD04A8FD09FFA8%FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA87D52527D7D525252FD04A8FFA8A8%A8FFA8A8A8FFA8FFA8FD04FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A87DA8%A8FF7DA8527D7DFD08A8FFA8A8A8FFA8FFA8FFA8FFA8FD1BFF5252272727%525252A8FD5DFFA87D7DA8FDFCFFFDFCFFFDFCFFFD8EFF7DFD62FF52527D%FD32FFA8FD2CFFA85252277D7DFD25FF7D27A8FFFF7DFFA8A8FFFF7D5252%FD2BFF527D7D7D5252A8FD23FFA827277DA8527D27527D527D7D2752A8FD%26FFFD047D2727FFFF5227FD047DFD14FFA8FFFFFFA8FFFFFFA8FFA8FFA8%7D7D7D52A87DF8F8A87D7D527D7DFFA8FFA8FFA8FFFFFFA8FFA8FD18FFA8%A8FFFF5252FF7D7D7DA87DA8A8A827FFFFFFA8FD0EFFA8527D7DFD045227%7D527D527D527DA8A8277D7D52272752A85252A8A87D7D527D527DFD0552%7D7D7D27A8FD08FFA8FFA8FFA8FFA8FFA8FFA87D525252A8277D7DA8FF52%27FFA87DA8277DA8527D52A8A8FFA8FFA8FFA8FFA8FFA8FF5227FD07A87D%A87DFFA8A8A87D7D272752275227525227277D52FFFD06A87DA87DA8A8FF%7D2752FD07FF527D7DA87DA8FD047D5252527D525227275252527D27277D%7D277D275227527D52277D52FD047DA87DA87D52A8A8527D7D527DFD0752%7D7D7DA8FF277D7D7D272752A85252A8A8FD047DFD07527D7D7D52FD0FFF%A8FFFFFFA87DA8A8FFFFA8FF7D7DA85252A87D7DFFFFA8FFA8A87DA8FD04%FFA8FD0CFFA8FFFFFFA8FD05FFA87D7D7D527D7DF8F8A87D7D527D52FFFF%FFA8FFFFFFA8FD1BFFA8A8FD06FFA87DA8FF7DA8FD06FFA8A8FD1CFFA827%277DA8527D27525252A87D2752A8FD55FF7D52A8FFFFA8FFA8A8FFFF7D52%7DFDFCFFFDFCFFFDFCFFFDEBFF7D7D527DFD5FFF7D7DA8FF52A8FD30FFA8%FFFFFFA8FD26FF7D527D2727A8A82727A827A8FD2AFFA8A87DA87DA87DA8%7DA8A8FD12FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FD0427A852527D%52272727FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FD09FFA8A87DA8FD047D%527D527D527D7DA87DA8527D7D27F87D7D527DA87D7D527D527D527D527D%7DA87D7D7DA8A8FFFFA8A87DA87DA87D7D52FD047DA87DA85252275252A8%7D7D522727527DA8FD077DA87DA87DA87DA8A8FD19FF527D527D2727FD04%527DFD23FF27F827277D27527DFD0427FD29FFA85252FFFD047DA8A827A8%FD23FF7D7DA85227FFFF2752FF7DA8FD5BFFA87DA8A87DFD60FF7D7D7DA8%FDFCFFFDFCFFFDF1FF7D7DFFA852A8A87D7DFF7D7DFD50FFA87D7DA8FFFF%FF7D7D52A87DFF527DFFA87D7D527DFD04FF7D7D7DFD47FFA852FFA87DFF%A87D52277D7DA8527D7D7DA87D5252277D7DFF7DA8A87D7DFD43FFA87DFF%A8A8A8FF7DFFA8FFA87DA8A8FF7D527D7DFF7DA852A8A8FFFFA8A8A87DA8%FFA8A8FD3FFFA852A852A87DA87DFD05FFA87D52FFFFFFA8FFFF7D52A8A8%FD04FFA8A8FD067DFD1BFFA87DFD1EFF7DA8FF527DA8A8527D7DFFFFFFA8%52527D7D527DFD04FFA8277D7D7D52A8A8FFFFA8527DA8FF7D7DFFFF52FF%FFA8FFA8A87DA8FD047D527D52522752527DA8522727F8F8272752A87D52%27FD0452FD047DA87DA8A8FFA8FD08FFA8F8527D7D27527D522752277D52%52277DA87D7D277DFFFFA8F87D7DA87D27275252522752527D5227527D52%F852FFFFA8A87D7DFD04522727F827F8F8F827527DFD07F8277D52FD05F8%FD04275252FD047DA8A8FD08FF7DA8FD0CFFA8527D7D2727F8527DF82727%FD047DFD0DFF52FD10FFA8FD04FFA87DA8F8277D7DA8FFFFFFA8FFA8FD25%FFA852527D52FD057D27A8FD59FF7DFF7DFD04FFA8FFA8A8FD59FF7D527D%FD04FF7D7D7DFD12FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Основные RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-25T16:22:55+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-07-25T16:22:56+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-07-25T16:22:56+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>196</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADEAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYqx&#xA;vzT+Y3k3yqrtr+o/UljHJz6M8tBQN/upH7HFWH6X/wA5Ofk7qeoyWVrq8x9OJ5vrDWlyIysQq1P3&#xA;fP7Iruv44ql+uf8AORWmHVbLT/KcMGsfpOwF5Fc3LXNnHakuAHuAYHd43V9hEpYFSCKMCFWE6l/z&#xA;kF520XzClq2u6Fr9zQyXGgW9jqFnRFQyFIbuZWAcgfCXqvjTFWWeav8AnJz8sjZR6SNSv9Nm1vSm&#xA;ni1eC3ZjYvcxfueQ+2ZFrWqKwBHXwVYJ+Sv50+W/y48s23ljzjqN/da3eX5eS1EZni0+3uVR43Mt&#xA;fjWTn6pEZYgt9kGtVU88+f8AOSV8PMMlhoOqafoGhwztaLrF/aXd5PcTRAGVkghWkcSFuPxVY9QK&#xA;dFU5j/P3WdEm0218yfovULS/u4IP8Qad9chiiikb4vWs54jL6hQfB6bMtT8XEDFWT6x/zkf+Uml2&#xA;j3M2qyypFdtYusVrcFhNGKv9tEFF8a/LFUw8s/np+V3mZxHo+smeboYmtrqMg7bEvEq9/HFWeggg&#xA;EdDuMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqGj0vTIrp7uK0hS6kUrJcLGgkZSakFwOR&#xA;FcVY/wCafy08reZr2C+1OOdb6ygMGmXVtcS20lnVuTS27RMnCRiFqTXZQOlaqsQu/wAgv0reKPMH&#xA;nTXdY0ePYabPLFGZIz1imuIUSR42/aUca4qzXXfJml3NiZtL0+wg1+xsZbLQNQntkk+qcoysQXbk&#xA;sammy9q+OKsB/IX8ptU8veSbXT/PNhYXWo6dqE15oytHHPLaBiPiE1COTOpdeO4BFTXZVU581/kn&#xA;p2reYZPMeh61f+WdYuGWS8exZHt55UXisz28qsgmCinNae+5JxVF6Z+TmgQXlnqmrajqev69YTx3&#xA;Fpq+o3TvLC0bcuEMacIY433V1CfEDuemKs1utN067i9K7tYbiLn6npyxq68+nKjAjlv1xVWjjjjQ&#xA;RxqERdlVQAAPYDFV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKPM3mW08v2UNxPBNdS3VxHZ2dpb+n6k081eCK0rxRLXid3&#xA;cD3xVJNT/MdtEg+teYtCutKsxQm6kudOdBUDbiLoSsamlERsVU2/NfQpI5ru0ieTTrUKbqS4ZbK5&#xA;o6hh6NndejO9Aankq8v2OZ2xV1t+auk6neTWXl/T7zV7yDaaAfV7GRDSvxwahNaXAHv6RGKpto3m&#xA;8X2tzaFfabcaVq0UH1tIJ3glWW35+n6sb28kuwago4VvamKsgxV2KuxV2KuxV2KsQtvNev6xM0ui&#xA;W1jFppkli06bUJ3SW/a3JWR4Y4kfhDUHjKeRYfFw4lSVU78u65+l7F5ZLdrO9tpXtb+ydg5hnjpy&#xA;XmNmVlZXRu6sDQdMVTTFXYq8u1/83LdNRt5dPuZLeytUt7ue1ltWaW9tLi9htTNAPtsgjlZo/TFW&#xA;Yb7CjKvQ9F1m01ix+uWyyIokkhlhmXhJHLC5jkR13oVZT/DFUdiriQoJJoBuSegGKsLi80ecdRtb&#xA;fVNJsdOTTr4erpVpfXMkV1eQ8easGSN44WkT40Qhzx+1xNQqrI/LuuW2uaRBqUEbw+pySa2mAEsE&#xA;8TmOaCUAkB4pEZGoaVG22KpjirDdB8k+abG3uY73zrql1JLczTpIsVhskjVVT61tNQjwj4oOiqO6&#xA;qZf4Z1r/AKmzVf8AkVpX/ZDirv8ADOtf9TZqv/IrSv8AshxVhl75D1h73UV8w6HF55t7q452d1e3&#xA;oXhBxULE9nJGttEyMleUIoxPKgO2KsC1TRdR0fzNdDyx5StvJ9/ZyIDf2ravey3MbxiUtZwW1jNZ&#xA;tT+7rIrcWBFMVT2KbztKjteeTrrVb+5ZWtNV1OseoqGkYfuDbP6Fv6P2lrNZcv5UNXKrGvMH+L74&#xA;+p5l0W5802NpFSHy9q8eo2d88qUBWF9NsnspufLYPLL7ucVZ035dNDYz22g+QrDQtSmh4Q6taam1&#xA;qYpOPFJDNbxJct6fKv2d8VZzaeV/MSWsKXPm7U3uFjUTNHDpgQuAORUPZuwWvTkxPucVVf8ADOtf&#xA;9TZqv/IrSv8AshxVSu/KmvTWs0Ufm7VEkkjZUYx6aAGYEAn07OJ/+BdT4EdcVTDytpF9o/l2w0y/&#xA;1GbVry0iEc2o3AUSSsO54hRt9kV3oPiJNSVU1xVivkvXNU1Oe8F9OjSQ0W5sz6SyW1zyb1IVVPj9&#xA;NAVUPIKv9taqwoqwzSvOWk+T7a08ta7qtno+s+WIG0+GK/BCahp7FFtri2ZSXeVliTmi8mDcgy/Z&#xA;bFVaHz5faJYTz/Vo0l1Cdru917zFKuh20kjKIl+r2bia+ZUihRI0aIFgB8RapxVbba3+duv3CHQZ&#xA;NOt9OJBfUr7TLq0g4139COa6e6nbwZoYUPZjiqNv/Kn5zLeNdf4vTUbbYrp9pBb6RwI/kklg1YyH&#xA;wWQhT0NOuKsK138rNau/MGjXDJfG4uJ3khunYWx0+aKZZGmu49P5wSrLIykfVng+P4jT4pEVZVae&#xA;VPzWFgun6Drc+hWcW0Vxex6Y1N6kx2MVpO3BzViZrz1CT8W+KonVYPz60cxzW+p6Z5gsI0H1j0dN&#xA;MN9yH7S273kUMo8QJ42/lxVT0380NalmawvLXT9YnI43Wn20j6TqqAj4q6XqhTktP2luaHtXFUFp&#xA;/wCYHlvRNJstE1fXUtE0loFg0q6sprXWZo4WH1O3S1kH716hFaSFWV6bca1CrK9Jh1XR/Jd3qF00&#xA;enahf3cup3qvJEFtY7q49R0DykQ+pFbbVY8DIK9MVW/4r1L/AAL+nOZ9H61x/SPGPl+jvrfp/XON&#xA;PS/uPj5/Yp+8px+HFWbYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlmq+V/LWsSJLq2k2WoyRikb3d&#xA;vFOyjwUyK1MVQsHkLyNb2j2UHl3S4bOT+8to7K3WJqb7oE4nFV2keRvJWiz/AFjR/L+m6bcf7+s7&#xA;OCB/+CjRTiqd4q7FXYq7FXYqgdW0LRNZt/q2r6fbalb7/ubuGOdN+vwyBhiqXWX5f+QrCOWKx8t6&#xA;VaxTjjOkFlbxq460cKg5dO+KtW35eeQLWVZrbyzpUEqElJI7G2RlLGrEFUBFT1xVkGKuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVxIAqdgOpxV8+&#xA;+evzy15fM+pXHlW+j/QHloRx3VtIbBV1C4WZvrar9ZljuSkcS8YzbqavXt1Ve4eXPMOk+YtFtNZ0&#xA;qb17G8jEkTdGFeqOv7LqdmB6HFUyxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtI6O&#xA;oZGDKejKajbbtireKsN/NTU9Y07y9FPp8jwwmZhfzxyLbskS28zx1uXWRbdHuUijeUoQqsSeI+IK&#xA;rPKHmKXSvJlrdectWto7mSSYwSSXMMztbvM31WNpYgqTzCIorGNfibpXFUv8/wB1c+YvLSmDy/qV&#xA;3p9tdQ3UtrPGsMV9bwmrwTW7P9b9OQHZWg+0F5KUrirxXUdf8laVLr2mx6fbKL9tPk0q2nhigkEA&#xA;1KW8lhfkKQn0rk24NeIRFkqUIYqvRvyt01tK1J9R0fy/eDT7PTzp95PbRRWn6Vvucckt7JDcy21O&#xA;DI6Q7FwGcPx+FcVem6f5w0LUmltLW7SDVY1+PTb1Wt7mNiPhLwScJOJPRlHFv2ScVYN+VGredJ9b&#xA;lsdbu2vJILaUa04uYL63W8T6v6bQvbpGtt6xluKQEswRFJC1+JV6rirsVaR0kQOjB0PRlNQfpGKt&#xA;4q+WfzK/N/8AMRvNen2V7Z3HlS5t5bW90rQ5G+si7nhuZY0JmtUE3p3ShovRdCtfiB2OKvRG/Nf8&#xA;4U80Xel/8q3mktYRbMsiXGy+ratLIPrHAwy0lXgCtKdCKnFWW/4v/MT/AKkKf/uJWH/NeKu/xf8A&#xA;mJ/1IU//AHErD/mvFXf4v/MT/qQp/wDuJWH/ADXiqBu/P/5ixala20f5f3clvLfXNrLOt5bNSCGA&#xA;SQz7EKqyuSvxkAcaVLMBiqLt/Of5hzWtvN/gC4RpoYpJI21GxUo7oGdCGZW+BiV3A6dBiq//ABf+&#xA;Yn/UhT/9xKw/5rxV3+L/AMxP+pCn/wC4lYf814qxvzh+aH5r6Ra3Eln+Xs1Ird5luGuUu1VlhuJP&#xA;iS1rUBoIxTmCedOtMVec/mX+af5jW35g6ZLHFN5dltLKJYtIejm4S9njWWd3fjaRqzqsCGVjwO54&#xA;sQMVey/4589/4A/xB/ga4/xF63pf4Y+uRep6fq8PV9fhSnD4qcPw3xVNLP8ALH8ubS3S3g8saWsS&#xA;V4hrOBzuST8TqzHc+OKq3/KvPIH/AFLOlf8ASDbf80Yq4/l3+X7Ag+WdJIOxBsbahH/AYqh4vys/&#xA;LGGQSReUNEjkX7Lpp1opFRTYiPFUVH5B8iRSLJH5c0tJEIZHWytwysDUEEJsRiqY3eh6JeX9tqN3&#xA;p9tcahZV+p3ksMbzQ16+lIwLJ/sTiqH1Lyl5V1S5+tano1jfXRUL69zbQzScR0HJ1Y0GKpfP+WP5&#xA;bXHH1/KejTca8fU0+1aletKx4quh/Lb8uoU4Q+VtHiTrxSwtVFT7CPFV/wDyrzyB/wBSzpX/AEg2&#xA;3/NGKu/5V55A/wCpZ0r/AKQbb/mjFUy0TQtI0LTIdL0e0jsdOt+Xo2sI4ovNi7UHuzE4qjsVS3Vv&#xA;LWg6vNZz6lZR3M2n3MN7ZyOPijuLfn6LgihPD1XoDtucVTLFXYq7FXYq7FXYq7FXYq7FUtvPLWg3&#xA;usWusXdlHPqVlE8FtcuKlY5WR2Wn2T8cSkVGx6UxVMsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVQ15qem2TwJeXcNs904itlmkWMySHoiBiOTewxVgWq/nXoFv5j&#xA;0rT9ORNU0i7LDUdaglYx2h5GOPiixP8AWOTqQ/pt+7HxPRd8VZlpfmny1qot/wBG6pa3Zu4zPbJF&#xA;MjPJErFGdUB5FQykE06jFU0xV2KuxV2KuxV2KrEngeWSJJFaWKnqxggsvIVXkOoqOmKr8VdirsVd&#xA;irsVdirsVdirsVWyzRQxtLM6xxIKu7kKoA7knYYq3zThz5DhSvKu1Ota4q8/vfMf51x3hW18maXP&#xA;ajgQ/wCmCpNVBcAtbL0aoB4/RiqY22u/mkwJuPKWnRHbiE1p5D71rYpT8cVTKxv/ADvMjNdaLYWp&#xA;BoqfpKWQnxJpZgD78VRP1nzV/wBW6x/6Tpv+yTFWG+ePy88w+btW0m+lmt9K/R/KOYwzvcGW3lli&#xA;kmiCtBCF9RYeDVLKVJqp2xVhX/Kl/wAwbW4sY4bq2l+rJOLSe2mnt7a1+sQrHHCYWd3aOxk5SQsO&#xA;TTfZk49cVTzy7+THmHRNe0rVzf2t7+jGklNovqWsclyxuEN3Xhc8HuIp1MygfaHFWEdFxV6X9Z81&#xA;f9W6x/6Tpv8AskxVTuLzzgkLtBpVhLKoqsZ1CZOXty+pmmKpXLrf5miMmLyrp7yfsq+sMoO/ciyb&#xA;9WKpPdeZfzxExFv5I0v0xsCdaL1PiCbWM/8AC4qzvS5tTmskk1O2itLwlw8EMxuEADEIRIUiqWSh&#xA;I47Hap64qisVeH23kfzhofmC61Kzt7iHV4bWW1srzTrDT5ku5biVGe6up5bm1knaT0ebxT8BG7Nx&#xA;crTFUzj8g/nbrlpFL5h862dpRiw0mLSxJCQD8BnMd1CJGofijJeMHpy64qjrP8uPzTsZvUsPPdlZ&#xA;qft28OhBYDtT+5+u+mpOxLKob3xVMP8ACn5y/wDU/wBj/wBwFf8AstxV3+FPzl/6n+x/7gK/9luK&#xA;sDj87/npbpcw3Gh61fSBVa3vY7GwtEXk1BW29S9Mnw70EyEHZqCrBVlHlzTfzv1jS1vbrzVHo07M&#xA;yPYX2gQesvE0BrFfyIQw3BBxVNP8KfnL/wBT/Y/9wFf+y3FUNe+R/wA4LyP0pfzDtlhIo6RaJ6Rb&#xA;cEVeO9V9qdA1D3riqXr+VP5mW9yl3p3nqy0+5jFAbTQxDHIK1ImiF4YpK9OToWH7JBxVJ9Y8t/mt&#xA;rWkNpnm+WW/vLS7hvLFtP0zT59PkeEOtHS4vEM6H1AQJki4soO9MVZb/AIK1z/lWX6E+r2/1v6z9&#xA;b/QvJPqf1f659Y+oV4cOHpfBx4+ny+GnpfDir0PFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVC9v7Gwtnur64itbaP7c87r&#xA;HGtfFmIAxVi97+bf5e2d0LaXWI2cO8c7wpLLHA0ZcP8AWJI1ZIePpsW9Qiigsfh3xVPdI8zeXtZB&#xA;/RWo296QpcpDIrPwDmPnxry4FlIDUoe2KplirsVdirsVdiqVz6vqSF1i0S8mIHwMJLNVY023NxyH&#xA;/A4qlk/mbzbG5VPJ95MKbOl3p4X5fFOp/DFUrn87fmTGwCflzdzAivJNT0wAe3xzIcVSy5/Mj824&#xA;Dv8AlVdspJClNW09zQeIQvTFVOz/ADL/ADfna7En5VXEKwwtJbctXs6yuGUCMgooWoJNanp0xVi5&#xA;/OT86zd26z+R/wBHXLMgttDkiuZ5dQDXDxy+nepxt7T0I1DEzKQ32h8JGKp/Yfmj+c8vl6K/l/Kq&#xA;dr9pFjNt+k7eDkhRmaXhIjSx0YAcWXv1xVEwfmb+bkrKg/Ki8VyN+WrWKr/wThRiqZQeevzOfgJf&#xA;y0vImanM/pXS2VfpE3Ij/Y4qmcHmvzoyr63km8jcncLe6c6j3r66n8MVTSDW9ZKEz+XryN67BJrJ&#xA;xT5mdP1Yqm0MjyRh3iaFj1jcqWH/AABZfxxVfiqUz23msh/Q1GwjJr6fOxmeg7VpdpX8MVS6XT/z&#xA;OLkw6/oqR9lfRrtz941VP1Yqs/Rv5p/9TDof/cEvP+8tirv0b+af/Uw6H/3BLz/vLYqwn84dN8wD&#xA;yaZ/Nd1Z6xYW07SLFpunz2bIxtpo+UpkvL/mjLIycQlSzLRkPxBV5paXXlNJ9UGsWVxe6pb3V+8N&#xA;1DL+4so/qUzMmoUkiSc+jFIrD0lqhWCg4+lGqyD8o01SXzIG0gelrE2nQiXV7mCS7sREIUVP3cb2&#xA;j9IRFwa4PpsvD4ip4KvYf0b+af8A1MOh/wDcEvP+8tirv0b+af8A1MOh/wDcEvP+8tirv0b+af8A&#xA;1MOh/wDcEvP+8tiqPtbTzqsIF3qumyzftPFp08Sn5K19Kf8AhsVR3o619S4fWrb67yr6/wBWk9Lj&#xA;4el6/Kvv6n0YqjcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqV3XlTyvd3Fvc3WkWU&#xA;9xaNztZpLeJ3jYuZaoxUlT6h57ftb9cVTKKGKJSsSLGpZnKqABydizNt3ZiSffFV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZJI4o2kkYJGgLO7EBVUCpJJ6AYq8v8xfnfZ2mv6fY6LDHq&#xA;lhPcyQNewyrJHO0Vkt6ywyx840HpzJxdzRmBX4V5SKq9D0XXtH1uz+uaVeRXkAPCQwurmOQAFo5A&#xA;pPCRa/Ep3GKo/FXYq7FXYq7FWP3vn3yrZ319YS3jPe6a0S39tBBcXEkRnjEsXJIY5DR0NVPz8Diq&#xA;WS/nB5Aicxy31zHIv2kbT9QBHzBgxVWh/NXyVMgkhnvJIz0dNN1Fht7i3xVB+YPP/l/UPL2q2Wna&#xA;pNpN/cWc8Nnqd5Z3lrBbzyRlIpXmnhjjUI7A7nFXlmgv5n8g31zpWmRtba/5stfV0ew1BoJrWBrC&#xA;F2EVqbN3a9lmZyPWm9I8QpkqaBlUi81/md+YelebNP0jSb3WtT0y+FwZ55VS2mu3htI5yI43s1nt&#xA;DBK7CZIVaqjivxgjFWU+ZNd8yappjeRrrU7i7t/MtyYvLmpCBYNVMVp6M7O8FwLa3u7dpeUNWaNm&#xA;T4iGRiwVZZ+XGr2Xk7Rr7SdcupRcLfPJBpkKPqE1nC8UYEc4sEmihaWRJJ/SX4U9TivwgYqyk/mf&#xA;5PAqZL4AdT+jNS/7J8VQv/K5fy7/AOrhP/0gX/8A1QxVFS/ml5Igsbi/ub2a0srVQ89xc2d5booJ&#xA;CjeWFKlmIAA3JIA3OKspilSWNZIzyRwGU+IOKrsVcCCKg1G428RscVdirTukaNJIwREBZ3Y0AA3J&#xA;JOKsYh/MXyxeGOC3u3s571aaXcajaXVrbXDspMfoyzpBHNWleMb1I3GxBxVgd95u8366/nHQZryy&#xA;/RuiiKxlubWwcyahNfmS2+pxpJdyrCyzJ6TFiSeQPwDcqpIvll/LiSaF5uifWfNmroZPLd5bXEvC&#xA;5uJUhtLiLnciZkMCiMyNNzUxVdVDc1xVMLG3/MH8vNF8wSHVLTVNR062g1KaC4hnaG5tvT9AUuZL&#xA;j1YWh+rkMW5LxAalXPFVneg+f7FfL2majrWqQXdzrUMd5ptnYWc4umilQMVFnFLfTOY2NHddh36V&#xA;KrJNE17TNatpJ7B3PoyGG4hmikgmilADcJYZlSSNuLK1GXcEEbEYqmGKuxVrmlK8hStK171pT78V&#xA;edaR+TOn+XrrVZvLN+dMh1SaGYWjwC5ig9EiT92JHqWaYeoWct4AADFVk/5W+Z3IVPMlmIV/u0fR&#xA;4WI+GJOomXfjbxitP2RiqnF+VPmqFg0XmezRhO92CNHjH76S4W7d/wDejvOiv88VRF95Z1Dy15f1&#xA;DWL3XaW+m2U897PY2EMVybeKCMypDzeWNS0dnGoqh6Deu+KvGLvRvLmt36ahpmgrNaeVrSf9OeXd&#xA;KvLm/n+sTq0kC3RaO2aRTIrK0lpJLwYHqpJCrBvM2kWGneatN0/QI9N1HQ71ZJGuReLEl0YoFuEM&#xA;qyXchh9K4kf0BLJG0slY2rTFWa/4W8n6bNbeYNOt0byv5XvJI9Q1iSS5i0u9ikVFgCyKb+WWVJ5T&#xA;BS1jaOq86gcVxV6p5C0u28y+XLm30addL0uxuprU6VIF1K1jea2DerZ3J+rzNFPbXwakoqpYrxWl&#xA;MVTWX8s/N73huh5otPUDckZtHiYijyuP93gVDXMhrT9rFULD+UXmWG1jtYvMlksMUAtY1/Q8ZIhW&#xA;FrcJyNxyp6TleuKo7VfyovNY0a90nU9cElvegF3gsoYXWRZXmDU5MjLzlclWU15YqzPQNA0fy/o9&#xA;to2jWy2emWalLa2QswQMxYgFizfaYnc4qmGKsZs/y08i2dv9Xt9IiWHnJKFZpHo00jSyULsxFXcm&#xA;nQdsVbn/AC28kT8eelRjjWnpvLH18eDrX6cVSvV/yV/LnU7O4t5dJVZZ4XhW59SZ3j5qQGXk5+zy&#xA;qMVSzSfyP8nSwGLzB5d0twsapwtWuGjldWJaVklI4VAWiVam/wAR2xV17/zj1+Wz6HeWFjpkVndz&#xA;vJNb3w5sYpWlMsZKc1DrH8K8e6ilcVY5d/8AOPceo3drqVxp2j2F1pa1tbC2e8mtruV2T1WuXf05&#xA;I19NGRFQNxLciWoFxVP9C/Irykbm7vvMGiaf6k6pDbafZvcSQQxIWJJklMbSSSF/iPBRRVAHUlVX&#xA;T8gfy1stNWPT9BtG1CNUH1mbmpl4MCySMhPEOBxqFPHqBtirtB/I3yTA15darotmbm6uPVhgtnnM&#xA;cESoqJGJGZGkb4OTNxXc0AoMVZDH+WPkWNw66WCV3AaWdh9IZyDiqJXyF5OVgy6VCrKaqwBBBHcb&#xA;4qs/5V75O/wz/hj9Gr+g/W+sfU/Ulp6vr/WefPn6lfW+L7Xt02xVkWKuxV2KrZoYponhmRZIpFKS&#xA;RuAysrChVgdiCMVSny/5Q8t+XvV/Q1hHZmdIopShZiY7cMIY6sWISMO3FRsKmmKpi2n2DLOjW0RW&#xA;5NblSikSGlKuKfF9OKqOq6LpWraa+majbJcWEnAtbtstYnWSMilCCjorKR0IxVrRtD0nRbM2el2q&#xA;WtuZHmdEqS0srFpJHYkszMx3ZjXFUdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVcSAKnYDq&#xA;cVYafPmsXBu30ny1cajZwz3Fvb3q3NrHE7WblJmk5uGjUspERAbl34jfFWS6Jq9rrGj2Wq2tRb30&#xA;EdxGrU5qJUDhXAJAYVoRXriqNxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpPe3Xm9&#xA;JQLHTNPnipu89/NC3Lw4rZzCnvXFUP8AXfP/AP1ZtK/7itz/AN47FUM2s/mOGIHliwYA0DDVmofc&#xA;VswcVVodR/MGROT6DpkR/kfVZif+EsGH44q+X/zM8yearb8x/M4GoOt2fqtq9pDeXDwrHc/u57WK&#xA;sUaTL6TMeLRDi3xKCwLSKsi8u2ei6VpVpoelXLWdhqi/u/L0F21xba0S7K31q7L2n1BuYMJVo4y/&#xA;HgfWI4BV51qWpPoiXmj6ReTWugWUsNzpsFnfTvxnuJCks8TpDbLccGSOknEKBXgwLc1VfXVtqvn5&#xA;dOtZLfRtPv43jQpN+lJlkdSoIkcPp8Yq3U/qxVd+mvzH/wCpXsf+4s3/AGR4qiItQ/MF4wzaFpcT&#xA;Hqj6rOSN+/GwYfjiqtDeeeC9JtI0xE/mTUrhzX5GwT9eKpxbtcNEpuESOY/bSNzIoPsxWMn/AIHF&#xA;VTFUputL12XkIdae3UmqlbeFmA8KsCD92KoR9B80lCI/M8yvT4Wa0tGAPuAi1+/FUN/h3z3/ANTd&#xA;/wBy63/5qxVdF5e87hwZfNrNH+0q2FspPyJ5fqxV59+Yt7ri67D5Rg1G+utb1SOBbO9n4xWaerI5&#xA;ZfRij9BgUt3VnmilKsy0AGKsJ8w2f5qJ5gs49L0/UdL0h3ddesYINRESKsknpgfUUmhn5RiI84Cx&#xA;LEhwsdVCqdSX+veWdUt7nU7K8sLbWA8ek21iFtrkCzkRDO0cQKiW4SWNo7e4aUGSqsqKK4q9hn8v&#xA;+byALfzVIhHUyWVrJUf7FY8VUf8ADvnv/qbv+5db/wDNWKqsHl/zgoPr+apJD+z6dlapT51D1xVE&#xA;waN5jjcs/mCSYEU4vbW4Hz+BUOKpl9VvfqXpfXG+s9frPpp1/wBSlKf51xVFYq7FXYq7FUpuvKPl&#xA;a7vrjULnSLOXULqFrW4vWgj9d4JFKPGZac+LIeJFemKsB0r8s9X8u6PqvlzQ/L/l+by9fT3DyQXV&#xA;xdpLdwTsTFHMy283pfVlPAGsnMCvwNU4qyLyv+VPkvRvKmmaDPo1jdrZcbiQywLMrXpRRNcJ6wcq&#xA;zsvbtt0xVmQAAoNgOgxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KsVu/PM4vb2HStFutWt9NZkvLiB4EJePaZLeOV0aZoiQG6CtVBLKRiqPv8Azt5S0/T7&#xA;a/vtXs7W2vYRcWLXE8UBnjKhlMQlZOVQw+/FWBaH+cWo6rr96bWwlOlXFnatpdjdwNa3cF7Pcx2w&#xA;S4JZ1khm+sLKk0XJeCPTkVOKotvPnmdNVtrG31jQtTtZ5Ly2v9Vt7aaKLTbiwKGVbiM3svq/3yJx&#xA;5x8ftE02xVD+Z/zO1yw8sPNp93p95dXa21zpuv28UjWJsZZOM8xthJPKzwKhHBXPIslPiJQKso8r&#xA;fml5Q8w0hS5Gmak07W8ej6m8Ntfsyk0P1UyNKA9DxDANt0xVU1Pztd2896bDQ7rU7DTZBBeXUEkC&#xA;lpqKTFbRSOrTOpYKR8PxfCvJqgKsg0zUrLVNNtdSsZRNZXsSXFtMKgNHIoZWoaEVB74qicVdirsV&#xA;QU+uaLbqWuNQtoVBoTJNGoB8NyMVS648/eRLcstx5j0uFkFXEl7bqQKVqauMVS+X84PyoiZFbzjo&#xA;xLmi8L+2cfSVchevfFUfqfn7yVpugy6/d63Zro0JVXvo5Vlj5OaKqmIvyY9gN8VYNrf/ADlD+T+k&#xA;6zb6ZJqcl366xO99aRGW2iWZQyl3BB+ywJCq1Oh32xVmug/mP5E1+41G30fXLS8l0o/7kBHIKRip&#xA;HLk1FZainJSR74qhp/za/K63uzaT+bdIjuB9pWvrcBe9GYvxB+ZxVEwfmT+XVwvKDzTo8q1pyS/t&#xA;WFfDaTFUzg8x+XrgkQapaSld2CTxMQPejYqjo5I5EEkbB0bdWUggj2IxVdirsVYT/wArf8mJ5k1T&#xA;Qri4eGXS47d3uDHI8chuPUqqemrH936XxVp126YqwGy/Ml73Ur+aXzDqFhrSaheCwhezkbRksYWI&#xA;tBIBFWZZ0KlmV1lDFvshaFVR8ufmT5dWe5stRn1bRYrqa8mW6sbeZ0reztdXFtMRBK/KO4mlMNxE&#xA;oBRvtK1VCrKNZ/O/yToVjBpnl+yutVuIlW2srKK3ntbZQg4xobieNUpReKiMOx2ouKsV8wXmo6FI&#xA;LvTdMht0aW31r9EWU6XFlcC3lWWS80qRkhoJFDRXUXBePNZugZnVekaTof5eebba0816XWaG59W5&#xA;t7m2uLiBVkuEEVwTFHIipKwXjJVa8hv8WKvO9b816frnmSa08tKw8v6fbpoVrLpoVJblvUEs9ppZ&#xA;BReTmGJPVUhYY0kkJUGNsVT7S/za0HyrqTeVNW0NdFtbVjFayaPz1G1XikUjrIsUMUysv1hQzCNl&#xA;LcqttiqF80fmP5Hs2e40e71O+uriZb6LSY7a5SwN2ihknuZGtxIkasqyPHHJVmG0bOSCqkeledtP&#xA;g8t6bDfeYNY0+ws4fqljBpdpJ9cJhiLfXL1WhnJM8kZ9OIfCgZfUqxPBVldp+eehaV+XFnrfmCZp&#xA;9chsreTUbKKCSJ2uHCq6iq+mrcm3HKg6VxVnP+N/K3+Gf8T/AF4foLjz+uenL0rx/u+PqVr241xV&#xA;1/5D8j6jX9IeXdMvKkk/WLO3lqSak/Gh74qlU/5NflNO3J/J+kA0p8FlBGPuRVGKpZP/AM48/kvO&#xA;AH8qWgA3HAyxn6SjriqAk/5xf/IyRy58shWJBPG8vlG3biJ+P4YqjdW/5x5/KPUPL0mhx+X7fT4Z&#xA;GRvrlmqpeKUNRS4YPIR4hiRirz/Xf+cMPJV9rtpd6dq91pukxpFHeabwWd5fSUIWjuGZfTLhatVG&#xA;3rSg2xVnXl3/AJxz/KXQ7zUrmPRk1Aamatb6iEu4oRyLcYFkUlNz1JLe+KqVx/zjF+RtxO80nlhQ&#xA;z7lY7u9iQH2SOdVH0DFUVB/zjn+SkDBk8q2xIFB6klxIPueRhiqYW/5IflDAFCeUdLIU1HqWySHr&#xA;XcuGr9OKppZ/lt+XVlJ6tn5W0e2k/nhsLWNvvWMYqn9vbW9tCsFtEkEKCiRRqEUDwCigGKqmKoS3&#xA;0jTbfU7vVIbdY7+/SGO8uBXlItvz9IN/qeo1PniqLxV2KqF/p9hqNpJZ6hbRXlnMAJbadFljcAgg&#xA;MjgqdxXfFXjP5jfl95ctNQs9OfU7ry75TeI3dvZwXjW2nLfQXEZKH1Y7mG3HpSFooo1UOwNBUYqr&#xA;aJ/zjr5UufL9y66r5i01fMkEdxqVgl6sHF5UDuskSQRI71NG9RCf1YqkOl/ltomjeZotP8v6xq1n&#xA;qUd5DpzaVHeiOWTTVnL3M88cFtbSQxGEM0MqyUJIAbkaYq9w0Lyp5Z0BZBoul22ntMFFxLBEqSS8&#xA;SSDNIBzkarE8nJNST3xVNcVdiqD1fR9M1nTZ9M1S3S7sLkBbi2k3R1BDUYDtUYqjMVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e74c4263-60af-408d-b06f-f1ef4df4ba12</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e74c4263-60af-408d-b06f-f1ef4df4ba12</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:accab207-5af1-413f-88ff-f63dd4ddc101</stRef:instanceID>
            <stRef:documentID>xmp.did:accab207-5af1-413f-88ff-f63dd4ddc101</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e3884725-3183-4665-96c1-0f6ebb3b5d23</stEvt:instanceID>
                  <stEvt:when>2014-07-22T20:40:04+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:accab207-5af1-413f-88ff-f63dd4ddc101</stEvt:instanceID>
                  <stEvt:when>2014-07-25T02:07:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e74c4263-60af-408d-b06f-f1ef4df4ba12</stEvt:instanceID>
                  <stEvt:when>2014-07-25T16:22:56+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>550.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -470.754 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 470.754 li
357.233 470.754 li
357.233 0 li
cp
clp
178.617 15.0266 mo
177.435 15.0266 176.478 14.0691 176.478 12.8879 cv
176.478 11.7065 177.435 10.749 178.617 10.749 cv
179.798 10.749 180.755 11.7065 180.755 12.8879 cv
180.755 14.0691 179.798 15.0266 178.617 15.0266 cv
cp
159.555 15.9863 mo
158.443 16.7222 157.021 17.3719 155.411 17.6924 cv
154.599 17.8606 153.737 17.9491 152.846 17.9646 cv
151.955 17.9824 151.036 17.9294 150.112 17.8083 cv
149.159 17.6857 148.279 17.4987 147.463 17.274 cv
147.262 17.2142 147.055 17.1593 146.866 17.0986 cv
146.681 17.0356 146.499 16.9737 146.32 16.9126 cv
145.951 16.764 145.591 16.6272 145.238 16.4658 cv
143.824 15.8432 142.553 15.2028 141.288 14.5457 cv
140.576 14.1726 139.861 13.7858 139.125 13.3792 cv
149.136 13.3792 li
156.249 15.5746 li
159.323 13.3792 li
162.481 13.3792 li
161.892 13.98 161.008 15.0485 159.555 15.9863 cv
cp
141.288 11.23 mo
142.553 10.5729 143.824 9.9325 145.238 9.30988 cv
145.591 9.1485 145.951 9.01166 146.32 8.8631 cv
146.499 8.802 146.681 8.74005 146.866 8.67706 cv
147.055 8.61627 147.262 8.56146 147.463 8.50159 cv
148.279 8.27698 149.159 8.08997 150.112 7.96735 cv
151.036 7.84625 151.955 7.79327 152.846 7.8111 cv
153.737 7.8266 154.599 7.9151 155.411 8.08319 cv
157.021 8.40369 158.443 9.05347 159.555 9.78937 cv
161.008 10.7272 161.892 11.7955 162.481 12.3965 cv
159.323 12.3965 li
156.249 10.2012 li
149.136 12.3965 li
139.125 12.3965 li
139.861 11.9897 140.576 11.603 141.288 11.23 cv
cp
197.678 9.78937 mo
198.791 9.05347 200.213 8.40369 201.823 8.08319 cv
202.634 7.9151 203.497 7.8266 204.388 7.8111 cv
205.278 7.79327 206.197 7.84625 207.122 7.96735 cv
208.074 8.08997 208.955 8.27698 209.771 8.50159 cv
209.972 8.56146 210.179 8.61627 210.367 8.67706 cv
210.552 8.74005 210.734 8.802 210.913 8.8631 cv
211.282 9.01166 211.642 9.1485 211.996 9.30988 cv
213.41 9.9325 214.681 10.5729 215.946 11.23 cv
216.657 11.603 217.373 11.9899 218.108 12.3965 cv
208.097 12.3965 li
200.984 10.201 li
197.911 12.3965 li
194.752 12.3965 li
195.341 11.7955 196.225 10.7271 197.678 9.78937 cv
cp
215.946 14.5457 mo
214.681 15.2028 213.41 15.8432 211.996 16.4658 cv
211.642 16.6272 211.282 16.764 210.913 16.9126 cv
210.734 16.9737 210.552 17.0356 210.367 17.0986 cv
210.179 17.1593 209.972 17.2142 209.771 17.274 cv
208.955 17.4987 208.074 17.6857 207.122 17.8083 cv
206.197 17.9294 205.278 17.9824 204.388 17.9646 cv
203.497 17.9491 202.634 17.8606 201.823 17.6924 cv
200.213 17.3719 198.791 16.7222 197.678 15.9863 cv
196.225 15.0485 195.341 13.98 194.752 13.3792 cv
197.911 13.3792 li
200.984 15.5745 li
208.097 13.3792 li
218.108 13.3792 li
217.373 13.7859 216.657 14.1726 215.946 14.5457 cv
cp
181.863 14.0923 mo
187.293 16.9162 li
190.991 13.3792 li
193.775 13.3792 li
193.775 13.3831 193.774 13.3864 193.774 13.3904 cv
193.761 13.528 193.759 13.6959 193.789 13.8832 cv
193.819 14.0701 193.846 14.2941 193.923 14.5248 cv
193.994 14.759 194.077 15.0207 194.203 15.2876 cv
194.318 15.5636 194.475 15.8409 194.649 16.1393 cv
195.013 16.7217 195.498 17.3379 196.115 17.9211 cv
196.732 18.5049 197.479 19.0555 198.34 19.5155 cv
199.196 19.9755 200.179 20.3459 201.214 20.5717 cv
203.281 21.0349 205.555 20.9232 207.633 20.3638 cv
208.707 20.0768 209.657 19.7274 210.517 19.349 cv
210.732 19.2496 210.939 19.1605 211.148 19.0568 cv
211.358 18.9477 211.565 18.8403 211.768 18.7345 cv
212.147 18.5113 212.518 18.2985 212.856 18.0757 cv
213.346 17.761 213.809 17.4509 214.255 17.1429 cv
214.456 17.1934 214.661 17.2386 214.872 17.2743 cv
215.373 17.3669 215.781 17.4622 216.156 17.6002 cv
216.529 17.7341 216.864 17.8893 217.182 18.0862 cv
217.497 18.2849 217.798 18.5251 218.078 18.8561 cv
218.354 19.188 218.609 19.6157 218.763 20.1948 cv
218.768 19.5977 218.672 19.0788 218.54 18.6163 cv
218.404 18.1542 218.235 17.7433 218.033 17.3437 cv
217.828 16.9453 217.588 16.5571 217.27 16.1548 cv
217.089 15.9214 216.871 15.6852 216.619 15.4482 cv
217.265 14.9679 219.234 13.9776 220.457 13.3792 cv
222.193 13.3792 li
222.417 14.3723 223.301 15.1154 224.362 15.1154 cv
225.423 15.1154 226.307 14.3723 226.531 13.3792 cv
228.441 13.3792 li
231.452 15.6354 li
250.277 12.8878 li
231.452 10.1403 li
228.441 12.3965 li
226.531 12.3965 li
226.307 11.4034 225.423 10.6603 224.362 10.6603 cv
223.301 10.6603 222.417 11.4034 222.193 12.3965 cv
220.457 12.3965 li
219.234 11.7981 217.265 10.8077 216.619 10.3275 cv
216.871 10.0905 217.089 9.85419 217.27 9.62085 cv
217.588 9.21857 217.828 8.83038 218.033 8.43195 cv
218.235 8.03229 218.404 7.62146 218.54 7.15936 cv
218.672 6.6969 218.768 6.17798 218.763 5.58087 cv
218.609 6.15997 218.354 6.58759 218.078 6.91949 cv
217.798 7.25049 217.497 7.49078 217.182 7.68945 cv
216.864 7.88635 216.529 8.04156 216.156 8.17548 cv
215.781 8.31348 215.373 8.40875 214.872 8.50134 cv
214.661 8.53705 214.456 8.58228 214.255 8.63269 cv
213.809 8.32477 213.346 8.01459 212.856 7.69977 cv
212.518 7.47705 212.147 7.26434 211.768 7.0412 cv
211.565 6.93536 211.358 6.828 211.148 6.71887 cv
210.939 6.61517 210.732 6.52606 210.517 6.4267 cv
209.657 6.04828 208.707 5.69879 207.633 5.41187 cv
205.555 4.85248 203.281 4.74078 201.214 5.20398 cv
200.179 5.42969 199.196 5.80017 198.34 6.26019 cv
197.479 6.72015 196.732 7.27075 196.115 7.85449 cv
195.498 8.43774 195.013 9.05396 194.649 9.63635 cv
194.475 9.93475 194.318 10.2121 194.203 10.4881 cv
194.077 10.7549 193.994 11.0167 193.923 11.2509 cv
193.846 11.4816 193.819 11.7054 193.789 11.8925 cv
193.759 12.0798 193.761 12.2477 193.774 12.3853 cv
193.774 12.3892 193.775 12.3926 193.775 12.3965 cv
190.991 12.3965 li
187.293 8.8595 li
181.863 11.6833 li
181.513 10.7406 180.764 9.99176 179.821 9.64178 cv
182.645 4.21136 li
178.617 0 li
174.588 4.21136 li
177.412 9.64178 li
176.469 9.99176 175.721 10.7406 175.371 11.6833 cv
169.94 8.8595 li
166.243 12.3965 li
163.458 12.3965 li
163.459 12.3926 163.459 12.3892 163.46 12.3853 cv
163.472 12.2477 163.474 12.0798 163.444 11.8925 cv
163.414 11.7054 163.387 11.4816 163.31 11.2509 cv
163.24 11.0167 163.156 10.7549 163.03 10.4881 cv
162.916 10.2121 162.758 9.93475 162.584 9.63635 cv
162.221 9.05396 161.736 8.43774 161.118 7.85449 cv
160.501 7.27075 159.754 6.72015 158.894 6.26019 cv
158.037 5.80017 157.054 5.42969 156.019 5.20398 cv
153.952 4.74078 151.678 4.85248 149.6 5.41187 cv
148.527 5.69879 147.576 6.04828 146.716 6.4267 cv
146.501 6.52606 146.295 6.61517 146.085 6.71887 cv
145.875 6.828 145.669 6.93536 145.465 7.0412 cv
145.086 7.26434 144.715 7.47705 144.378 7.69977 cv
143.887 8.01459 143.425 8.32477 142.979 8.63269 cv
142.777 8.58228 142.573 8.53705 142.361 8.50134 cv
141.86 8.40875 141.453 8.31348 141.078 8.17548 cv
140.704 8.04156 140.369 7.88635 140.052 7.68945 cv
139.736 7.49078 139.435 7.25049 139.155 6.91949 cv
138.88 6.58759 138.625 6.15997 138.47 5.58087 cv
138.466 6.17798 138.561 6.6969 138.693 7.15936 cv
138.829 7.62146 138.998 8.03229 139.2 8.43195 cv
139.405 8.83038 139.645 9.21857 139.963 9.62085 cv
140.145 9.85419 140.362 10.0905 140.615 10.3275 cv
139.969 10.8077 137.999 11.798 136.776 12.3965 cv
135.04 12.3965 li
134.816 11.4034 133.932 10.6603 132.871 10.6603 cv
131.81 10.6603 130.926 11.4034 130.702 12.3965 cv
128.793 12.3965 li
125.781 10.1403 li
106.956 12.8878 li
125.781 15.6354 li
128.793 13.3792 li
130.702 13.3792 li
130.927 14.3723 131.81 15.1154 132.871 15.1154 cv
133.932 15.1154 134.816 14.3723 135.04 13.3792 cv
136.776 13.3792 li
137.999 13.9775 139.969 14.9679 140.615 15.4482 cv
140.362 15.6852 140.145 15.9214 139.963 16.1548 cv
139.645 16.5571 139.405 16.9453 139.2 17.3437 cv
138.998 17.7433 138.829 18.1542 138.693 18.6163 cv
138.561 19.0788 138.466 19.5977 138.47 20.1948 cv
138.625 19.6157 138.88 19.188 139.155 18.8561 cv
139.435 18.5251 139.736 18.2849 140.052 18.0862 cv
140.369 17.8893 140.704 17.7341 141.078 17.6002 cv
141.453 17.4622 141.86 17.3669 142.361 17.2743 cv
142.573 17.2386 142.777 17.1934 142.979 17.1429 cv
143.425 17.4509 143.887 17.761 144.378 18.0757 cv
144.715 18.2985 145.086 18.5113 145.465 18.7345 cv
145.669 18.8403 145.875 18.9477 146.085 19.0568 cv
146.295 19.1605 146.501 19.2496 146.716 19.349 cv
147.576 19.7274 148.527 20.0768 149.6 20.3638 cv
151.678 20.9232 153.952 21.0349 156.019 20.5717 cv
157.054 20.3459 158.037 19.9755 158.894 19.5155 cv
159.754 19.0555 160.501 18.5049 161.118 17.9211 cv
161.736 17.3379 162.221 16.7217 162.584 16.1393 cv
162.758 15.8409 162.916 15.5636 163.03 15.2876 cv
163.156 15.0207 163.24 14.759 163.31 14.5248 cv
163.387 14.2941 163.414 14.0701 163.444 13.8832 cv
163.474 13.6959 163.472 13.528 163.46 13.3904 cv
163.459 13.3864 163.459 13.3831 163.458 13.3792 cv
166.242 13.3792 li
169.94 16.9162 li
175.371 14.0923 li
175.721 15.0352 176.469 15.7839 177.412 16.1339 cv
174.588 21.5644 li
178.617 25.7757 li
182.645 21.5644 li
179.821 16.1339 li
180.764 15.7839 181.513 15.0351 181.863 14.0923 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
124.793 390.384 mo
115.954 390.415 102.451 390.338 102.242 391.089 cv
102.033 391.84 116.215 391.669 125.002 391.701 cv
143.724 391.77 165.511 391.238 165.511 391.089 cv
165.511 390.94 143.519 390.317 124.793 390.384 cv
cp
f
40.7179 391.703 mo
49.5567 391.671 63.0604 391.749 63.2695 390.998 cv
63.4782 390.246 49.2955 390.417 40.5091 390.385 cv
21.7877 390.317 .00012207 390.848 .00012207 390.998 cv
.00012207 391.147 21.9922 391.769 40.7179 391.703 cv
cp
f
99.1819 390.719 mo
98.5188 390.548 97.2035 390.282 95.3686 390.261 cv
95.4659 390.207 95.5535 390.146 95.6299 390.077 cv
95.8523 389.877 96.0762 389.472 96.0776 389.017 cv
96.0776 388.636 95.9177 388.291 95.6161 388.02 cv
95.2144 387.658 94.5984 387.772 94.3857 388.189 cv
94.2814 388.394 94.2982 388.627 94.4316 388.811 cv
94.5677 389 94.622 389.148 94.579 389.207 cv
94.519 389.285 94.2744 389.359 94.1411 389.308 cv
93.9173 389.223 93.7281 388.749 93.8477 388.419 cv
94.0339 387.909 94.2188 387.51 94.9112 387.023 cv
95.37 386.729 li
95.7063 386.513 96.1456 386.23 96.4737 386.023 cv
96.3222 386.912 96.4474 387.665 96.8436 388.267 cv
97.3148 388.984 98.053 389.275 98.4159 389.333 cv
100.023 389.588 100.922 388.836 101.035 387.125 cv
101.081 386.374 100.724 385.738 100.104 385.465 cv
100.047 385.439 99.8395 385.357 99.585 385.357 cv
99.2151 385.357 98.9331 385.535 98.7927 385.861 cv
98.6327 386.226 99.0567 386.631 99.339 386.756 cv
99.592 386.868 99.7351 387.036 99.7672 387.283 cv
99.7907 387.459 99.8366 387.787 99.6405 388.033 cv
99.4835 388.233 99.193 388.355 98.776 388.395 cv
98.3338 388.444 97.8403 388.121 97.5511 387.64 cv
97.3357 387.281 97.0576 386.524 97.6054 385.475 cv
98.245 384.793 98.9456 384.447 99.6879 384.447 cv
100.733 384.447 101.615 385.147 101.925 385.588 cv
102.584 386.522 102.511 387.768 101.738 388.762 cv
101.399 389.198 100.698 390.1 99.1819 390.719 cv
cp
101.738 393.675 mo
102.51 394.67 102.584 395.916 101.925 396.849 cv
101.615 397.29 100.732 397.989 99.6879 397.989 cv
98.9456 397.989 98.245 397.644 97.6054 396.962 cv
97.0576 395.912 97.3357 395.156 97.5511 394.797 cv
97.8403 394.315 98.331 393.987 98.776 394.042 cv
99.1916 394.082 99.4821 394.203 99.6393 394.402 cv
99.834 394.647 99.7907 394.975 99.7629 395.18 cv
99.7351 395.401 99.592 395.569 99.339 395.681 cv
99.0567 395.805 98.6327 396.211 98.7927 396.576 cv
98.9331 396.902 99.2151 397.08 99.585 397.08 cv
99.8395 397.08 100.047 396.997 100.104 396.972 cv
100.724 396.698 101.081 396.062 101.035 395.31 cv
100.913 393.446 99.8548 393.055 98.9887 393.055 cv
98.8092 393.055 98.616 393.072 98.4159 393.104 cv
98.053 393.162 97.3148 393.452 96.8436 394.17 cv
96.4474 394.772 96.3222 395.525 96.4737 396.414 cv
96.1428 396.205 95.698 395.919 95.3601 395.702 cv
94.9183 395.419 li
94.2188 394.927 94.0339 394.528 93.8477 394.018 cv
93.7281 393.688 93.9173 393.213 94.1411 393.129 cv
94.2744 393.074 94.5205 393.151 94.5775 393.229 cv
94.622 393.289 94.5677 393.437 94.4316 393.626 cv
94.2982 393.81 94.2814 394.043 94.3857 394.248 cv
94.5984 394.665 95.2144 394.778 95.6161 394.417 cv
95.9177 394.145 96.0776 393.801 96.0776 393.42 cv
96.0762 392.965 95.8523 392.56 95.6299 392.36 cv
95.5535 392.292 95.4659 392.23 95.3686 392.175 cv
97.2035 392.155 98.5188 391.889 99.1819 391.718 cv
100.698 392.337 101.399 393.239 101.738 393.675 cv
cp
92.616 391.218 mo
94.4331 390.985 96.0345 390.985 97.3954 391.218 cv
96.0345 391.453 94.4359 391.451 92.616 391.218 cv
cp
82.7554 394.236 mo
80.8287 392.903 78.7642 391.89 76.6121 391.218 cv
78.7642 390.547 80.8287 389.533 82.7554 388.201 cv
84.6836 389.533 86.7466 390.547 88.8987 391.218 cv
86.7466 391.89 84.6836 392.903 82.7554 394.236 cv
cp
88.5678 401.543 mo
88.7041 402.16 88.768 403.57 88.0255 404.495 cv
87.4876 405.165 86.6188 405.423 85.4774 405.255 cv
84.6419 405.131 83.7425 404.416 83.0725 403.345 cv
83.0181 403.253 82.9056 403.1 82.7554 403.1 cv
82.5997 403.1 82.5038 403.254 82.4495 403.339 cv
81.7796 404.414 80.8773 405.131 80.0335 405.255 cv
78.8795 405.422 77.9939 405.161 77.4504 404.468 cv
76.7651 403.595 76.7679 402.251 76.9361 401.561 cv
77.5034 399.239 82.0201 395.992 82.7554 395.477 cv
83.495 396 88.0742 399.314 88.5678 401.543 cv
cp
76.9445 380.894 mo
76.8082 380.277 76.7443 378.866 77.4866 377.942 cv
77.9176 377.404 78.5557 377.132 79.3813 377.132 cv
79.5857 377.132 79.8054 377.149 80.0335 377.182 cv
80.8717 377.305 81.7711 378.021 82.4412 379.097 cv
82.5456 379.261 82.6455 379.336 82.7568 379.336 cv
82.8999 379.336 82.9931 379.21 83.0612 379.099 cv
83.7327 378.023 84.6363 377.306 85.4774 377.182 cv
86.6382 377.012 87.5169 377.277 88.0602 377.969 cv
88.7458 378.841 88.7444 380.185 88.5761 380.876 cv
88.0089 383.198 83.4922 386.445 82.7568 386.96 cv
82.017 386.437 77.4379 383.123 76.9445 380.894 cv
cp
68.1152 391.218 mo
69.4749 390.985 71.075 390.985 72.8962 391.218 cv
71.0778 391.452 69.4749 391.452 68.1152 391.218 cv
cp
71.6645 394.018 mo
71.4852 394.511 71.292 394.927 70.6024 395.413 cv
70.5148 395.469 70.3076 395.602 70.0574 395.762 cv
69.7348 395.969 69.34 396.223 69.0383 396.414 cv
69.1885 395.525 69.0649 394.771 68.6687 394.169 cv
68.196 393.452 67.4578 393.162 67.0964 393.104 cv
66.896 393.072 66.7029 393.055 66.5237 393.055 cv
65.6547 393.055 64.5953 393.446 64.4772 395.311 cv
64.4299 396.061 64.7858 396.698 65.4086 396.972 cv
65.4658 396.997 65.6728 397.08 65.9257 397.08 cv
66.2954 397.08 66.5777 396.902 66.7182 396.577 cv
66.8794 396.211 66.4554 395.805 66.1719 395.681 cv
65.9202 395.57 65.7769 395.401 65.7437 395.15 cv
65.72 394.975 65.6769 394.647 65.8715 394.402 cv
66.0286 394.204 66.3192 394.082 66.7362 394.042 cv
67.1769 393.991 67.6703 394.315 67.9596 394.797 cv
68.1752 395.155 68.4532 395.912 67.9055 396.962 cv
67.2659 397.644 66.5652 397.989 65.8242 397.989 cv
64.7802 397.989 63.8974 397.29 63.5859 396.849 cv
62.9286 395.915 63.0023 394.669 63.7737 393.675 cv
64.1117 393.239 64.8095 392.338 66.3289 391.718 cv
66.9921 391.889 68.3086 392.155 70.1422 392.175 cv
70.0464 392.23 69.9573 392.292 69.8808 392.36 cv
69.6584 392.561 69.4332 392.967 69.4346 393.422 cv
69.4346 393.802 69.5944 394.146 69.8947 394.417 cv
70.2979 394.778 70.915 394.665 71.1265 394.247 cv
71.2307 394.042 71.214 393.81 71.0807 393.626 cv
70.9443 393.437 70.8901 393.289 70.9333 393.23 cv
70.9915 393.152 71.2307 393.073 71.3698 393.129 cv
71.5964 393.214 71.7868 393.678 71.6645 394.018 cv
cp
63.7737 388.762 mo
63.0009 387.768 62.9286 386.522 63.5874 385.587 cv
63.8974 385.147 64.7789 384.447 65.8228 384.447 cv
66.5652 384.447 67.2659 384.793 67.9055 385.475 cv
68.4532 386.524 68.1752 387.281 67.9596 387.64 cv
67.6703 388.122 67.1783 388.441 66.7362 388.395 cv
66.3192 388.355 66.0286 388.233 65.8715 388.035 cv
65.6769 387.789 65.72 387.462 65.7479 387.258 cv
65.7769 387.036 65.9202 386.868 66.1732 386.756 cv
66.4554 386.631 66.8794 386.225 66.7182 385.861 cv
66.5777 385.535 66.2954 385.357 65.9257 385.357 cv
65.6728 385.357 65.4658 385.439 65.41 385.465 cv
64.7858 385.738 64.4299 386.374 64.4772 387.125 cv
64.5953 388.991 65.6547 389.382 66.5237 389.382 cv
66.7029 389.382 66.896 389.365 67.0964 389.333 cv
67.4578 389.275 68.196 388.985 68.6687 388.268 cv
69.0649 387.666 69.1885 386.912 69.0383 386.023 cv
69.34 386.214 69.7348 386.467 70.0574 386.675 cv
70.3076 386.835 70.5148 386.968 70.5941 387.018 cv
71.292 387.51 71.4852 387.926 71.6645 388.419 cv
71.7868 388.759 71.5964 389.223 71.3698 389.308 cv
71.2307 389.361 70.9915 389.284 70.9345 389.207 cv
70.8901 389.148 70.9443 389 71.0807 388.811 cv
71.214 388.627 71.2307 388.395 71.1265 388.189 cv
70.915 387.773 70.3008 387.655 69.8947 388.02 cv
69.5944 388.291 69.4346 388.635 69.4346 389.015 cv
69.4332 389.469 69.6584 389.875 69.8808 390.077 cv
69.9573 390.145 70.0464 390.207 70.1422 390.261 cv
68.307 390.281 66.9921 390.548 66.3289 390.719 cv
64.808 390.098 64.1117 389.197 63.7737 388.762 cv
cp
103.654 387.13 mo
103.682 386.312 103.447 385.524 102.973 384.85 cv
102.282 383.873 101.192 383.312 99.9812 383.312 cv
99.859 383.314 li
99.4682 383.326 99.0762 383.397 98.6926 383.523 cv
98.4646 383.598 98.2241 383.712 98.0196 383.84 cv
97.5749 384.033 96.8269 384.55 95.9607 385.149 cv
94.8876 385.893 93.671 386.734 92.7829 387.124 cv
92.349 387.315 91.8487 387.355 91.5052 387.355 cv
91.2298 387.355 90.9505 387.329 90.7169 387.281 cv
89.8801 387.108 89.192 386.337 89.1141 385.486 cv
89.0377 384.636 89.5784 383.754 90.3709 383.435 cv
90.8408 383.244 91.3996 383.284 91.7347 383.522 cv
91.9528 383.678 92.1308 383.982 92.1488 384.229 cv
92.156 384.345 92.1294 384.435 92.0668 384.493 cv
91.9571 384.597 91.9 384.609 91.8806 384.609 cv
91.8292 384.609 91.7499 384.519 91.6721 384.433 cv
91.5177 384.261 91.3064 384.024 90.9366 384.024 cv
90.8644 384.024 90.788 384.033 90.71 384.052 cv
90.6183 384.074 90.3041 384.169 90.1497 384.479 cv
90.0304 384.718 90.0442 385.01 90.1915 385.348 cv
90.4222 385.873 91.1648 386.287 91.818 386.225 cv
92.5799 386.164 93.1234 385.723 93.3084 385.017 cv
93.5404 384.126 93.1539 383.074 92.406 382.571 cv
92.1127 382.373 91.6624 382.259 91.1702 382.259 cv
90.6197 382.259 90.0915 382.4 89.7188 382.644 cv
89.5465 382.758 88.0394 383.803 88.2147 385.667 cv
88.3384 386.983 89.2559 387.942 90.6698 388.233 cv
90.8506 388.27 91.052 388.289 91.2703 388.289 cv
91.9155 388.289 92.616 388.13 93.2041 387.867 cv
92.9803 388.278 92.887 388.682 92.926 389.076 cv
92.9774 389.604 93.2652 389.998 93.5168 390.19 cv
93.5766 390.235 93.6392 390.275 93.7045 390.311 cv
92.6173 390.388 91.5276 390.552 90.4501 390.801 cv
87.8643 390.206 85.5676 389.206 83.4365 387.749 cv
85.1285 386.587 88.6165 383.941 89.292 381.475 cv
89.9051 379.243 89.4909 377.583 88.0618 376.542 cv
87.6351 376.232 86.9371 376.045 86.196 376.045 cv
85.9153 376.045 85.6441 376.072 85.3912 376.122 cv
84.4 376.322 83.5144 376.989 82.7554 378.106 cv
81.9992 376.989 81.1122 376.322 80.1195 376.122 cv
79.8664 376.072 79.5955 376.045 79.316 376.045 cv
78.5736 376.045 77.8773 376.232 77.4504 376.542 cv
76.0214 377.582 75.6069 379.242 76.2201 381.475 cv
76.9082 383.991 80.6339 386.756 82.0755 387.749 cv
79.9458 389.205 77.6479 390.205 75.0607 390.801 cv
73.9832 390.552 72.8948 390.388 71.8076 390.311 cv
71.873 390.275 71.9356 390.235 71.9952 390.19 cv
72.247 389.997 72.5346 389.603 72.5862 389.074 cv
72.6236 388.681 72.5304 388.277 72.3082 387.867 cv
73.0922 388.219 74.1196 388.38 74.8426 388.233 cv
76.2562 387.942 77.1752 386.983 77.2961 385.667 cv
77.4712 383.802 75.9657 382.758 75.7933 382.644 cv
75.4208 382.4 74.8911 382.259 74.3407 382.259 cv
73.8485 382.259 73.3981 382.373 73.1032 382.571 cv
72.3582 383.074 71.9704 384.125 72.2039 385.016 cv
72.3888 385.723 72.9309 386.164 73.694 386.225 cv
74.3518 386.279 75.094 385.863 75.3193 385.348 cv
75.4681 385.01 75.482 384.718 75.3623 384.478 cv
75.2081 384.169 74.8925 384.074 74.7993 384.052 cv
74.7228 384.033 74.6465 384.024 74.574 384.024 cv
74.2043 384.024 73.9945 384.261 73.8401 384.433 cv
73.7622 384.519 73.683 384.609 73.6315 384.609 cv
73.612 384.609 73.5552 384.597 73.4452 384.493 cv
73.3826 384.434 73.3548 384.346 73.3632 384.229 cv
73.3798 383.982 73.5581 383.679 73.7789 383.522 cv
74.114 383.283 74.6758 383.246 75.1413 383.434 cv
75.9337 383.754 76.4746 384.636 76.398 385.486 cv
76.3202 386.337 75.6321 387.108 74.7951 387.281 cv
74.5617 387.329 74.2807 387.355 74.0056 387.355 cv
73.6621 387.355 73.163 387.315 72.7265 387.124 cv
71.8396 386.734 70.6233 385.893 69.55 385.149 cv
68.6854 384.55 67.9374 384.033 67.5149 383.852 cv
67.2882 383.712 67.0477 383.598 66.8197 383.523 cv
66.436 383.397 66.0438 383.326 65.6519 383.314 cv
65.5295 383.312 li
64.3187 383.312 63.2302 383.873 62.5392 384.85 cv
62.0666 385.522 61.8303 386.309 61.8567 387.126 cv
61.8637 387.308 62.2126 389.045 62.7895 389.581 cv
63.087 389.957 63.7488 390.639 64.9665 391.211 cv
64.3688 391.485 63.8585 391.806 63.4749 392.15 cv
62.0109 393.459 61.8581 395.289 61.8567 395.308 cv
61.8303 396.127 62.0666 396.916 62.5392 397.587 cv
63.2302 398.564 64.3187 399.125 65.5295 399.125 cv
65.6519 399.123 li
66.0425 399.111 66.4345 399.04 66.8197 398.914 cv
67.0462 398.839 67.2867 398.726 67.4925 398.597 cv
67.9374 398.404 68.6854 397.886 69.55 397.287 cv
70.6233 396.544 71.8396 395.702 72.7265 395.313 cv
73.163 395.121 73.6636 395.081 74.0056 395.081 cv
74.2822 395.081 74.5617 395.108 74.7951 395.156 cv
75.6321 395.329 76.3202 396.1 76.398 396.951 cv
76.4746 397.801 75.9337 398.683 75.1413 399.002 cv
74.6743 399.191 74.1126 399.155 73.7776 398.915 cv
73.5581 398.758 73.3798 398.454 73.3632 398.208 cv
73.3548 398.091 73.3826 398.003 73.4452 397.944 cv
73.5552 397.839 73.612 397.828 73.6315 397.828 cv
73.683 397.828 73.7622 397.917 73.8401 398.004 cv
73.9945 398.176 74.2043 398.413 74.574 398.413 cv
74.6465 398.413 74.7228 398.404 74.7993 398.385 cv
74.8925 398.363 75.2067 398.268 75.361 397.96 cv
75.482 397.72 75.4667 397.426 75.3193 397.089 cv
75.094 396.572 74.3252 396.145 73.694 396.211 cv
72.9309 396.273 72.3888 396.714 72.2039 397.421 cv
71.9704 398.311 72.3567 399.362 73.1048 399.865 cv
73.3981 400.063 73.8485 400.177 74.3407 400.177 cv
74.8911 400.177 75.4208 400.037 75.7933 399.792 cv
75.9657 399.679 77.4712 398.634 77.2961 396.769 cv
77.1752 395.454 76.2562 394.494 74.8426 394.204 cv
74.1196 394.057 73.0922 394.218 72.3082 394.57 cv
72.5304 394.16 72.6236 393.756 72.5862 393.363 cv
72.5346 392.834 72.247 392.44 71.994 392.247 cv
71.9356 392.202 71.8716 392.162 71.8076 392.126 cv
72.8948 392.049 73.9832 391.885 75.0607 391.636 cv
77.6479 392.232 79.9458 393.231 82.0755 394.688 cv
80.6339 395.68 76.9082 398.446 76.2201 400.962 cv
75.6069 403.195 76.0214 404.855 77.4504 405.895 cv
77.8773 406.205 78.5736 406.392 79.316 406.392 cv
79.5955 406.392 79.8664 406.365 80.1195 406.314 cv
81.1122 406.115 81.9992 405.448 82.7554 404.331 cv
83.5144 405.448 84.4 406.115 85.3912 406.314 cv
85.6441 406.365 85.9153 406.392 86.196 406.392 cv
86.9371 406.392 87.6351 406.205 88.0618 405.895 cv
89.4909 404.854 89.9051 403.194 89.292 400.962 cv
88.6165 398.495 85.1285 395.85 83.4365 394.688 cv
85.5676 393.231 87.8658 392.231 90.4514 391.636 cv
91.5288 391.885 92.6173 392.049 93.7045 392.126 cv
93.6392 392.162 93.5766 392.202 93.5183 392.247 cv
93.2652 392.439 92.9774 392.832 92.926 393.361 cv
92.887 393.755 92.9803 394.159 93.2041 394.57 cv
92.616 394.307 91.9155 394.148 91.2703 394.148 cv
91.052 394.148 90.8506 394.167 90.6698 394.204 cv
89.2559 394.494 88.3384 395.454 88.2147 396.769 cv
88.0394 398.634 89.5465 399.679 89.7188 399.792 cv
90.0915 400.037 90.6197 400.177 91.1702 400.177 cv
91.6624 400.177 92.1127 400.063 92.4075 399.865 cv
93.1539 399.362 93.5404 398.311 93.3084 397.419 cv
93.1234 396.714 92.5799 396.273 91.818 396.211 cv
91.7805 396.208 91.7416 396.206 91.7013 396.206 cv
91.0729 396.206 90.4083 396.594 90.1915 397.089 cv
90.0442 397.426 90.0304 397.719 90.1497 397.958 cv
90.3041 398.267 90.6183 398.363 90.7115 398.385 cv
90.788 398.404 90.8644 398.413 90.9366 398.413 cv
91.3064 398.413 91.5177 398.176 91.6721 398.003 cv
91.7486 397.917 91.8278 397.828 91.8791 397.828 cv
91.8987 397.828 91.9557 397.839 92.0655 397.944 cv
92.1279 398.003 92.156 398.091 92.1475 398.208 cv
92.1308 398.455 91.9528 398.759 91.7347 398.915 cv
91.3969 399.156 90.838 399.191 90.3709 399.003 cv
89.5784 398.683 89.0377 397.801 89.1141 396.951 cv
89.192 396.1 89.8801 395.329 90.7169 395.156 cv
90.9491 395.108 91.2298 395.081 91.5052 395.081 cv
91.8487 395.081 92.3478 395.121 92.7844 395.313 cv
93.671 395.702 94.8876 396.544 95.9607 397.287 cv
96.8269 397.886 97.5749 398.404 97.9974 398.585 cv
98.2255 398.726 98.466 398.839 98.6926 398.914 cv
99.0762 399.04 99.4682 399.111 99.859 399.123 cv
99.9812 399.125 li
101.192 399.125 102.282 398.564 102.973 397.587 cv
103.445 396.916 103.68 396.129 103.654 395.313 cv
103.65 395.138 103.297 393.389 102.723 392.856 cv
102.425 392.48 101.762 391.797 100.544 391.226 cv
101.146 390.951 101.647 390.636 102.037 390.287 cv
103.327 389.132 103.644 387.476 103.654 387.13 cv
cp
f
78.2472 188.356 mo
78.1792 190.023 81.2446 189.747 81.9015 191.35 cv
82.232 189.984 81.7033 188.45 80.6016 187.578 cv
79.6429 186.819 78.3045 186.956 78.2472 188.356 cv
cp
f
83.6096 191.35 mo
84.2664 189.747 87.332 190.023 87.2638 188.356 cv
87.2064 186.956 85.8681 186.819 84.9094 187.578 cv
83.8077 188.45 83.279 189.984 83.6096 191.35 cv
cp
f
83.7294 183.983 mo
83.3276 184.064 83.0103 184.357 82.7555 184.762 cv
82.5007 184.357 82.1835 184.064 81.7817 183.983 cv
81.4709 183.921 81.0748 183.968 80.8587 184.125 cv
80.3015 184.531 80.2474 185.172 80.4343 185.855 cv
80.7322 186.941 82.1929 187.594 82.7555 188.573 cv
83.2339 187.625 84.7787 186.941 85.0766 185.855 cv
85.2636 185.172 85.2095 184.531 84.6523 184.125 cv
84.4361 183.968 84.0401 183.921 83.7294 183.983 cv
cp
f
86.9627 197.208 mo
86.6205 198.004 85.589 200.029 82.7555 200.029 cv
79.922 200.029 78.8905 198.004 78.5485 197.208 cv
78.1108 194.214 80.5136 192.945 81.8223 193.407 cv
80.9043 194.389 81.243 195.803 81.4364 196.478 cv
81.4455 196.509 81.4563 196.54 81.4665 196.571 cv
81.1596 196.688 80.8629 196.908 80.8805 197.171 cv
80.938 198.025 81.8379 198.144 82.2096 198.117 cv
82.4045 198.103 82.5863 198.061 82.7555 197.997 cv
82.9248 198.061 83.1066 198.103 83.3013 198.117 cv
83.6731 198.144 84.5731 198.025 84.6305 197.171 cv
84.6482 196.908 84.3513 196.688 84.0445 196.571 cv
84.0546 196.54 84.0654 196.509 84.0745 196.478 cv
84.268 195.803 84.6068 194.389 83.6887 193.407 cv
84.9976 192.945 87.4003 194.214 86.9627 197.208 cv
cp
82.7555 193.997 mo
83.4936 194.74 83.0341 195.549 82.8732 195.863 cv
82.8399 195.928 82.7994 195.987 82.7555 196.043 cv
82.7117 195.987 82.6712 195.928 82.6377 195.863 cv
82.4769 195.549 82.0174 194.74 82.7555 193.997 cv
cp
89.9394 188.895 mo
88.8181 188.538 87.7515 189.304 87.3971 189.962 cv
87.0932 190.526 87.0229 191.897 88.2967 192.42 cv
89.2992 192.832 89.9426 191.651 89.2908 191.204 cv
89.0164 191.016 88.7017 190.74 88.7942 190.441 cv
88.8811 190.16 89.2714 189.9 89.5972 189.906 cv
90.1226 189.915 90.6955 190.616 90.692 191.245 cv
90.6871 192.095 90.6036 192.792 89.8616 193.845 cv
89.5903 194.191 88.2342 195.96 87.8252 196.468 cv
87.4474 192.578 84.6353 192.32 83.7513 192.484 cv
83.3663 192.555 83.0371 192.654 82.7555 192.775 cv
82.474 192.654 82.1446 192.555 81.7596 192.484 cv
80.8758 192.32 78.0635 192.578 77.6857 196.468 cv
77.2768 195.96 75.9208 194.191 75.6493 193.845 cv
74.9075 192.792 74.8238 192.095 74.819 191.245 cv
74.8155 190.616 75.3885 189.915 75.9137 189.906 cv
76.2396 189.9 76.6298 190.16 76.717 190.441 cv
76.8094 190.74 76.4945 191.016 76.2203 191.204 cv
75.5683 191.651 76.2117 192.832 77.2142 192.42 cv
78.4882 191.897 78.4178 190.526 78.1139 189.962 cv
77.7596 189.304 76.6929 188.538 75.5715 188.895 cv
74.9138 189.103 73.4519 190.171 74.5081 192.795 cv
73.7251 191.537 71.9254 190.387 70.5803 190.197 cv
68.7117 189.932 67.015 190.661 66.2172 192.371 cv
65.2902 194.359 66.2191 196.267 66.7723 196.999 cv
67.5125 197.979 69.1835 198.575 70.1628 198.325 cv
72.2328 197.796 73.525 194.592 71.1041 193.5 cv
70.3328 193.152 69.2265 193.325 68.7331 193.849 cv
67.916 194.717 68.4896 195.313 68.7631 195.49 cv
69.8223 196.177 70.3698 194.542 70.9334 195.648 cv
71.2208 196.213 70.5299 196.993 69.839 197.19 cv
69.1587 197.383 68.3103 197.146 67.6775 196.584 cv
66.6626 195.684 66.3261 194.076 66.895 192.843 cv
67.4639 191.612 68.9063 190.825 70.25 191.014 cv
71.0685 191.129 72.3512 191.551 73.1585 192.313 cv
74.3803 193.467 75.9074 195.686 77.1348 197.381 cv
76.9694 197.295 76.7942 197.218 76.6068 197.157 cv
76.2731 197.049 75.9078 196.979 75.53 196.99 cv
75.4359 196.992 75.3412 197.005 75.2471 197.014 cv
75.1531 197.022 75.058 197.042 74.9621 197.064 cv
74.7706 197.111 74.5642 197.19 74.3806 197.319 cv
74.3378 197.349 74.2942 197.38 74.2497 197.411 cv
74.2106 197.447 74.171 197.484 74.1308 197.521 cv
74.0466 197.594 73.9832 197.684 73.9132 197.773 cv
73.8764 197.816 73.8532 197.867 73.8231 197.915 cv
73.7961 197.964 73.7635 198.012 73.7422 198.064 cv
73.6991 198.169 73.6504 198.274 73.6264 198.386 cv
73.5607 198.606 73.5532 198.843 73.5724 199.069 cv
73.6055 199.29 73.6635 199.501 73.7588 199.675 cv
73.9394 200.029 74.204 200.255 74.4203 200.349 cv
74.527 200.399 74.6265 200.412 74.7031 200.401 cv
74.7798 200.389 74.835 200.351 74.8711 200.286 cv
74.9072 200.221 74.9161 200.149 74.9077 200.076 cv
74.9034 200.039 74.8946 200.002 74.8822 199.965 cv
74.8709 199.927 74.858 199.885 74.841 199.845 cv
74.776 199.683 74.6797 199.496 74.6232 199.288 cv
74.5892 199.186 74.5797 199.078 74.5705 198.972 cv
74.5735 198.87 74.5778 198.765 74.6125 198.662 cv
74.6365 198.558 74.6921 198.466 74.7426 198.382 cv
74.8044 198.307 74.8649 198.237 74.9353 198.2 cv
74.9994 198.15 75.091 198.118 75.198 198.088 cv
75.3052 198.055 75.434 198.046 75.5561 198.025 cv
75.8073 198.006 76.0693 198.024 76.3307 198.072 cv
76.5929 198.117 76.8488 198.208 77.0927 198.306 cv
77.3366 198.403 77.5644 198.533 77.7786 198.654 cv
78.0314 198.807 78.2592 198.96 78.4569 199.098 cv
78.7193 199.404 79.0716 199.807 79.0716 199.807 cv
79.0716 199.807 79.5272 200.232 79.7887 200.416 cv
80.6869 201.049 81.7166 201.354 82.7555 201.337 cv
83.7945 201.354 84.8243 201.049 85.7225 200.416 cv
85.9072 200.286 86.5488 199.624 86.9958 199.139 cv
87.2064 198.991 87.4542 198.822 87.7325 198.654 cv
87.9465 198.533 88.1745 198.403 88.4183 198.306 cv
88.6622 198.208 88.9181 198.117 89.1803 198.072 cv
89.4417 198.024 89.7038 198.006 89.9548 198.025 cv
90.0769 198.046 90.2057 198.055 90.3129 198.088 cv
90.4202 198.118 90.5115 198.15 90.5758 198.2 cv
90.6461 198.237 90.7066 198.307 90.7685 198.382 cv
90.8189 198.466 90.8745 198.558 90.8985 198.662 cv
90.9332 198.765 90.9374 198.87 90.9405 198.972 cv
90.9315 199.078 90.9217 199.186 90.8878 199.288 cv
90.8314 199.496 90.735 199.683 90.67 199.845 cv
90.653 199.885 90.64 199.927 90.629 199.965 cv
90.6163 200.002 90.6076 200.039 90.6033 200.076 cv
90.5948 200.149 90.6037 200.221 90.6398 200.286 cv
90.6759 200.351 90.7311 200.389 90.8078 200.401 cv
90.8844 200.412 90.9841 200.399 91.0906 200.349 cv
91.3069 200.255 91.5716 200.029 91.7522 199.675 cv
91.8475 199.501 91.9057 199.29 91.9386 199.069 cv
91.9579 198.843 91.9503 198.606 91.8847 198.386 cv
91.8606 198.274 91.8118 198.169 91.7688 198.064 cv
91.7474 198.012 91.7148 197.964 91.6879 197.915 cv
91.6577 197.867 91.6345 197.816 91.5977 197.773 cv
91.5278 197.684 91.4643 197.594 91.3803 197.521 cv
91.34 197.484 91.3003 197.447 91.2614 197.411 cv
91.217 197.38 91.1732 197.349 91.1303 197.319 cv
90.9468 197.19 90.7403 197.111 90.5491 197.064 cv
90.453 197.042 90.3578 197.022 90.264 197.014 cv
90.1699 197.005 90.075 196.992 89.9812 196.99 cv
89.6032 196.979 89.2378 197.049 88.9042 197.157 cv
88.7168 197.218 88.5415 197.295 88.3761 197.381 cv
89.6036 195.686 91.1306 193.467 92.3527 192.313 cv
93.1597 191.551 94.4427 191.129 95.2609 191.014 cv
96.6046 190.825 98.047 191.612 98.616 192.843 cv
99.1848 194.076 98.8485 195.684 97.8335 196.584 cv
97.2006 197.146 96.3522 197.383 95.672 197.19 cv
94.9813 196.993 94.2902 196.213 94.5775 195.648 cv
95.1413 194.542 95.6886 196.177 96.7479 195.49 cv
97.0215 195.313 97.5949 194.717 96.778 193.849 cv
96.2845 193.325 95.1784 193.152 94.4068 193.5 cv
91.986 194.592 93.2782 197.796 95.3483 198.325 cv
96.3274 198.575 97.9985 197.979 98.7387 196.999 cv
99.292 196.267 100.221 194.359 99.2937 192.371 cv
98.4961 190.661 96.7993 189.932 94.9306 190.197 cv
93.5855 190.387 91.7858 191.537 91.0031 192.795 cv
92.0591 190.171 90.5974 189.103 89.9394 188.895 cv
cp
f
93.0162 200.143 mo
93.0162 201.106 96.7879 200.277 97.6012 200.277 cv
98.4145 200.277 124.618 200.251 144.148 200.631 cv
153.165 200.806 162.727 202.53 162.727 199.849 cv
162.727 197.169 159.381 198.396 143.956 199.046 cv
124.373 199.872 98.7107 199.929 97.694 199.929 cv
96.6772 199.929 93.0162 199.16 93.0162 200.143 cv
cp
f
164.411 198.665 mo
163.803 198.665 163.311 199.158 163.311 199.765 cv
163.311 200.373 163.803 200.866 164.411 200.866 cv
165.018 200.866 165.511 200.373 165.511 199.765 cv
165.511 199.158 165.018 198.665 164.411 198.665 cv
cp
f
67.817 199.929 mo
66.8002 199.929 41.1374 199.872 21.5551 199.046 cv
6.13031 198.396 2.78418 197.169 2.78418 199.849 cv
2.78418 202.53 12.3458 200.806 21.3635 200.631 cv
40.8935 200.251 67.0965 200.277 67.9098 200.277 cv
68.7231 200.277 72.4948 201.106 72.4948 200.143 cv
72.4948 199.16 68.8337 199.929 67.817 199.929 cv
cp
f
1.1001 198.665 mo
.492615 198.665 .00012207 199.158 .00012207 199.765 cv
.00012207 200.373 .492615 200.866 1.1001 200.866 cv
1.7077 200.866 2.2002 200.373 2.2002 199.765 cv
2.2002 199.158 1.7077 198.665 1.1001 198.665 cv
cp
f
165.445 63.8687 mo
165.74 62.9659 164.988 62.3773 164.373 62.3748 cv
163.254 62.3703 160.774 63.4911 160.774 63.4911 cv
160.774 63.4911 162.978 64.6005 163.847 64.6102 cv
164.86 64.6218 165.255 64.4467 165.445 63.8687 cv
cp
f
161.927 66.6299 mo
162.308 66.9359 162.863 66.7357 163.05 66.3264 cv
163.265 65.8559 163.161 65.2551 162.755 64.917 cv
162.257 64.5013 161.4 64.1505 160.339 64.0361 cv
161.124 64.671 161.492 66.2813 161.927 66.6299 cv
cp
f
161.925 60.6448 mo
161.461 60.9957 161.173 62.379 160.337 63.0173 cv
161.551 62.9397 162.466 62.3542 162.996 61.9385 cv
163.427 61.6002 163.498 61.0889 163.217 60.732 cv
162.973 60.4213 162.331 60.3367 161.925 60.6448 cv
cp
f
1.13733 64.8553 mo
2.25732 64.8598 4.73712 63.7389 4.73712 63.7389 cv
4.73712 63.7389 2.53302 62.6296 1.66351 62.6198 cv
.650818 62.6085 .255371 62.7834 .0662842 63.3613 cv
-.229004 64.2643 .52301 64.8528 1.13733 64.8553 cv
cp
f
5.17139 63.194 mo
4.3869 62.5591 4.01831 60.9488 3.5838 60.6001 cv
3.20227 60.2941 2.64771 60.4946 2.46057 60.9037 cv
2.24573 61.3741 2.3504 61.9751 2.75562 62.313 cv
3.25403 62.7289 4.11121 63.0796 5.17139 63.194 cv
cp
f
2.2934 66.498 mo
2.53741 66.8087 3.17981 66.8934 3.5863 66.5851 cv
4.04938 66.2344 4.33801 64.8513 5.17383 64.2129 cv
3.9599 64.2905 3.04468 64.8759 2.51489 65.2917 cv
2.08392 65.6299 2.01331 66.1412 2.2934 66.498 cv
cp
f
5.83051 64.1651 mo
45.7813 64.1651 li
45.8568 64.1651 45.9179 63.9187 45.9179 63.6151 cv
45.9179 63.3115 45.8568 63.0652 45.7813 63.0652 cv
5.83051 63.0652 li
5.75513 63.0652 5.69391 63.3115 5.69391 63.6151 cv
5.69391 63.9187 5.75513 64.1651 5.83051 64.1651 cv
cp
f
159.68 64.1651 mo
159.756 64.1651 159.817 63.9187 159.817 63.6151 cv
159.817 63.3115 159.756 63.0652 159.68 63.0652 cv
119.73 63.0652 li
119.654 63.0652 119.593 63.3115 119.593 63.6151 cv
119.593 63.9187 119.654 64.1651 119.73 64.1651 cv
159.68 64.1651 li
cp
f
100.602 54.4001 mo
102.428 54.2314 104.372 54.1235 106.315 54.3668 cv
107.278 54.4919 108.258 54.7031 109.079 55.1313 cv
109.906 55.5502 110.431 56.2624 110.302 57.1064 cv
110.267 57.923 109.483 58.4754 108.605 58.8026 cv
107.703 59.115 106.71 59.2527 105.731 59.2982 cv
103.766 59.3837 101.834 59.1987 100.019 58.9089 cv
96.508 58.3436 93.4031 57.42 90.8555 56.4424 cv
90.9084 56.4258 90.9578 56.4087 91.0112 56.3922 cv
93.679 55.566 96.9382 54.787 100.602 54.4001 cv
cp
116.075 61.9803 mo
117.146 62.5143 117.877 63.4933 117.699 64.6268 cv
117.645 65.7417 116.582 66.4787 115.455 66.8943 cv
114.292 67.2968 113.026 67.47 111.781 67.5271 cv
109.282 67.6335 106.835 67.3954 104.537 67.0246 cv
99.9622 66.2804 95.9321 65.0539 92.6614 63.7638 cv
92.8248 63.7108 92.9814 63.6569 93.1485 63.6044 cv
96.5205 62.5456 100.641 61.5489 105.281 61.0508 cv
107.594 60.8335 110.056 60.6927 112.531 61.0002 cv
113.757 61.1594 115.008 61.4253 116.075 61.9803 cv
cp
95.2566 66.6818 mo
92.5918 67.015 90.262 67.6492 88.3629 68.3315 cv
88.126 68.4144 87.9191 68.5029 87.6969 68.5887 cv
86.5131 68.102 85.5309 67.6047 84.7792 67.1537 cv
84.9778 67.0392 85.1893 66.9197 85.418 66.795 cv
86.8553 66.0045 88.9176 65.0587 91.5075 64.1523 cv
91.7622 64.2678 92.0134 64.3837 92.2786 64.4975 cv
93.9369 65.211 95.7952 65.9041 97.8288 66.522 cv
96.941 66.525 96.0812 66.5907 95.2566 66.6818 cv
cp
100.948 70.5389 mo
100.339 70.751 99.6506 70.8492 98.9693 70.8816 cv
97.6003 70.9435 96.2444 70.8179 94.9701 70.6186 cv
92.6564 70.2543 90.6035 69.6684 88.873 69.0417 cv
90.7079 68.5022 92.9078 67.999 95.3728 67.7471 cv
96.6545 67.6329 98.0195 67.5616 99.3693 67.7332 cv
100.669 67.8719 102.222 68.4223 102.034 69.4816 cv
102.021 69.9648 101.549 70.3105 100.948 70.5389 cv
cp
85.194 59.8834 mo
84.8497 59.6411 84.553 59.4177 84.2856 59.21 cv
84.4711 59.1047 84.6674 58.9951 84.8876 58.8777 cv
86.0222 58.2674 87.6439 57.5353 89.6768 56.8322 cv
89.8706 56.9207 90.0611 57.0096 90.2625 57.097 cv
92.8771 58.2338 96.1186 59.3055 99.8432 59.9658 cv
100.758 60.1261 101.704 60.2593 102.677 60.3456 cv
98.9716 60.9553 95.6696 61.8605 92.8887 62.8243 cv
92.4283 62.9841 91.985 63.1467 91.5536 63.3105 cv
88.7755 62.1349 86.6253 60.9013 85.194 59.8834 cv
cp
84.4416 53.6883 mo
85.4169 54.5049 86.8719 55.4586 88.7385 56.3856 cv
87.0146 57.1061 85.6357 57.8446 84.6573 58.488 cv
84.3992 58.6564 84.1767 58.8135 83.9725 58.9631 cv
83.1983 58.341 82.8086 57.9526 82.7554 58.0016 cv
82.7257 58.0286 82.8893 58.2518 83.2333 58.6566 cv
83.3602 58.8026 83.5248 58.9761 83.7083 59.1607 cv
83.0345 59.6815 82.7234 60.0363 82.7554 60.0706 cv
82.8004 60.1248 83.1937 59.847 83.9523 59.4017 cv
84.2247 59.661 84.5444 59.9443 84.9211 60.2446 cv
86.1919 61.2893 88.0992 62.5167 90.5507 63.7042 cv
88.2772 64.6287 86.4662 65.581 85.1877 66.4052 cv
84.8995 66.5872 84.6476 66.7592 84.4119 66.9252 cv
84.3378 66.8777 84.2473 66.826 84.1788 66.7802 cv
83.2658 66.1757 82.8249 65.7455 82.7554 65.8078 cv
82.703 65.8492 83.0401 66.3971 83.9058 67.1411 cv
83.9346 67.166 83.9755 67.194 84.0054 67.2194 cv
83.7325 67.4247 83.4998 67.6127 83.3189 67.7704 cv
82.923 68.1234 82.7298 68.322 82.7554 68.353 cv
82.8028 68.4107 83.3044 68.0352 84.2891 67.4424 cv
84.9103 67.93 85.712 68.4601 86.7224 68.9871 cv
83.9966 70.197 82.6423 71.4976 82.7554 71.5942 cv
82.8395 71.701 84.4921 70.4832 87.6381 69.4277 cv
87.7654 69.4869 87.8774 69.5479 88.0094 69.6064 cv
89.8579 70.4266 92.1515 71.1983 94.7942 71.6755 cv
96.1154 71.9114 97.5265 72.0706 99.0238 72.0195 cv
99.7719 71.9891 100.547 71.8975 101.34 71.6275 cv
101.732 71.4715 102.141 71.2968 102.5 70.9538 cv
102.867 70.6432 103.155 70.1277 103.189 69.6161 cv
103.321 68.8981 102.968 68.1935 102.486 67.717 cv
103.1 67.8468 103.724 67.9698 104.361 68.0817 cv
106.706 68.4889 109.208 68.7606 111.836 68.665 cv
113.148 68.6099 114.501 68.4433 115.846 67.9832 cv
116.508 67.7189 117.193 67.4236 117.765 66.8715 cv
118.074 66.6321 118.289 66.272 118.516 65.937 cv
118.666 65.5547 118.842 65.1706 118.854 64.7614 cv
118.935 64.3562 118.851 63.9563 118.809 63.5579 cv
118.681 63.1754 118.576 62.769 118.327 62.45 cv
117.9 61.7568 117.254 61.3027 116.622 60.9608 cv
115.328 60.2964 113.976 60.0358 112.67 59.8694 cv
111.56 59.7394 110.475 59.7081 109.407 59.7195 cv
109.808 59.542 110.206 59.324 110.557 58.9864 cv
110.809 58.7896 110.99 58.4922 111.176 58.2143 cv
111.302 57.8981 111.446 57.5781 111.457 57.241 cv
111.548 56.5832 111.397 55.8848 111.021 55.3314 cv
110.667 54.7585 110.138 54.3885 109.626 54.1115 cv
108.578 53.5745 107.498 53.3683 106.455 53.236 cv
104.36 52.9925 102.365 53.133 100.486 53.3347 cv
96.7304 53.7919 93.4377 54.6696 90.7516 55.6121 cv
90.3975 55.7365 90.0555 55.863 89.723 55.9905 cv
87.5392 55.0752 85.8472 54.1167 84.7147 53.3273 cv
83.4314 52.4423 82.8284 51.8085 82.7554 51.8751 cv
82.7066 51.9122 83.2057 52.6637 84.4416 53.6883 cv
cp
f
49.436 61.9803 mo
50.5029 61.4253 51.7541 61.1594 52.9803 61.0002 cv
55.4545 60.6927 57.9167 60.8335 60.2303 61.0508 cv
64.8696 61.5489 68.9904 62.5456 72.3624 63.6044 cv
72.5294 63.6569 72.6861 63.7108 72.8495 63.7638 cv
69.5786 65.0539 65.5486 66.2804 60.9743 67.0246 cv
58.6761 67.3954 56.2289 67.6335 53.7292 67.5271 cv
52.4843 67.47 51.2186 67.2968 50.0559 66.8943 cv
48.9289 66.4787 47.8655 65.7417 47.8121 64.6268 cv
47.6336 63.4933 48.3648 62.5143 49.436 61.9803 cv
cp
55.2092 57.1064 mo
55.0799 56.2624 55.605 55.5502 56.4315 55.1313 cv
57.2527 54.7031 58.2329 54.4919 59.1954 54.3668 cv
61.1386 54.1235 63.0825 54.2314 64.9089 54.4001 cv
68.5727 54.787 71.8317 55.566 74.4995 56.3922 cv
74.5529 56.4087 74.6024 56.4258 74.6553 56.4424 cv
72.1074 57.42 69.0027 58.3436 65.4919 58.9089 cv
63.6771 59.1987 61.7452 59.3837 59.7795 59.2982 cv
58.8008 59.2527 57.8077 59.115 56.9062 58.8026 cv
56.0278 58.4754 55.2439 57.923 55.2092 57.1064 cv
cp
80.6232 58.8777 mo
80.8433 58.9951 81.0397 59.1047 81.2251 59.21 cv
80.9578 59.4177 80.6609 59.6411 80.3167 59.8834 cv
78.8855 60.9013 76.7355 62.1349 73.9573 63.3106 cv
73.5257 63.1467 73.0825 62.9841 72.622 62.8243 cv
69.8411 61.8605 66.5392 60.9553 62.8339 60.3456 cv
63.8071 60.2593 64.7529 60.1261 65.6677 59.9658 cv
69.3923 59.3055 72.6339 58.2338 75.2483 57.097 cv
75.4497 57.0096 75.6401 56.9207 75.8339 56.8322 cv
77.8669 57.5353 79.4885 58.2674 80.6232 58.8777 cv
cp
80.0927 66.795 mo
80.3214 66.9197 80.533 67.0391 80.7316 67.1537 cv
79.98 67.6047 78.9977 68.1019 77.814 68.5886 cv
77.5918 68.5028 77.3849 68.4144 77.148 68.3315 cv
75.2488 67.6492 72.9191 67.015 70.2543 66.6818 cv
69.4296 66.5907 68.5698 66.525 67.682 66.522 cv
69.7156 65.9041 71.574 65.211 73.2324 64.4975 cv
73.4976 64.3837 73.7487 64.2678 74.0034 64.1523 cv
76.5932 65.0587 78.6554 66.0045 80.0927 66.795 cv
cp
70.5408 70.6186 mo
69.2665 70.8179 67.9106 70.9435 66.5417 70.8816 cv
65.8604 70.8492 65.1721 70.751 64.5625 70.5389 cv
63.9619 70.3105 63.4903 69.9648 63.4765 69.4816 cv
63.2886 68.4223 64.8415 67.8719 66.1416 67.7332 cv
67.4913 67.5616 68.8563 67.6329 70.138 67.7471 cv
72.6028 67.999 74.8029 68.5022 76.6378 69.0417 cv
74.9074 69.6684 72.8545 70.2543 70.5408 70.6186 cv
cp
46.9945 65.937 mo
47.2222 66.272 47.4366 66.6321 47.746 66.8715 cv
48.3176 67.4236 49.0032 67.7189 49.6646 67.9832 cv
51.01 68.4433 52.3628 68.6099 53.6747 68.665 cv
56.3026 68.7606 58.8051 68.4889 61.1501 68.0817 cv
61.7869 67.9698 62.4103 67.8468 63.0245 67.717 cv
62.5433 68.1935 62.1902 68.8981 62.3214 69.6161 cv
62.3563 70.1277 62.6443 70.6432 63.0106 70.9538 cv
63.3692 71.2968 63.7787 71.4715 64.171 71.6275 cv
64.9634 71.8975 65.7388 71.9891 66.4871 72.0195 cv
67.9844 72.0706 69.3954 71.9114 70.7166 71.6755 cv
73.3592 71.1983 75.6529 70.4266 77.5014 69.6064 cv
77.6334 69.5479 77.7454 69.4869 77.8727 69.4277 cv
81.0187 70.4832 82.6713 71.701 82.7554 71.5942 cv
82.8683 71.4976 81.5141 70.197 78.7884 68.9871 cv
79.7988 68.4601 80.6004 67.9301 81.2217 67.4424 cv
82.2065 68.0352 82.7081 68.4107 82.7554 68.353 cv
82.781 68.322 82.5879 68.1234 82.192 67.7704 cv
82.0111 67.6127 81.7783 67.4247 81.5054 67.2193 cv
81.5354 67.194 81.5762 67.166 81.605 67.1411 cv
82.4707 66.3971 82.8078 65.8492 82.7554 65.8078 cv
82.6859 65.7455 82.2449 66.1757 81.3319 66.7802 cv
81.2634 66.826 81.1729 66.8777 81.0989 66.9252 cv
80.8632 66.7591 80.6112 66.5872 80.323 66.4052 cv
79.0445 65.5811 77.2336 64.6288 74.9601 63.7042 cv
77.4116 62.5167 79.3189 61.2894 80.5898 60.2446 cv
80.9664 59.9443 81.2861 59.661 81.5585 59.4017 cv
82.3172 59.847 82.7105 60.1248 82.7554 60.0706 cv
82.7874 60.0363 82.4761 59.6816 81.8025 59.1608 cv
81.9859 58.9761 82.1505 58.8026 82.2775 58.6566 cv
82.6214 58.2518 82.7853 58.0286 82.7554 58.0016 cv
82.7023 57.9526 82.3125 58.341 81.5383 58.9631 cv
81.334 58.8135 81.1116 58.6564 80.8535 58.488 cv
79.8752 57.8446 78.4963 57.1061 76.7723 56.3856 cv
78.6389 55.4586 80.0939 54.5049 81.0691 53.6883 cv
82.3052 52.6637 82.8042 51.9122 82.7554 51.8751 cv
82.6824 51.8085 82.0794 52.4423 80.7962 53.3273 cv
79.6637 54.1167 77.9716 55.0752 75.7878 55.9905 cv
75.4554 55.863 75.1135 55.7365 74.7594 55.6121 cv
72.0731 54.6696 68.7803 53.7919 65.0252 53.3347 cv
63.1462 53.133 61.1505 52.9925 59.0561 53.236 cv
58.0133 53.3683 56.9327 53.5745 55.8849 54.1115 cv
55.3722 54.3885 54.8442 54.7585 54.4902 55.3314 cv
54.1136 55.8848 53.9624 56.5832 54.054 57.241 cv
54.0645 57.5781 54.2085 57.8981 54.3346 58.2143 cv
54.5214 58.4922 54.7014 58.7896 54.9542 58.9864 cv
55.3051 59.324 55.7026 59.542 56.1034 59.7195 cv
55.036 59.7081 53.951 59.7394 52.8411 59.8694 cv
51.5343 60.0358 50.1828 60.2964 48.8895 60.9608 cv
48.2566 61.3027 47.6111 61.7568 47.1843 62.45 cv
46.9353 62.769 46.8301 63.1754 46.7014 63.5579 cv
46.6597 63.9563 46.5761 64.3562 46.657 64.7614 cv
46.6682 65.1706 46.8444 65.5547 46.9945 65.937 cv
cp
f
163.853 131.947 mo
163.376 131.816 162.929 131.854 162.646 132.243 cv
162.536 132.394 162.503 132.67 162.547 132.887 cv
162.556 132.933 162.591 132.969 162.608 133.011 cv
120.452 133.011 li
121.341 132.784 122.212 132.486 123.024 132.024 cv
124.362 131.313 125.574 130.268 126.301 128.885 cv
127.024 127.517 127.243 125.938 126.909 124.482 cv
126.592 123.031 125.667 121.697 124.36 121.036 cv
123.175 120.429 121.856 120.286 120.646 120.552 cv
119.434 120.823 118.345 121.613 117.751 122.656 cv
117.163 123.687 116.991 124.923 117.395 126.003 cv
117.726 127.13 118.64 127.886 119.551 128.248 cv
120.487 128.604 121.567 128.48 122.284 128.024 cv
122.999 127.586 123.381 126.969 123.551 126.44 cv
123.847 125.294 123.281 124.724 122.839 124.874 cv
122.335 125.009 122.137 125.338 121.832 125.665 cv
121.664 125.83 121.468 126.031 121.21 126.164 cv
120.969 126.289 120.672 126.354 120.248 126.257 cv
119.853 126.129 119.352 125.848 119.156 125.336 cv
118.863 124.854 118.865 124.083 119.153 123.408 cv
119.445 122.736 120.058 122.126 120.94 121.857 cv
121.813 121.607 122.862 121.669 123.739 122.122 cv
125.686 123.045 126.416 126.058 125.217 128.264 cv
124.061 130.513 121.309 131.814 118.587 132.229 cv
115.83 132.724 112.963 132.351 110.388 131.354 cv
107.808 130.319 105.402 128.855 102.852 128.018 cv
100.295 127.156 97.6081 127.321 95.4943 128.108 cv
93.3335 128.847 91.7529 130.162 90.5142 131.242 cv
89.2983 132.375 89.4884 132.557 90.729 131.498 cv
91.9898 130.489 93.5733 129.274 95.6596 128.642 cv
97.7149 127.964 100.174 127.885 102.576 128.753 cv
104.983 129.613 107.315 131.11 109.976 132.261 cv
110.692 132.56 111.439 132.81 112.204 133.011 cv
93.4352 133.011 li
93.3277 133.011 93.2406 133.26 93.2406 133.567 cv
93.2406 133.874 93.3277 134.123 93.4352 134.123 cv
162.608 134.123 li
162.591 134.166 162.556 134.201 162.547 134.247 cv
162.503 134.464 162.536 134.74 162.646 134.891 cv
162.929 135.28 163.376 135.318 163.853 135.187 cv
164.611 134.979 165.461 133.659 165.501 133.601 cv
165.508 133.591 165.511 133.579 165.511 133.568 cv
165.511 133.567 li
165.511 133.566 li
165.511 133.554 165.508 133.543 165.501 133.533 cv
165.461 133.474 164.611 132.155 163.853 131.947 cv
cp
f
83.3414 133.59 mo
84.2133 132.675 85.8933 130.598 87.819 127.46 cv
88.4923 126.344 89.1798 125.084 89.8045 123.664 cv
90.4229 122.245 90.9883 120.653 91.1876 118.839 cv
91.1905 118.806 91.1912 118.771 91.1938 118.737 cv
92.9492 119.052 94.6417 119.562 95.5984 120.563 cv
96.1234 121.155 96.1336 121.923 95.8312 122.716 cv
95.5428 123.506 94.9961 124.241 94.4358 124.903 cv
93.2954 126.233 92.0173 127.332 90.8287 128.291 cv
87.2869 131.054 84.5252 132.779 83.3414 133.59 cv
cp
74.7159 128.137 mo
73.5589 127.144 72.3181 126.004 71.261 124.624 cv
70.7636 123.927 70.2995 123.155 70.1388 122.368 cv
69.9725 121.579 70.2232 120.878 70.8824 120.331 cv
71.1785 120.035 71.6269 119.846 72.0282 119.614 cv
72.4952 119.459 72.9313 119.241 73.4358 119.127 cv
73.9159 118.992 74.4138 118.881 74.9223 118.785 cv
75.0361 120.5 75.486 122.037 76.0014 123.412 cv
76.5554 124.865 77.1972 126.151 77.8253 127.295 cv
79.67 130.574 81.3183 132.72 82.1486 133.628 cv
81.779 133.361 81.2383 132.989 80.545 132.509 cv
79.1291 131.522 77.0564 130.111 74.7159 128.137 cv
cp
78.1505 114.474 mo
78.2606 114.402 78.3799 114.34 78.4972 114.276 cv
78.4854 115.152 78.5227 116.006 78.5722 116.833 cv
78.5736 116.852 78.5764 116.869 78.5779 116.887 cv
77.8437 116.94 77.1136 117.007 76.3909 117.109 cv
76.4556 116.799 76.5383 116.494 76.6578 116.203 cv
76.9632 115.499 77.4861 114.918 78.1505 114.474 cv
cp
80.2009 111.524 mo
80.5276 109.78 81.4938 108.182 83.2111 108.282 cv
84.926 108.2 85.7948 109.866 86.0559 111.615 cv
86.0854 111.794 86.0959 111.975 86.1179 112.154 cv
85.6769 112.065 85.2237 112.018 84.7729 111.948 cv
84.286 111.926 83.7958 111.903 83.3029 111.88 cv
82.2181 111.878 81.1365 111.949 80.0935 112.178 cv
80.1291 111.96 80.1534 111.74 80.2009 111.524 cv
cp
88.3214 114.566 mo
89.1555 115.182 89.6153 116.092 89.7924 117.089 cv
89.028 116.995 88.2529 116.923 87.4695 116.871 cv
87.5559 116.009 87.6277 115.119 87.6417 114.201 cv
87.874 114.317 88.1159 114.423 88.3214 114.566 cv
cp
85.6002 126.101 mo
86.2034 123.886 86.8447 121.26 87.2707 118.309 cv
88.1473 118.361 89.0098 118.434 89.8586 118.537 cv
89.8541 118.598 89.8546 118.66 89.8482 118.721 cv
89.7113 120.306 89.2339 121.826 88.6878 123.198 cv
88.1382 124.575 87.523 125.828 86.9215 126.951 cv
85.3881 129.765 84.0521 131.815 83.3129 132.987 cv
83.8569 131.684 84.6985 129.307 85.6002 126.101 cv
cp
79.9142 116.751 mo
79.8741 115.765 79.8601 114.739 79.9216 113.712 cv
80.9596 113.43 82.1156 113.33 83.2388 113.338 cv
83.7282 113.36 84.2147 113.382 84.698 113.404 cv
85.1364 113.479 85.5801 113.504 86.0072 113.608 cv
86.0854 113.625 86.1537 113.658 86.2307 113.677 cv
86.2582 114.733 86.2076 115.785 86.1251 116.797 cv
85.2042 116.758 84.28 116.733 83.3593 116.723 cv
82.1915 116.738 81.0468 116.755 79.9184 116.805 cv
79.9174 116.786 79.9152 116.77 79.9142 116.751 cv
cp
82.1597 132.999 mo
81.4583 131.811 80.1777 129.712 78.7417 126.82 cv
77.684 124.569 76.3858 121.737 76.2469 118.577 cv
76.3486 118.563 76.4466 118.544 76.5488 118.53 cv
77.2583 118.434 77.989 118.374 78.7271 118.326 cv
79.043 121.224 79.5791 123.815 80.0946 126.008 cv
80.8914 129.27 81.6591 131.685 82.1597 132.999 cv
cp
81.1035 125.792 mo
80.7052 123.615 80.2717 121.057 80.0334 118.254 cv
81.1216 118.212 82.2263 118.197 83.332 118.182 cv
84.2269 118.192 85.0973 118.214 85.9569 118.246 cv
85.6121 121.081 85.0797 123.66 84.5995 125.85 cv
83.6666 129.948 82.884 132.759 82.7178 133.739 cv
82.5836 132.754 81.8937 129.919 81.1035 125.792 cv
cp
95.3483 125.697 mo
95.9765 124.99 96.6128 124.21 97.0267 123.181 cv
97.2335 122.677 97.3835 122.092 97.3369 121.458 cv
97.3092 120.824 97.0243 120.202 96.633 119.704 cv
95.8054 118.742 94.7145 118.299 93.6534 117.896 cv
93.1134 117.743 92.566 117.586 92.0126 117.455 cv
91.7467 117.407 91.4757 117.358 91.2074 117.309 cv
91.1741 116.87 91.103 116.425 90.9562 115.98 cv
90.6586 115.005 90.03 114.077 89.1794 113.423 cv
88.6842 113.065 88.1459 112.795 87.5901 112.58 cv
87.5612 112.184 87.5278 111.785 87.4658 111.378 cv
87.3172 110.394 87.0237 109.345 86.3481 108.393 cv
85.6957 107.419 84.3972 106.773 83.2222 106.823 cv
83.1942 106.82 li
83.095 106.825 li
83.0483 106.83 li
82.955 106.839 li
82.7687 106.858 li
82.3969 106.895 li
82.1094 106.953 81.7657 107.071 81.4627 107.177 cv
81.1925 107.326 80.9286 107.486 80.6819 107.66 cv
80.4699 107.867 80.239 108.067 80.0561 108.291 cv
79.3255 109.208 79.0058 110.245 78.8037 111.222 cv
78.7044 111.703 78.6353 112.179 78.5864 112.649 cv
78.1659 112.823 77.754 113.028 77.3573 113.284 cv
76.4888 113.87 75.7639 114.708 75.3751 115.659 cv
75.1532 116.219 75.0324 116.785 74.9652 117.344 cv
74.3164 117.464 73.6735 117.603 73.0434 117.79 cv
72.5017 117.921 71.9767 118.178 71.4547 118.369 cv
70.9496 118.662 70.4327 118.893 69.9916 119.324 cv
69.753 119.499 69.5543 119.734 69.3802 120.001 cv
69.2925 120.13 69.1933 120.25 69.1211 120.387 cv
68.9544 120.835 li
68.7315 121.427 68.76 122.079 68.882 122.626 cv
69.145 123.741 69.7275 124.594 70.3007 125.36 cv
71.5071 126.843 72.8314 127.964 74.0641 128.937 cv
76.5499 130.858 78.7251 132.144 80.246 132.992 cv
81.7716 133.834 82.6642 134.21 82.7115 134.123 cv
82.7579 134.21 83.6547 133.846 85.1933 133.029 cv
86.729 132.209 88.921 130.955 91.4574 129.11 cv
92.7169 128.176 94.0716 127.1 95.3483 125.697 cv
cp
f
1.65802 135.187 mo
2.1344 135.318 2.58179 135.28 2.86499 134.891 cv
2.97491 134.74 3.00769 134.464 2.96411 134.247 cv
2.95483 134.201 2.9198 134.166 2.90295 134.123 cv
72.0757 134.123 li
72.1833 134.123 72.2703 133.874 72.2703 133.567 cv
72.2703 133.26 72.1833 133.011 72.0757 133.011 cv
53.3069 133.011 li
54.0717 132.81 54.8187 132.56 55.5351 132.261 cv
58.1964 131.11 60.5282 129.613 62.9354 128.753 cv
65.3369 127.885 67.796 127.964 69.8513 128.642 cv
71.9377 129.274 73.5211 130.489 74.782 131.498 cv
76.0225 132.557 76.2126 132.375 74.9968 131.242 cv
73.7579 130.162 72.1773 128.847 70.0167 128.108 cv
67.9029 127.321 65.2162 127.156 62.6584 128.018 cv
60.1092 128.855 57.7032 130.319 55.1228 131.354 cv
52.5483 132.351 49.6806 132.724 46.9238 132.229 cv
44.2015 131.814 41.4499 130.513 40.2938 128.264 cv
39.0948 126.058 39.8251 123.045 41.7717 122.122 cv
42.6486 121.669 43.6983 121.607 44.5706 121.857 cv
45.4528 122.126 46.0662 122.736 46.3577 123.408 cv
46.6458 124.083 46.6476 124.854 46.3548 125.336 cv
46.1591 125.848 45.6574 126.129 45.2629 126.257 cv
44.8391 126.354 44.5423 126.289 44.3008 126.164 cv
44.0429 126.031 43.8467 125.83 43.6789 125.665 cv
43.3744 125.338 43.1756 125.009 42.6723 124.874 cv
42.2298 124.724 41.6642 125.294 41.9597 126.44 cv
42.1298 126.969 42.512 127.586 43.2275 128.024 cv
43.9439 128.48 45.0235 128.604 45.9601 128.248 cv
46.8709 127.886 47.7852 127.13 48.1159 126.003 cv
48.52 124.923 48.3479 123.687 47.7594 122.656 cv
47.1656 121.613 46.0768 120.823 44.8648 120.552 cv
43.6546 120.286 42.3355 120.429 41.1512 121.036 cv
39.8442 121.697 38.9188 123.031 38.6021 124.482 cv
38.2684 125.938 38.4874 127.517 39.2101 128.885 cv
39.9368 130.268 41.1492 131.313 42.4866 132.024 cv
43.2986 132.486 44.1696 132.784 45.0588 133.011 cv
2.90271 133.011 li
2.91968 132.969 2.95483 132.933 2.96411 132.887 cv
3.00769 132.67 2.97491 132.394 2.86499 132.243 cv
2.58179 131.854 2.1344 131.816 1.65802 131.947 cv
.89978 132.155 .0501099 133.474 .010376 133.533 cv
.0032959 133.543 0 133.554 0 133.566 cv
0 133.567 li
0 133.568 li
0 133.579 .0032959 133.591 .010376 133.601 cv
.0501099 133.659 .89978 134.979 1.65802 135.187 cv
cp
f
70.1856 320.096 mo
69.2046 319.131 67.8829 320.211 68.4347 321.049 cv
68.667 321.401 68.9046 321.877 68.653 322.183 cv
68.416 322.472 67.8326 322.59 67.4524 322.428 cv
66.8394 322.165 66.5018 321.067 66.8076 320.329 cv
67.2204 319.332 67.6526 318.553 69.0289 317.671 cv
69.5136 317.395 71.9551 315.965 72.6794 315.564 cv
71.2597 320.317 74.4414 321.967 75.5588 322.199 cv
79.5507 323.024 80.0569 319.872 80.1931 318.614 cv
80.3143 317.493 79.8805 316.334 78.7863 315.793 cv
78.3627 315.584 77.2478 315.292 76.7712 316.268 cv
76.5635 316.693 77.1363 317.322 77.5603 317.531 cv
78.121 317.808 78.4412 318.233 78.4867 318.761 cv
78.5348 319.319 78.764 321.011 76.2522 321.144 cv
74.4705 321.239 72.0323 318.53 74.0479 315.107 cv
77.0688 312.133 80.0237 313.305 81.6042 314.641 cv
81.5713 314.689 81.5256 314.724 81.4938 314.774 cv
80.6209 316.136 79.9618 319.244 81.7187 322.207 cv
81.1267 322.88 80.1823 323.825 78.635 324.62 cv
78.3392 324.511 78.0302 324.407 77.7037 324.309 cv
75.9963 323.798 72.9698 323.473 69.4318 323.782 cv
69.6776 323.68 69.8969 323.555 70.0652 323.416 cv
70.6926 322.899 71.432 321.321 70.1856 320.096 cv
cp
82.7555 316.04 mo
83.5267 317.482 83.5139 319.175 82.7555 320.698 cv
81.9971 319.175 81.9841 317.482 82.7555 316.04 cv
cp
84.017 314.774 mo
83.9852 314.724 83.9395 314.689 83.9066 314.641 cv
85.4871 313.305 88.4423 312.133 91.4632 315.107 cv
93.4784 318.53 91.0404 321.239 89.2587 321.144 cv
86.747 321.011 86.9763 319.319 87.0242 318.761 cv
87.0698 318.233 87.3901 317.808 87.9506 317.531 cv
88.3746 317.322 88.9471 316.693 88.7396 316.268 cv
88.263 315.292 87.1482 315.584 86.7245 315.793 cv
85.6305 316.334 85.1963 317.493 85.3177 318.614 cv
85.4539 319.872 85.9602 323.024 89.9521 322.199 cv
91.0696 321.967 94.2511 320.317 92.8317 315.564 cv
93.5559 315.965 95.9971 317.395 96.482 317.671 cv
97.8584 318.553 98.2906 319.332 98.7034 320.329 cv
99.009 321.067 98.6716 322.165 98.0585 322.428 cv
97.6782 322.59 97.0949 322.472 96.858 322.183 cv
96.6063 321.877 96.8439 321.401 97.0762 321.049 cv
97.6281 320.211 96.3062 319.131 95.3252 320.096 cv
94.0788 321.321 94.8184 322.899 95.4457 323.416 cv
95.614 323.555 95.8332 323.68 96.079 323.782 cv
92.541 323.473 89.5146 323.798 87.8072 324.309 cv
87.4807 324.407 87.1716 324.511 86.8759 324.621 cv
85.3286 323.825 84.3842 322.88 83.7923 322.207 cv
85.549 319.244 84.89 316.136 84.017 314.774 cv
cp
88.6821 325.365 mo
91.3213 324.513 95.1918 324.191 100.871 325.365 cv
95.1919 326.538 91.3213 326.217 88.6821 325.365 cv
cp
95.3253 330.634 mo
96.3063 331.598 97.6281 330.519 97.0762 329.681 cv
96.8439 329.328 96.6063 328.853 96.8581 328.546 cv
97.0951 328.258 97.6784 328.139 98.0585 328.301 cv
98.6716 328.564 99.0091 329.662 98.7033 330.4 cv
98.2905 331.397 97.8584 332.176 96.482 333.058 cv
95.9974 333.335 93.5559 334.764 92.8317 335.165 cv
94.2513 330.413 91.0696 328.762 89.9521 328.531 cv
85.9602 327.705 85.4541 330.857 85.3178 332.116 cv
85.1967 333.236 85.6304 334.395 86.7246 334.936 cv
87.1482 335.146 88.2631 335.437 88.7397 334.461 cv
88.9474 334.036 88.3746 333.407 87.9506 333.198 cv
87.3901 332.921 87.0698 332.496 87.0242 331.969 cv
86.9761 331.41 86.7471 329.719 89.2587 329.585 cv
91.0404 329.491 93.4786 332.199 91.463 335.622 cv
88.4421 338.597 85.4873 337.424 83.9067 336.088 cv
83.9396 336.04 83.9853 336.005 84.0171 335.955 cv
84.89 334.593 85.5491 331.486 83.7922 328.522 cv
84.3842 327.849 85.3287 326.904 86.876 326.109 cv
87.1718 326.218 87.4808 326.323 87.8072 326.42 cv
89.5146 326.931 92.5411 327.256 96.0793 326.947 cv
95.8333 327.05 95.614 327.174 95.4457 327.313 cv
94.8184 327.83 94.0789 329.408 95.3253 330.634 cv
cp
82.7555 334.689 mo
81.9842 333.247 81.9971 331.554 82.7555 330.031 cv
83.5139 331.554 83.5268 333.247 82.7555 334.689 cv
cp
80.2957 325.365 mo
81.3755 324.789 82.1779 324.157 82.7555 323.585 cv
83.333 324.157 84.1353 324.789 85.2153 325.365 cv
84.1354 325.941 83.3331 326.572 82.7555 327.145 cv
82.178 326.572 81.3757 325.941 80.2957 325.365 cv
cp
81.4939 335.955 mo
81.5257 336.005 81.5714 336.04 81.6044 336.088 cv
80.0238 337.424 77.0687 338.597 74.0479 335.622 cv
72.0325 332.199 74.4705 329.491 76.2522 329.585 cv
78.7641 329.719 78.5346 331.41 78.4867 331.969 cv
78.4411 332.496 78.1208 332.921 77.5603 333.198 cv
77.1363 333.407 76.5638 334.036 76.7713 334.461 cv
77.2479 335.437 78.3627 335.146 78.7865 334.936 cv
79.8804 334.395 80.3146 333.236 80.1932 332.116 cv
80.057 330.857 79.5507 327.705 75.5588 328.531 cv
74.4413 328.762 71.2598 330.413 72.6792 335.165 cv
71.955 334.764 69.5138 333.335 69.0289 333.058 cv
67.6525 332.176 67.2204 331.397 66.8075 330.4 cv
66.502 329.662 66.8393 328.564 67.4524 328.301 cv
67.8327 328.139 68.4161 328.258 68.6531 328.546 cv
68.9046 328.853 68.667 329.328 68.4347 329.681 cv
67.8828 330.519 69.2048 331.598 70.1857 330.634 cv
71.4321 329.408 70.6925 327.83 70.0652 327.313 cv
69.8969 327.174 69.6776 327.05 69.4316 326.947 cv
72.9697 327.256 75.9963 326.931 77.7037 326.42 cv
78.0301 326.323 78.3392 326.218 78.6349 326.109 cv
80.1823 326.904 81.1266 327.849 81.7186 328.522 cv
79.9619 331.486 80.6209 334.593 81.4939 335.955 cv
cp
64.64 325.365 mo
70.3191 324.191 74.1898 324.513 76.8289 325.365 cv
74.1898 326.216 70.3192 326.538 64.64 325.365 cv
cp
55.9246 321.345 mo
55.92 321.342 55.9149 321.345 55.9102 321.342 cv
55.4197 320.429 37.4044 320.641 26.1466 320.6 cv
1.6488 320.511 1.9165 322.411 26.42 322.324 cv
36.7581 322.287 55.2601 321.871 55.3645 321.947 cv
57.4565 323.471 59.7137 324.575 61.976 325.365 cv
59.7137 326.155 57.4567 327.258 55.3646 328.782 cv
55.2601 328.858 36.758 328.442 26.4201 328.405 cv
1.91638 328.318 1.6488 330.218 26.1468 330.129 cv
37.4044 330.088 55.4195 330.301 55.9102 329.387 cv
55.915 329.384 55.92 329.387 55.9246 329.385 cv
58.072 328.075 61.0412 326.478 63.1614 325.752 cv
64.7178 326.221 66.2595 326.542 67.7416 326.751 cv
67.3312 326.822 66.9249 326.977 66.5656 327.277 cv
65.8927 327.837 64.686 329.793 67.1844 332.37 cv
65.6616 331.267 62.9953 330.778 61.3233 331.199 cv
59.0001 331.784 57.3546 333.452 57.2366 335.845 cv
57.0994 338.626 59.1056 340.424 60.1066 341.019 cv
61.4455 341.815 63.6958 341.716 64.7267 340.953 cv
66.9066 339.339 66.89 334.954 63.5212 334.83 cv
62.4476 334.79 61.2307 335.524 60.9016 336.377 cv
60.3572 337.788 61.317 338.214 61.7234 338.291 cv
63.2975 338.591 63.1575 336.407 64.3501 337.437 cv
64.9584 337.963 64.5198 339.211 63.8022 339.773 cv
63.0955 340.327 61.9846 340.454 60.9718 340.098 cv
59.3472 339.525 58.1813 337.796 58.2596 336.076 cv
58.3381 334.355 59.6565 332.739 61.3263 332.317 cv
62.3431 332.06 64.0532 331.942 65.367 332.451 cv
68.4106 333.63 73.4886 337.398 75.3273 338.102 cv
75.7609 338.343 76.1889 338.518 76.5704 338.624 cv
77.2729 338.821 77.9732 338.912 78.6541 338.903 cv
80.1952 338.883 81.6203 338.329 82.7555 337.362 cv
83.8907 338.329 85.3157 338.883 86.8568 338.903 cv
87.5378 338.912 88.2382 338.821 88.9405 338.624 cv
89.322 338.518 89.75 338.343 90.1837 338.102 cv
92.0223 337.398 97.1003 333.63 100.144 332.451 cv
101.458 331.942 103.168 332.06 104.185 332.317 cv
105.854 332.739 107.173 334.355 107.251 336.076 cv
107.33 337.796 106.164 339.525 104.539 340.098 cv
103.526 340.454 102.415 340.327 101.709 339.773 cv
100.991 339.211 100.553 337.963 101.161 337.437 cv
102.354 336.407 102.213 338.591 103.787 338.291 cv
104.194 338.214 105.154 337.788 104.609 336.377 cv
104.28 335.524 103.063 334.79 101.99 334.83 cv
98.6209 334.954 98.6043 339.339 100.784 340.953 cv
101.815 341.716 104.065 341.815 105.404 341.019 cv
106.405 340.424 108.411 338.626 108.274 335.845 cv
108.156 333.452 106.511 331.784 104.188 331.199 cv
102.516 330.778 99.8496 331.267 98.3265 332.37 cv
100.825 329.793 99.6185 327.837 98.9453 327.277 cv
98.586 326.977 98.1797 326.822 97.7693 326.751 cv
99.2515 326.542 100.793 326.221 102.35 325.752 cv
104.47 326.478 107.439 328.075 109.586 329.385 cv
109.591 329.387 109.596 329.384 109.601 329.387 cv
110.091 330.301 128.107 330.088 139.364 330.129 cv
163.862 330.218 163.594 328.318 139.091 328.405 cv
128.753 328.442 110.251 328.858 110.146 328.782 cv
108.054 327.258 105.797 326.155 103.535 325.365 cv
105.797 324.575 108.054 323.471 110.146 321.947 cv
110.251 321.871 128.753 322.287 139.091 322.324 cv
163.595 322.411 163.862 320.511 139.364 320.6 cv
128.107 320.641 110.091 320.429 109.601 321.342 cv
109.596 321.345 109.591 321.342 109.586 321.345 cv
107.439 322.655 104.47 324.251 102.35 324.977 cv
100.794 324.508 99.2518 324.187 97.7697 323.978 cv
98.1799 323.908 98.5861 323.752 98.9454 323.453 cv
99.6184 322.892 100.825 320.936 98.3266 318.359 cv
99.8493 319.462 102.516 319.951 104.188 319.53 cv
106.511 318.946 108.156 317.277 108.274 314.884 cv
108.411 312.104 106.405 310.305 105.404 309.71 cv
104.065 308.914 101.815 309.014 100.784 309.777 cv
98.6043 311.39 98.6209 315.775 101.99 315.899 cv
103.063 315.939 104.28 315.205 104.609 314.353 cv
105.154 312.941 104.194 312.515 103.788 312.438 cv
102.213 312.139 102.354 314.322 101.161 313.292 cv
100.553 312.766 100.991 311.519 101.709 310.956 cv
102.415 310.402 103.526 310.275 104.539 310.632 cv
106.164 311.204 107.33 312.933 107.251 314.654 cv
107.173 316.374 105.854 317.99 104.185 318.412 cv
103.168 318.669 101.458 318.787 100.144 318.278 cv
97.1003 317.099 92.0223 313.331 90.1836 312.628 cv
89.75 312.386 89.322 312.212 88.9405 312.105 cv
88.2381 311.908 87.5378 311.817 86.8569 311.826 cv
85.3157 311.846 83.8906 312.4 82.7555 313.367 cv
81.6202 312.4 80.1952 311.846 78.6541 311.826 cv
77.9732 311.817 77.2728 311.908 76.5704 312.105 cv
76.1889 312.212 75.761 312.386 75.3272 312.628 cv
73.4886 313.331 68.4106 317.099 65.367 318.278 cv
64.0531 318.787 62.343 318.669 61.3264 318.412 cv
59.6565 317.99 58.3381 316.374 58.2595 314.654 cv
58.1812 312.933 59.3471 311.204 60.9718 310.632 cv
61.9846 310.275 63.0955 310.402 63.8022 310.956 cv
64.5198 311.519 64.9584 312.766 64.3501 313.292 cv
63.1574 314.322 63.2975 312.139 61.7234 312.438 cv
61.3168 312.515 60.3571 312.941 60.9016 314.353 cv
61.2306 315.205 62.4476 315.939 63.5213 315.899 cv
66.89 315.775 66.9066 311.39 64.7268 309.777 cv
63.6958 309.014 61.4456 308.914 60.1067 309.71 cv
59.1056 310.305 57.0995 312.104 57.2365 314.884 cv
57.3546 317.277 58.9999 318.946 61.3234 319.53 cv
62.9953 319.951 65.6614 319.462 67.1844 318.359 cv
64.6859 320.936 65.8924 322.892 66.5656 323.453 cv
66.9249 323.752 67.3311 323.908 67.7413 323.978 cv
66.2592 324.187 64.7175 324.508 63.1613 324.977 cv
61.0407 324.251 58.072 322.655 55.9246 321.345 cv
cp
f
165.408 325.603 mo
165.867 324.199 164.698 323.284 163.742 323.28 cv
162.001 323.273 158.146 325.016 158.146 325.016 cv
158.146 325.016 161.573 326.74 162.924 326.755 cv
164.499 326.773 165.114 326.501 165.408 325.603 cv
cp
f
159.939 329.895 mo
160.532 330.371 161.394 330.06 161.685 329.423 cv
162.02 328.692 161.857 327.758 161.227 327.232 cv
160.452 326.586 159.119 326.041 157.471 325.863 cv
158.69 326.85 159.263 329.353 159.939 329.895 cv
cp
f
159.935 320.59 mo
159.215 321.136 158.767 323.286 157.467 324.279 cv
159.355 324.158 160.777 323.248 161.601 322.602 cv
162.271 322.076 162.381 321.281 161.945 320.726 cv
161.566 320.243 160.567 320.111 159.935 320.59 cv
cp
f
.103088 324.814 mo
-.356079 326.218 .81311 327.132 1.76831 327.136 cv
3.5094 327.143 7.36469 325.401 7.36469 325.401 cv
7.36469 325.401 3.93811 323.676 2.58618 323.661 cv
1.01172 323.643 .396973 323.915 .103088 324.814 cv
cp
f
3.8255 320.993 mo
3.49139 321.724 3.65417 322.658 4.28412 323.184 cv
5.0589 323.83 6.39172 324.376 8.0401 324.554 cv
6.82037 323.567 6.24719 321.063 5.57172 320.521 cv
4.9787 320.045 4.11652 320.357 3.8255 320.993 cv
cp
f
3.90979 327.815 mo
3.23969 328.341 3.12988 329.136 3.56549 329.691 cv
3.94482 330.173 4.9436 330.305 5.57562 329.826 cv
6.29559 329.28 6.74432 327.13 8.04382 326.138 cv
6.15631 326.258 4.73358 327.168 3.90979 327.815 cv
cp
f
13.0257 325.208 mo
13.0257 324.77 12.6702 324.414 12.2316 324.414 cv
11.793 324.414 11.4374 324.77 11.4374 325.208 cv
11.4374 325.647 11.793 326.002 12.2316 326.002 cv
12.6702 326.002 13.0257 325.647 13.0257 325.208 cv
cp
f
20.1687 325.208 mo
20.1687 324.77 19.8131 324.414 19.3745 324.414 cv
18.9359 324.414 18.5805 324.77 18.5805 325.208 cv
18.5805 325.647 18.9359 326.002 19.3745 326.002 cv
19.8131 326.002 20.1687 325.647 20.1687 325.208 cv
cp
f
16.7631 325.208 mo
16.7631 324.77 16.4076 324.414 15.969 324.414 cv
15.5304 324.414 15.1748 324.77 15.1748 325.208 cv
15.1748 325.647 15.5304 326.002 15.969 326.002 cv
16.4076 326.002 16.7631 325.647 16.7631 325.208 cv
cp
f
24.5787 325.208 mo
24.5787 324.626 24.1065 324.153 23.524 324.153 cv
22.9415 324.153 22.4693 324.626 22.4693 325.208 cv
22.4693 325.791 22.9415 326.263 23.524 326.263 cv
24.1065 326.263 24.5787 325.791 24.5787 325.208 cv
cp
f
28.5623 325.208 mo
28.5623 324.626 28.09 324.153 27.5075 324.153 cv
26.925 324.153 26.4528 324.626 26.4528 325.208 cv
26.4528 325.791 26.925 326.263 27.5075 326.263 cv
28.09 326.263 28.5623 325.791 28.5623 325.208 cv
cp
f
53.2618 325.208 mo
53.2618 324.77 52.9062 324.414 52.4676 324.414 cv
52.0291 324.414 51.6735 324.77 51.6735 325.208 cv
51.6735 325.647 52.0291 326.002 52.4676 326.002 cv
52.9062 326.002 53.2618 325.647 53.2618 325.208 cv
cp
f
46.1188 325.208 mo
46.1188 324.77 45.7633 324.414 45.3246 324.414 cv
44.886 324.414 44.5306 324.77 44.5306 325.208 cv
44.5306 325.647 44.886 326.002 45.3246 326.002 cv
45.7633 326.002 46.1188 325.647 46.1188 325.208 cv
cp
f
49.5244 325.208 mo
49.5244 324.77 49.1689 324.414 48.7303 324.414 cv
48.2917 324.414 47.9361 324.77 47.9361 325.208 cv
47.9361 325.647 48.2917 326.002 48.7303 326.002 cv
49.1689 326.002 49.5244 325.647 49.5244 325.208 cv
cp
f
42.23 325.208 mo
42.23 324.626 41.7577 324.153 41.1752 324.153 cv
40.5927 324.153 40.1205 324.626 40.1205 325.208 cv
40.1205 325.791 40.5927 326.263 41.1752 326.263 cv
41.7577 326.263 42.23 325.791 42.23 325.208 cv
cp
f
38.2464 325.208 mo
38.2464 324.626 37.7742 324.153 37.1917 324.153 cv
36.6092 324.153 36.137 324.626 36.137 325.208 cv
36.137 325.791 36.6092 326.263 37.1917 326.263 cv
37.7742 326.263 38.2464 325.791 38.2464 325.208 cv
cp
f
33.8557 325.208 mo
33.8557 324.42 33.2169 323.781 32.4288 323.781 cv
31.6407 323.781 31.0018 324.42 31.0018 325.208 cv
31.0018 325.996 31.6407 326.635 32.4288 326.635 cv
33.2169 326.635 33.8557 325.996 33.8557 325.208 cv
cp
f
112.249 325.208 mo
112.249 325.647 112.605 326.002 113.043 326.002 cv
113.482 326.002 113.837 325.647 113.837 325.208 cv
113.837 324.77 113.482 324.414 113.043 324.414 cv
112.605 324.414 112.249 324.77 112.249 325.208 cv
cp
f
119.392 325.208 mo
119.392 325.647 119.748 326.002 120.186 326.002 cv
120.625 326.002 120.98 325.647 120.98 325.208 cv
120.98 324.77 120.625 324.414 120.186 324.414 cv
119.748 324.414 119.392 324.77 119.392 325.208 cv
cp
f
115.987 325.208 mo
115.987 325.647 116.342 326.002 116.781 326.002 cv
117.219 326.002 117.575 325.647 117.575 325.208 cv
117.575 324.77 117.219 324.414 116.781 324.414 cv
116.342 324.414 115.987 324.77 115.987 325.208 cv
cp
f
123.281 325.208 mo
123.281 325.791 123.753 326.263 124.336 326.263 cv
124.918 326.263 125.39 325.791 125.39 325.208 cv
125.39 324.626 124.918 324.153 124.336 324.153 cv
123.753 324.153 123.281 324.626 123.281 325.208 cv
cp
f
127.264 325.208 mo
127.264 325.791 127.737 326.263 128.319 326.263 cv
128.902 326.263 129.374 325.791 129.374 325.208 cv
129.374 324.626 128.902 324.153 128.319 324.153 cv
127.737 324.153 127.264 324.626 127.264 325.208 cv
cp
f
152.485 325.208 mo
152.485 325.647 152.841 326.002 153.279 326.002 cv
153.718 326.002 154.073 325.647 154.073 325.208 cv
154.073 324.77 153.718 324.414 153.279 324.414 cv
152.841 324.414 152.485 324.77 152.485 325.208 cv
cp
f
145.342 325.208 mo
145.342 325.647 145.698 326.002 146.136 326.002 cv
146.575 326.002 146.931 325.647 146.931 325.208 cv
146.931 324.77 146.575 324.414 146.136 324.414 cv
145.698 324.414 145.342 324.77 145.342 325.208 cv
cp
f
148.748 325.208 mo
148.748 325.647 149.103 326.002 149.542 326.002 cv
149.98 326.002 150.336 325.647 150.336 325.208 cv
150.336 324.77 149.98 324.414 149.542 324.414 cv
149.103 324.414 148.748 324.77 148.748 325.208 cv
cp
f
140.932 325.208 mo
140.932 325.791 141.404 326.263 141.987 326.263 cv
142.569 326.263 143.042 325.791 143.042 325.208 cv
143.042 324.626 142.569 324.153 141.987 324.153 cv
141.404 324.153 140.932 324.626 140.932 325.208 cv
cp
f
136.949 325.208 mo
136.949 325.791 137.421 326.263 138.003 326.263 cv
138.586 326.263 139.058 325.791 139.058 325.208 cv
139.058 324.626 138.586 324.153 138.003 324.153 cv
137.421 324.153 136.949 324.626 136.949 325.208 cv
cp
f
131.814 325.208 mo
131.814 325.996 132.452 326.635 133.24 326.635 cv
134.029 326.635 134.667 325.996 134.667 325.208 cv
134.667 324.42 134.029 323.781 133.24 323.781 cv
132.452 323.781 131.814 324.42 131.814 325.208 cv
cp
f
96.7103 456.745 mo
96.5411 454.712 94.8566 453.109 92.7798 453.109 cv
90.5909 453.109 88.8164 454.883 88.8164 457.072 cv
88.8164 459.261 90.5909 461.036 92.7798 461.036 cv
94.9688 461.036 96.7433 459.261 96.7433 457.072 cv
96.7433 457.04 96.7347 457.011 96.7339 456.98 cv
109.368 459.73 li
165.511 456.859 li
109.368 453.988 li
96.7103 456.745 li
cp
f
82.7554 451.011 mo
79.4081 451.011 76.6945 453.725 76.6945 457.072 cv
76.6945 460.419 79.4081 463.133 82.7554 463.133 cv
86.1028 463.133 88.8164 460.419 88.8164 457.072 cv
88.8164 453.725 86.1028 451.011 82.7554 451.011 cv
cp
f
72.7311 453.109 mo
70.6543 453.109 68.9698 454.712 68.8006 456.745 cv
56.1433 453.988 li
.00012207 456.859 li
56.1433 459.73 li
68.7769 456.98 li
68.7762 457.011 68.7676 457.04 68.7676 457.072 cv
68.7676 459.261 70.5421 461.036 72.7311 461.036 cv
74.92 461.036 76.6945 459.261 76.6945 457.072 cv
76.6945 454.883 74.92 453.109 72.7311 453.109 cv
cp
f
82.7555 262.054 mo
81.3511 262.054 80.2127 260.915 80.2127 259.511 cv
80.2127 258.107 81.3511 256.968 82.7555 256.968 cv
84.1598 256.968 85.2982 258.107 85.2982 259.511 cv
85.2982 260.915 84.1598 262.054 82.7555 262.054 cv
cp
97.8211 259.311 mo
88.7037 256.692 li
86.676 259.172 li
86.5015 257.149 84.8236 255.556 82.7555 255.556 cv
80.6873 255.556 79.0093 257.149 78.8348 259.172 cv
76.8072 256.692 li
67.6898 259.311 li
67.6898 257.738 li
.00012207 259.65 li
67.6898 261.561 li
67.6898 259.711 li
76.8072 262.33 li
78.8348 259.85 li
79.0093 261.872 80.6873 263.466 82.7555 263.466 cv
84.8236 263.466 86.5015 261.872 86.676 259.849 cv
88.7037 262.33 li
97.8211 259.711 li
97.8211 261.561 li
165.511 259.65 li
97.8211 257.738 li
97.8211 259.311 li
cp
f
301.056 324.433 mo
302.109 323.958 303.101 323.376 304.065 322.826 cv
305.826 321.817 307.746 320.95 309.62 320.986 cv
310.544 321.008 311.422 321.31 312.106 321.867 cv
312.799 322.411 313.285 323.203 313.581 324.042 cv
313.634 324.192 313.674 324.345 313.716 324.498 cv
309.694 324.472 305.46 324.45 301.056 324.433 cv
cp
285.483 318.318 mo
284.74 317.213 283.76 316.368 282.803 315.672 cv
282.75 315.634 282.697 315.607 282.645 315.57 cv
284.106 315.078 285.718 314.863 287.305 315.012 cv
288.846 315.166 290.347 315.651 291.573 316.517 cv
291.811 316.683 292.03 316.869 292.248 317.055 cv
291.953 317.53 291.726 318.066 291.631 318.623 cv
291.388 319.858 291.626 321.16 292.185 322.271 cv
292.617 323.111 293.24 323.865 294.005 324.408 cv
291.815 324.402 289.591 324.397 287.335 324.393 cv
287.329 322.141 286.629 320.003 285.483 318.318 cv
cp
286.178 326.388 mo
286.031 327.053 285.784 327.699 285.463 328.304 cv
285.153 328.916 284.732 329.478 284.244 329.947 cv
283.272 330.909 281.895 331.351 280.499 331.231 cv
279.807 331.179 279.085 331.003 278.442 330.728 cv
277.812 330.485 277.299 330.029 276.864 329.508 cv
276.45 328.958 276.164 328.304 275.956 327.62 cv
275.839 327.178 275.775 326.723 275.736 326.262 cv
279.284 326.261 282.778 326.258 286.202 326.252 cv
286.192 326.297 286.188 326.343 286.178 326.388 cv
cp
282.501 316.26 mo
283.414 316.965 284.28 317.799 284.919 318.85 cv
285.893 320.409 286.467 322.377 286.427 324.391 cv
282.933 324.385 279.364 324.382 275.741 324.381 cv
275.843 323.275 276.113 322.186 276.54 321.165 cv
277.123 319.819 278.002 318.627 279.059 317.658 cv
279.839 316.914 280.823 316.304 281.914 315.849 cv
282.11 315.987 282.308 316.111 282.501 316.26 cv
cp
274.433 324.381 mo
274.334 323.109 274.037 321.855 273.546 320.68 cv
272.897 319.174 271.908 317.832 270.715 316.752 cv
270.013 316.096 269.178 315.545 268.269 315.089 cv
268.626 314.87 268.98 314.658 269.322 314.457 cv
271.129 313.424 272.766 312.549 274.026 311.668 cv
274.212 311.541 274.372 311.415 274.541 311.289 cv
274.695 311.403 274.837 311.516 275.004 311.631 cv
276.27 312.518 277.917 313.399 279.736 314.447 cv
280.064 314.64 280.402 314.85 280.738 315.059 cv
279.712 315.566 278.783 316.197 278.024 316.941 cv
276.862 318.059 275.926 319.43 275.308 320.944 cv
274.851 322.033 274.602 323.201 274.517 324.381 cv
274.504 324.381 274.491 324.381 274.478 324.381 cv
274.463 324.381 274.448 324.381 274.433 324.381 cv
cp
271.945 329.665 mo
271.523 330.211 270.934 330.534 270.319 330.803 cv
269.642 331.045 268.942 331.198 268.249 331.227 cv
266.857 331.312 265.53 330.776 264.595 329.798 cv
263.655 328.833 263.06 327.555 262.777 326.253 cv
266.19 326.258 269.673 326.261 273.209 326.262 cv
273.108 327.526 272.708 328.755 271.945 329.665 cv
cp
262.569 324.391 mo
262.532 322.336 263.127 320.335 264.14 318.764 cv
264.931 317.557 265.982 316.64 267.075 315.872 cv
268.243 316.361 269.288 317.021 270.092 317.825 cv
271.12 318.828 271.951 320.049 272.505 321.402 cv
272.904 322.344 273.123 323.358 273.209 324.381 cv
269.601 324.382 266.048 324.385 262.569 324.391 cv
cp
254.919 324.409 mo
255.73 323.835 256.389 323.044 256.821 322.145 cv
257.335 321.042 257.547 319.769 257.288 318.574 cv
257.19 318.05 256.974 317.546 256.695 317.099 cv
256.936 316.888 257.184 316.682 257.451 316.497 cv
258.713 315.628 260.249 315.139 261.823 315.01 cv
263.385 314.887 264.956 315.11 266.377 315.595 cv
266.282 315.66 266.188 315.712 266.094 315.779 cv
265.129 316.473 264.16 317.343 263.434 318.46 cv
262.337 320.113 261.655 322.2 261.646 324.393 cv
259.37 324.397 257.128 324.402 254.919 324.409 cv
cp
235.383 323.923 mo
235.704 323.084 236.224 322.307 236.936 321.778 cv
237.639 321.228 238.541 320.97 239.473 320.967 cv
240.412 320.971 241.375 321.206 242.309 321.561 cv
243.246 321.919 244.148 322.384 245.044 322.91 cv
245.958 323.43 246.896 323.981 247.89 324.433 cv
243.475 324.451 239.232 324.472 235.201 324.498 cv
235.254 324.305 235.313 324.112 235.383 323.923 cv
cp
253.443 323.603 mo
253.571 322.39 253.898 321.071 254.56 319.813 cv
254.9 319.159 255.333 318.526 255.843 317.944 cv
255.98 318.226 256.093 318.521 256.145 318.845 cv
256.325 319.787 256.14 320.828 255.688 321.723 cv
255.231 322.612 254.513 323.377 253.664 323.767 cv
253.587 323.804 253.503 323.826 253.424 323.858 cv
253.431 323.772 253.433 323.69 253.443 323.603 cv
cp
295.595 323.886 mo
295.447 323.831 295.297 323.778 295.156 323.703 cv
294.332 323.275 293.641 322.517 293.207 321.631 cv
292.785 320.742 292.609 319.722 292.795 318.799 cv
292.847 318.471 292.964 318.173 293.104 317.889 cv
293.623 318.47 294.067 319.102 294.415 319.758 cv
295.158 321.146 295.474 322.576 295.595 323.886 cv
cp
355.328 323.416 mo
354.35 323.416 353.553 324.156 353.444 325.105 cv
348.218 324.848 333.925 324.632 314.686 324.505 cv
314.625 324.204 314.551 323.904 314.452 323.606 cv
314.116 322.63 313.535 321.667 312.65 320.965 cv
311.78 320.244 310.625 319.884 309.498 319.86 cv
308.366 319.839 307.27 320.093 306.242 320.464 cv
305.215 320.835 304.233 321.328 303.31 321.858 cv
301.493 322.881 299.672 323.93 297.795 324.142 cv
297.398 324.185 296.981 324.18 296.568 324.128 cv
296.564 323.925 296.563 323.724 296.549 323.511 cv
296.463 322.197 296.14 320.711 295.422 319.289 cv
295.007 318.457 294.443 317.655 293.771 316.923 cv
293.904 316.78 294.042 316.642 294.188 316.515 cv
294.878 315.941 295.669 315.563 296.409 315.397 cv
297.152 315.227 297.84 315.283 298.375 315.465 cv
299.472 315.817 299.944 316.512 300.14 316.407 cv
300.226 316.375 300.173 316.196 299.988 315.878 cv
299.802 315.564 299.414 315.15 298.793 314.801 cv
298.169 314.457 297.279 314.282 296.334 314.409 cv
295.39 314.54 294.397 314.951 293.513 315.635 cv
293.325 315.788 293.142 315.957 292.964 316.134 cv
292.714 315.917 292.461 315.7 292.185 315.507 cv
290.745 314.503 288.98 313.941 287.23 313.801 cv
285.198 313.642 283.173 314.016 281.397 314.763 cv
280.898 314.466 280.403 314.193 279.925 313.934 cv
278.065 312.951 276.421 312.149 275.149 311.337 cv
275.022 311.258 274.916 311.18 274.796 311.101 cv
275.655 310.428 276.284 309.777 276.67 309.253 cv
276.943 308.936 277.085 308.642 277.202 308.462 cv
277.312 308.276 277.365 308.178 277.358 308.174 cv
277.35 308.169 277.279 308.258 277.149 308.431 cv
277.013 308.6 276.85 308.878 276.557 309.174 cv
276.13 309.677 275.455 310.297 274.545 310.932 cv
273.591 310.273 272.889 309.63 272.454 309.114 cv
271.919 308.502 271.701 308.112 271.671 308.131 cv
271.664 308.135 271.717 308.233 271.826 308.419 cv
271.942 308.6 272.083 308.893 272.356 309.21 cv
272.75 309.745 273.399 310.413 274.288 311.103 cv
274.13 311.208 273.983 311.314 273.812 311.42 cv
272.521 312.236 270.858 313.038 268.985 314.026 cv
268.545 314.262 268.093 314.514 267.637 314.783 cv
265.782 313.988 263.647 313.624 261.536 313.83 cv
259.826 314.005 258.107 314.573 256.724 315.575 cv
256.462 315.762 256.223 315.971 255.985 316.18 cv
255.809 316.005 255.627 315.838 255.442 315.686 cv
254.584 315.023 253.624 314.623 252.71 314.487 cv
251.797 314.345 250.934 314.501 250.315 314.819 cv
250.153 314.881 250.018 314.978 249.891 315.069 cv
249.767 315.162 249.639 315.234 249.545 315.333 cv
249.36 315.533 249.19 315.691 249.092 315.856 cv
248.899 316.186 248.828 316.389 248.885 316.456 cv
249.024 316.626 249.472 315.983 250.509 315.567 cv
251.026 315.366 251.708 315.292 252.457 315.435 cv
253.205 315.585 254.013 315.956 254.721 316.531 cv
254.884 316.668 255.037 316.817 255.182 316.972 cv
254.536 317.685 253.994 318.463 253.592 319.269 cv
252.894 320.651 252.571 322.093 252.479 323.377 cv
252.46 323.632 252.455 323.876 252.451 324.119 cv
252.413 324.124 252.376 324.137 252.337 324.141 cv
251.884 324.197 251.431 324.185 250.995 324.12 cv
249.12 323.853 247.311 322.798 245.496 321.769 cv
244.563 321.243 243.589 320.754 242.553 320.399 cv
241.524 320.039 240.42 319.803 239.29 319.853 cv
238.16 319.899 237.023 320.308 236.169 321.044 cv
235.301 321.767 234.753 322.745 234.438 323.723 cv
234.357 323.983 234.291 324.244 234.237 324.505 cv
215.015 324.632 200.735 324.848 195.512 325.105 cv
195.403 324.156 194.606 323.416 193.628 323.416 cv
192.576 323.416 191.723 324.269 191.723 325.322 cv
191.723 326.374 192.576 327.227 193.628 327.227 cv
194.606 327.227 195.403 326.487 195.512 325.538 cv
200.72 325.794 214.934 326.01 234.075 326.137 cv
234.076 327.299 234.325 328.421 234.797 329.396 cv
235.197 330.215 235.773 330.92 236.456 331.419 cv
237.136 331.917 237.895 332.226 238.64 332.347 cv
239.391 332.455 240.114 332.362 240.732 332.136 cv
241.352 331.888 241.827 331.495 242.177 331.085 cv
242.888 330.256 243.056 329.352 243.016 328.785 cv
243.038 328.495 242.938 328.283 242.912 328.139 cv
242.874 327.996 242.85 327.924 242.842 327.927 cv
242.833 327.929 242.838 328.008 242.853 328.154 cv
242.857 328.302 242.928 328.512 242.879 328.791 cv
242.862 329.336 242.629 330.172 241.916 330.888 cv
241.572 331.251 241.101 331.555 240.55 331.746 cv
239.984 331.905 239.341 331.942 238.682 331.801 cv
237.36 331.52 236.062 330.506 235.449 328.996 cv
235.091 328.141 234.921 327.151 234.956 326.143 cv
240.464 326.179 246.367 326.207 252.571 326.227 cv
252.595 326.406 252.618 326.586 252.646 326.751 cv
252.979 328.629 253.448 329.703 253.615 329.729 cv
253.815 329.75 253.606 328.659 253.431 326.832 cv
253.417 326.641 253.405 326.437 253.393 326.23 cv
256.146 326.239 258.953 326.246 261.814 326.251 cv
261.833 326.365 261.842 326.479 261.866 326.593 cv
262.013 327.332 262.27 328.062 262.62 328.757 cv
262.959 329.458 263.421 330.111 263.996 330.686 cv
264.57 331.257 265.279 331.73 266.07 332.006 cv
266.859 332.289 267.707 332.388 268.534 332.337 cv
269.367 332.283 270.164 332.101 270.944 331.786 cv
271.768 331.477 272.462 330.889 273.016 330.226 cv
273.548 329.536 273.899 328.749 274.149 327.946 cv
274.302 327.392 274.38 326.827 274.425 326.262 cv
274.443 326.262 274.46 326.262 274.478 326.262 cv
274.489 326.262 274.5 326.262 274.512 326.262 cv
274.621 327.738 275.099 329.246 276.112 330.438 cv
276.659 331.124 277.457 331.58 278.25 331.898 cv
279.023 332.165 279.838 332.336 280.668 332.361 cv
281.495 332.387 282.344 332.261 283.116 331.937 cv
283.89 331.62 284.578 331.125 285.13 330.538 cv
286.238 329.358 286.873 327.882 287.159 326.41 cv
287.169 326.357 287.171 326.304 287.18 326.251 cv
290.054 326.246 292.873 326.239 295.639 326.23 cv
295.632 326.378 295.626 326.53 295.617 326.668 cv
295.475 328.5 295.254 329.639 295.423 329.75 cv
295.559 329.856 296.006 328.825 296.359 326.94 cv
296.396 326.715 296.43 326.476 296.461 326.227 cv
302.623 326.207 308.489 326.179 313.964 326.143 cv
313.998 327.177 313.814 328.19 313.432 329.055 cv
312.802 330.535 311.504 331.489 310.211 331.758 cv
309.564 331.882 308.937 331.833 308.392 331.669 cv
307.854 331.487 307.411 331.168 307.074 330.821 cv
306.388 330.118 306.17 329.306 306.158 328.783 cv
306.109 328.514 306.183 328.312 306.185 328.171 cv
306.199 328.03 306.203 327.955 306.195 327.952 cv
306.187 327.95 306.163 328.019 306.125 328.159 cv
306.099 328.3 306 328.507 306.021 328.792 cv
305.982 329.347 306.147 330.239 306.852 331.058 cv
307.194 331.471 307.679 331.84 308.287 332.092 cv
308.902 332.308 309.62 332.392 310.364 332.275 cv
311.108 332.162 311.859 331.834 312.531 331.332 cv
313.206 330.825 313.77 330.115 314.161 329.291 cv
314.604 328.344 314.841 327.26 314.847 326.138 cv
334.004 326.01 348.233 325.794 353.444 325.538 cv
353.553 326.487 354.35 327.227 355.328 327.227 cv
356.38 327.227 357.233 326.374 357.233 325.322 cv
357.233 324.269 356.38 323.416 355.328 323.416 cv
cp
f
279.146 307.678 mo
278.917 308.384 li
278.838 308.607 278.77 308.894 278.698 309.156 cv
278.627 309.424 278.546 309.685 278.531 309.996 cv
278.482 310.585 278.527 311.258 278.914 311.854 cv
279.272 312.464 279.896 312.818 280.454 313.006 cv
280.738 313.117 281.034 313.139 281.323 313.203 cv
281.614 313.248 281.915 313.224 282.207 313.231 cv
282.484 313.2 282.771 313.137 283.063 313.081 cv
283.341 312.963 283.636 312.863 283.912 312.708 cv
284.462 312.376 284.927 311.885 285.223 311.288 cv
285.524 310.697 285.615 309.966 285.438 309.311 cv
285.266 308.664 284.875 308.113 284.364 307.761 cv
283.863 307.402 283.207 307.287 282.699 307.406 cv
282.187 307.514 281.806 307.782 281.55 308.049 cv
281.048 308.641 281.156 309.162 281.302 309.187 cv
281.484 309.24 281.629 308.929 282.027 308.661 cv
282.232 308.536 282.498 308.41 282.806 308.38 cv
283.11 308.355 283.415 308.432 283.704 308.652 cv
283.985 308.871 284.216 309.226 284.302 309.612 cv
284.393 309.987 284.332 310.417 284.124 310.796 cv
283.924 311.176 283.602 311.503 283.24 311.705 cv
283.036 311.774 282.853 311.88 282.652 311.929 cv
282.442 311.951 282.248 312.023 282.047 312.012 cv
281.222 312.031 280.203 311.755 279.914 311.156 cv
279.735 310.865 279.663 310.446 279.712 310.016 cv
279.705 309.809 279.798 309.565 279.839 309.339 cv
279.89 309.111 279.938 308.885 280.014 308.626 cv
280.318 307.672 280.529 306.506 280.238 305.45 cv
279.954 304.356 279.123 303.595 278.396 303.138 cv
277.656 302.657 276.939 302.331 276.381 301.974 cv
275.817 301.615 275.381 301.217 275.099 300.834 cv
274.492 300.067 274.622 299.42 274.547 299.434 cv
274.539 299.433 274.53 299.47 274.52 299.534 cv
274.511 299.462 274.502 299.425 274.493 299.426 cv
274.418 299.41 274.549 300.099 273.909 300.884 cv
273.613 301.276 273.162 301.678 272.586 302.037 cv
272.014 302.395 271.29 302.718 270.547 303.199 cv
270.179 303.448 269.791 303.728 269.465 304.122 cv
269.132 304.5 268.851 304.991 268.726 305.524 cv
268.448 306.583 268.678 307.739 268.976 308.696 cv
269.053 308.958 269.089 309.172 269.144 309.408 cv
269.197 309.638 269.261 309.874 269.258 310.083 cv
269.281 310.508 269.222 310.935 269.017 311.207 cv
268.683 311.783 267.654 312.052 266.833 312.013 cv
266.026 311.992 265.189 311.535 264.798 310.761 cv
264.598 310.384 264.549 309.963 264.633 309.589 cv
264.717 309.205 264.942 308.851 265.22 308.625 cv
265.78 308.14 266.504 308.323 266.946 308.574 cv
267.382 308.842 267.546 309.181 267.737 309.17 cv
267.891 309.191 268.009 308.671 267.504 308.048 cv
267.248 307.762 266.855 307.475 266.323 307.355 cv
265.794 307.229 265.105 307.342 264.581 307.716 cv
264.051 308.086 263.651 308.662 263.485 309.335 cv
263.31 310.019 263.433 310.764 263.758 311.359 cv
264.076 311.961 264.563 312.447 265.131 312.765 cv
265.424 312.883 265.709 313.029 265.998 313.101 cv
266.292 313.147 266.578 313.234 266.854 313.23 cv
267.445 313.252 268.03 313.171 268.601 312.972 cv
269.156 312.772 269.782 312.385 270.102 311.756 cv
270.442 311.152 270.5 310.485 270.424 309.901 cv
270.411 309.588 270.308 309.346 270.248 309.071 cv
270.178 308.803 270.107 308.534 270.031 308.31 cv
269.808 307.608 li
269.748 307.387 269.699 307.165 269.666 306.946 cv
269.6 306.507 269.598 306.076 269.679 305.682 cv
269.833 304.897 270.383 304.276 271.026 303.792 cv
271.666 303.299 272.346 302.914 272.923 302.461 cv
273.493 302.013 273.927 301.521 274.189 301.05 cv
274.339 300.829 274.397 300.582 274.474 300.392 cv
274.489 300.301 274.504 300.221 274.518 300.144 cv
274.53 300.216 274.544 300.29 274.556 300.374 cv
274.632 300.561 274.688 300.803 274.835 301.023 cv
275.092 301.488 275.522 301.98 276.091 302.43 cv
276.664 302.883 277.348 303.277 277.99 303.782 cv
278.625 304.283 279.187 304.918 279.317 305.726 cv
279.39 306.129 279.378 306.567 279.303 307.01 cv
279.262 307.232 279.213 307.452 279.146 307.678 cv
cp
f
272.287 306.253 mo
272.757 306.253 274.478 308.906 274.478 309.629 cv
274.478 308.906 276.199 306.253 276.669 306.253 cv
276.199 306.253 274.478 303.6 274.478 302.876 cv
274.478 303.6 272.757 306.253 272.287 306.253 cv
cp
f
274.478 391.945 mo
273.896 390.856 273.906 389.578 274.478 388.428 cv
275.051 389.578 275.06 390.856 274.478 391.945 cv
cp
317.009 387.201 mo
309.204 387.228 295.236 387.542 295.157 387.485 cv
289.091 383.067 281.187 383.242 278.292 384.108 cv
276.402 384.673 275.209 385.524 274.478 386.249 cv
273.747 385.524 272.554 384.673 270.664 384.108 cv
267.769 383.242 259.865 383.067 253.799 387.485 cv
253.72 387.542 239.752 387.228 231.947 387.201 cv
213.448 387.135 191.723 387.75 191.723 387.897 cv
191.723 388.045 213.246 388.57 231.741 388.502 cv
240.24 388.471 253.841 388.632 254.211 387.942 cv
254.215 387.94 254.219 387.942 254.222 387.94 cv
256.125 386.779 258.89 385.312 260.46 384.971 cv
269.357 383.037 272.487 385.916 273.695 387.289 cv
272.369 389.526 272.867 391.872 273.526 392.901 cv
273.55 392.938 273.584 392.964 273.609 393.001 cv
272.416 394.009 270.185 394.895 267.904 392.649 cv
266.383 390.065 268.223 388.02 269.568 388.091 cv
271.465 388.192 271.292 389.469 271.255 389.891 cv
271.221 390.289 270.979 390.61 270.556 390.819 cv
270.236 390.977 269.804 391.452 269.96 391.772 cv
270.32 392.509 271.162 392.289 271.482 392.131 cv
272.307 391.723 272.635 390.848 272.544 390.002 cv
272.441 389.052 272.059 386.672 269.045 387.295 cv
268.201 387.47 265.799 388.716 266.871 392.304 cv
266.324 392.001 264.481 390.922 264.115 390.713 cv
263.076 390.047 262.75 389.459 262.438 388.707 cv
262.207 388.15 262.462 387.32 262.925 387.122 cv
263.212 386.999 263.652 387.089 263.831 387.307 cv
264.021 387.538 263.842 387.897 263.667 388.163 cv
263.25 388.796 264.248 389.611 264.988 388.883 cv
265.929 387.958 265.371 386.766 264.897 386.376 cv
264.345 385.921 263.122 385.627 262.255 386.349 cv
261.747 386.772 260.836 388.248 262.723 390.194 cv
261.573 389.361 259.56 388.992 258.298 389.31 cv
256.544 389.751 255.302 391.011 255.212 392.817 cv
255.109 394.917 256.623 396.274 257.379 396.724 cv
258.39 397.324 260.089 397.249 260.867 396.673 cv
262.513 395.455 262.5 392.145 259.957 392.051 cv
259.146 392.021 258.228 392.575 257.979 393.219 cv
257.568 394.284 258.293 394.606 258.6 394.664 cv
259.788 394.89 259.682 393.241 260.583 394.019 cv
261.042 394.416 260.711 395.358 260.169 395.783 cv
259.636 396.201 258.797 396.297 258.032 396.028 cv
256.806 395.596 255.926 394.29 255.985 392.991 cv
256.044 391.692 257.039 390.473 258.3 390.154 cv
259.068 389.96 260.359 389.871 261.35 390.255 cv
263.648 391.145 267.482 393.99 268.87 394.521 cv
269.197 394.703 269.521 394.835 269.809 394.916 cv
270.339 395.064 270.868 395.133 271.382 395.126 cv
272.545 395.111 273.621 394.692 274.478 393.963 cv
275.335 394.692 276.411 395.111 277.574 395.126 cv
278.088 395.133 278.617 395.064 279.147 394.916 cv
279.435 394.835 279.758 394.703 280.086 394.521 cv
281.474 393.99 285.308 391.145 287.605 390.255 cv
288.597 389.871 289.888 389.96 290.656 390.154 cv
291.917 390.473 292.912 391.692 292.971 392.991 cv
293.03 394.29 292.15 395.596 290.924 396.028 cv
290.159 396.297 289.32 396.201 288.787 395.783 cv
288.245 395.358 287.914 394.416 288.373 394.019 cv
289.274 393.241 289.168 394.89 290.356 394.664 cv
290.663 394.606 291.388 394.284 290.977 393.219 cv
290.728 392.575 289.81 392.021 288.999 392.051 cv
286.456 392.145 286.443 395.455 288.089 396.673 cv
288.867 397.249 290.566 397.324 291.577 396.724 cv
292.333 396.274 293.847 394.917 293.744 392.817 cv
293.654 391.011 292.412 389.751 290.658 389.31 cv
289.396 388.992 287.383 389.361 286.233 390.194 cv
288.12 388.248 287.209 386.772 286.701 386.349 cv
285.834 385.627 284.611 385.921 284.058 386.376 cv
283.585 386.766 283.027 387.958 283.968 388.883 cv
284.708 389.611 285.706 388.796 285.289 388.163 cv
285.114 387.897 284.935 387.538 285.125 387.307 cv
285.304 387.089 285.744 386.999 286.031 387.122 cv
286.494 387.32 286.749 388.15 286.518 388.707 cv
286.206 389.459 285.88 390.047 284.841 390.713 cv
284.475 390.922 282.632 392.001 282.085 392.304 cv
283.157 388.716 280.755 387.47 279.911 387.295 cv
276.897 386.672 276.515 389.052 276.413 390.002 cv
276.321 390.848 276.648 391.723 277.474 392.131 cv
277.794 392.289 278.636 392.509 278.996 391.772 cv
279.153 391.452 278.72 390.977 278.4 390.819 cv
277.977 390.61 277.735 390.289 277.701 389.891 cv
277.664 389.469 277.492 388.192 279.388 388.091 cv
280.733 388.02 282.573 390.065 281.052 392.649 cv
278.771 394.895 276.54 394.009 275.347 393.001 cv
275.372 392.964 275.406 392.938 275.43 392.901 cv
276.089 391.872 276.587 389.526 275.261 387.289 cv
276.469 385.916 279.599 383.037 288.496 384.971 cv
290.066 385.312 292.831 386.779 294.734 387.94 cv
294.737 387.942 294.741 387.94 294.745 387.942 cv
295.115 388.632 308.716 388.471 317.215 388.502 cv
335.71 388.57 357.233 388.045 357.233 387.897 cv
357.233 387.75 335.508 387.135 317.009 387.201 cv
cp
f
247.118 65.816 mo
242.018 67.9966 237.211 70.5365 232.787 71.9955 cv
230.451 72.8299 228.012 73.3804 225.548 73.6771 cv
223.691 73.8292 li
221.832 73.7859 li
220.594 73.7574 219.38 73.5506 218.192 73.2141 cv
217.969 73.1536 217.754 73.0659 217.534 72.9964 cv
223.421 71.1835 229.143 68.643 234.899 67.1171 cv
238.181 66.0882 242.043 65.6175 245.923 65.4387 cv
246.631 65.4399 247.338 65.4411 248.045 65.4423 cv
247.736 65.5672 247.424 65.6873 247.118 65.816 cv
cp
303.186 65.4512 mo
304.177 65.4564 305.159 65.595 306.135 65.6584 cv
306.622 65.6988 307.107 65.7389 307.589 65.7787 cv
308.067 65.8467 308.537 65.9402 309.006 66.0186 cv
309.941 66.1846 310.859 66.3474 311.753 66.5058 cv
312.631 66.7444 313.485 66.9767 314.307 67.2005 cv
319.96 68.7308 325.574 71.2208 331.347 73.0051 cv
331.001 73.1155 330.658 73.2379 330.306 73.3263 cv
329.101 73.6013 327.893 73.8286 326.639 73.7974 cv
326.017 73.7914 325.397 73.8691 324.776 73.7973 cv
322.916 73.6423 li
320.449 73.2963 318.027 72.6734 315.686 71.8575 cv
311.257 70.3204 306.502 67.8323 301.493 65.7082 cv
301.288 65.6235 301.079 65.546 300.873 65.4632 cv
301.643 65.4445 302.414 65.4279 303.186 65.4512 cv
cp
245.667 64.0856 mo
244.646 64.0914 243.634 64.2325 242.629 64.2992 cv
242.128 64.3412 241.628 64.3835 241.133 64.425 cv
240.641 64.4952 240.155 64.5909 239.672 64.6718 cv
238.709 64.8423 237.763 65.0101 236.842 65.1731 cv
235.942 65.4145 235.067 65.649 234.224 65.8752 cv
227.892 67.5648 221.769 70.4207 215.578 72.2361 cv
215.306 72.1097 215.026 72.0002 214.762 71.8583 cv
213.669 71.2937 212.641 70.6063 211.728 69.7983 cv
210.804 69.0045 209.978 68.0995 209.333 67.0874 cv
208.68 66.085 208.151 64.9977 207.883 63.8465 cv
206.583 59.2556 209.352 54.1388 213.425 52.427 cv
215.453 51.5389 217.755 51.6002 219.674 52.5146 cv
221.585 53.3989 223.183 54.9057 224.021 56.6988 cv
224.442 57.589 224.706 58.5367 224.739 59.4812 cv
224.753 60.4225 224.594 61.3484 224.26 62.1964 cv
223.571 63.8669 222.309 65.259 220.797 65.8705 cv
219.299 66.5087 217.646 66.3844 216.342 65.7944 cv
215.033 65.1959 214.092 64.1484 213.672 63.033 cv
213.256 61.9082 213.42 60.7643 213.736 59.884 cv
214.071 58.9946 214.589 58.3362 215.082 57.9018 cv
216.104 57.0364 216.901 57.0135 216.875 56.9626 cv
216.875 56.9626 216.693 56.9811 216.347 57.0623 cv
216.013 57.1711 215.508 57.3609 214.969 57.796 cv
214.437 58.2288 213.862 58.897 213.485 59.8302 cv
213.121 60.7505 212.916 61.9701 213.347 63.2206 cv
213.784 64.4485 214.8 65.628 216.234 66.2729 cv
217.643 66.9281 219.477 67.0948 221.167 66.3827 cv
222.826 65.6584 224.276 64.1822 225.002 62.2971 cv
225.763 60.4283 225.716 58.0927 224.696 56.1266 cv
223.728 54.1443 221.997 52.465 219.829 51.5218 cv
218.749 51.0484 217.554 50.7608 216.321 50.7516 cv
215.083 50.7422 213.854 51.0417 212.712 51.5533 cv
210.425 52.5896 208.554 54.5179 207.436 56.8416 cv
206.298 59.1492 205.983 61.9803 206.762 64.5369 cv
207.474 67.1194 209.136 69.3715 211.173 71.0735 cv
211.942 71.7125 212.781 72.2579 213.647 72.7551 cv
213.448 72.8056 213.25 72.8677 213.051 72.9155 cv
209.533 73.7739 205.993 74.2278 202.628 74.0134 cv
200.955 73.8833 199.302 73.6693 197.805 73.1873 cv
197.038 72.9806 196.362 72.623 195.679 72.2996 cv
195.075 71.8653 194.433 71.4848 193.963 70.9474 cv
192.999 69.8932 192.44 68.549 192.454 67.2591 cv
192.501 65.9848 193.179 64.8206 194.17 64.2039 cv
195.118 63.5674 196.357 63.4355 197.182 63.9855 cv
198.024 64.5161 198.488 65.4667 198.538 66.3022 cv
198.565 66.724 198.485 67.1249 198.32 67.4582 cv
198.228 67.6391 198.152 67.7441 197.992 67.9315 cv
197.917 68.0226 197.908 68.1717 197.884 68.2249 cv
197.85 68.2923 197.816 68.36 197.775 68.421 cv
197.379 68.8929 196.684 68.9119 196.263 68.7859 cv
195.805 68.672 195.556 68.3788 195.462 68.1691 cv
195.363 67.9534 195.381 67.8146 195.357 67.8181 cv
195.357 67.8181 195.351 67.85 195.352 67.9144 cv
195.352 67.9792 195.352 68.0771 195.4 68.1978 cv
195.476 68.4344 195.735 68.7856 196.23 68.9372 cv
196.686 69.0897 197.449 69.154 197.995 68.5557 cv
198.042 68.4711 198.11 68.3918 198.142 68.2956 cv
198.182 68.1978 198.177 68.1212 198.248 68.0625 cv
198.377 67.9376 198.511 67.7541 198.614 67.5674 cv
198.818 67.1836 198.92 66.7189 198.901 66.235 cv
198.861 65.2773 198.383 64.1938 197.378 63.5329 cv
196.348 62.8635 194.877 63.0164 193.75 63.7464 cv
192.61 64.4532 191.75 65.8431 191.724 67.3708 cv
191.689 68.8998 192.348 70.4369 193.438 71.6449 cv
194.582 72.8025 196.058 73.7012 197.688 74.1772 cv
199.304 74.6904 201.017 74.9665 202.773 75.1051 cv
206.296 75.3734 209.985 74.9351 213.613 74.082 cv
214.199 73.9445 214.78 73.7804 215.362 73.6228 cv
216.299 74.0358 217.26 74.3956 218.253 74.6501 cv
219.544 74.9548 220.886 75.2025 222.204 75.1756 cv
222.864 75.1728 223.529 75.2513 224.183 75.179 cv
226.148 75.0174 li
228.743 74.6572 231.26 74.0022 233.664 73.1553 cv
238.209 71.5573 243 69.0452 247.917 66.9431 cv
249.061 66.4659 250.216 66.0236 251.376 65.6215 cv
251.486 65.6307 251.598 65.644 251.708 65.6512 cv
253.612 65.7389 255.417 66.1808 257.146 66.4357 cv
258.001 66.6111 258.815 66.8537 259.607 67.0444 cv
260.391 67.2655 261.172 67.3892 261.865 67.6593 cv
263.263 68.1559 264.545 68.528 265.585 68.9318 cv
267.642 69.793 268.958 70.2589 269.125 70.1216 cv
269.292 69.9843 268.148 69.2911 266.123 68.2278 cv
265.114 67.6887 263.805 67.2513 262.368 66.6663 cv
261.655 66.3541 260.853 66.1744 260.034 65.9286 cv
259.211 65.7023 258.359 65.4353 257.465 65.2236 cv
256.501 65.0189 255.498 64.8356 254.47 64.6759 cv
254.785 64.5916 255.101 64.499 255.417 64.4235 cv
256.048 64.2937 256.676 64.165 257.298 64.037 cv
257.924 63.9402 258.55 63.8868 259.166 63.809 cv
260.401 63.6404 261.607 63.6675 262.779 63.7504 cv
267.497 64.0907 271.365 66.11 273.522 68.1519 cv
273.686 68.3067 273.826 68.4565 273.973 68.6082 cv
272.542 70.5028 272.256 71.9899 272.338 72.0944 cv
272.509 72.2814 272.962 70.9323 274.504 69.1794 cv
275.914 70.7892 276.42 72.0614 276.644 72.0596 cv
276.793 72.1397 276.567 70.6174 275.045 68.6064 cv
275.11 68.5403 275.162 68.4774 275.23 68.4106 cv
277.314 66.3087 281.229 64.1866 286.05 63.8039 cv
287.248 63.7089 288.481 63.6791 289.745 63.8492 cv
290.376 63.9297 291.018 63.9742 291.657 64.0839 cv
292.295 64.2132 292.938 64.3436 293.584 64.4747 cv
293.866 64.5426 294.148 64.6273 294.429 64.7023 cv
293.423 64.8836 292.442 65.0955 291.488 65.2601 cv
290.616 65.4601 289.787 65.7309 288.983 65.9526 cv
288.187 66.2049 287.398 66.3625 286.699 66.6707 cv
285.29 67.2425 284.013 67.7029 282.997 68.209 cv
280.984 69.2762 279.794 69.9983 279.813 70.2057 cv
279.831 70.4133 281.093 69.9668 283.148 69.0963 cv
284.173 68.6523 285.479 68.2953 286.897 67.7765 cv
287.601 67.4975 288.391 67.3473 289.193 67.1273 cv
290.001 66.9272 290.835 66.6828 291.707 66.4905 cv
293.542 66.1323 295.514 65.8385 297.543 65.6504 cv
298.785 66.0814 300.021 66.5613 301.243 67.0745 cv
306.258 69.2162 311.115 71.7749 315.662 73.2956 cv
320.441 74.9377 325.853 75.9382 331.068 74.5365 cv
331.91 74.3047 332.726 73.9906 333.524 73.6382 cv
334.197 73.8206 334.869 74.0038 335.547 74.1588 cv
339.164 74.9955 342.84 75.4133 346.347 75.1245 cv
348.092 74.956 349.8 74.7023 351.405 74.1503 cv
352.218 73.9106 352.964 73.5038 353.702 73.1263 cv
354.376 72.6285 355.073 72.1829 355.605 71.5497 cv
356.674 70.3206 357.289 68.7632 357.229 67.2284 cv
357.135 65.6906 356.263 64.3152 355.085 63.6348 cv
353.939 62.9171 352.436 62.7906 351.408 63.5157 cv
350.403 64.2089 349.935 65.3076 349.908 66.2845 cv
349.896 66.7776 350.009 67.2522 350.226 67.6427 cv
350.323 67.8282 350.492 68.0345 350.591 68.1315 cv
350.641 68.1869 350.636 68.2461 350.682 68.3621 cv
350.732 68.4576 350.788 68.5524 350.851 68.6339 cv
351.451 69.2558 352.227 69.178 352.703 69.0203 cv
353.215 68.8609 353.499 68.4883 353.581 68.2292 cv
353.634 68.0981 353.634 67.9922 353.635 67.9222 cv
353.637 67.8526 353.631 67.818 353.631 67.818 cv
353.606 67.8141 353.628 67.9665 353.517 68.2075 cv
353.413 68.4424 353.131 68.7621 352.644 68.8769 cv
352.195 69.0033 351.462 68.9908 351.032 68.4547 cv
350.997 68.3795 350.942 68.3133 350.921 68.2303 cv
350.89 68.1573 350.89 68.0196 350.804 67.9481 cv
350.663 67.791 350.571 67.6456 350.48 67.4654 cv
350.313 67.1107 350.24 66.6891 350.276 66.2512 cv
350.346 65.3846 350.841 64.4142 351.728 63.8849 cv
352.611 63.3548 353.879 63.5259 354.839 64.1974 cv
355.824 64.8654 356.508 66.0687 356.492 67.3787 cv
356.482 68.6971 355.862 70.0464 354.864 71.0918 cv
353.816 72.0836 352.471 72.8769 350.925 73.2843 cv
349.399 73.7278 347.738 73.9584 346.05 74.054 cv
342.661 74.2382 339.104 73.753 335.575 72.8691 cv
335.461 72.8409 335.349 72.8043 335.235 72.7753 cv
336.233 72.2121 337.188 71.5692 338.043 70.8038 cv
339.045 69.9315 339.947 68.9314 340.657 67.8014 cv
341.374 66.6829 341.955 65.4579 342.249 64.1583 cv
342.94 61.5803 342.517 58.7761 341.327 56.506 cv
340.14 54.2244 338.216 52.3528 335.897 51.3995 cv
333.593 50.4153 330.899 50.5381 328.794 51.5941 cv
326.678 52.6154 324.958 54.2971 324.052 56.3144 cv
323.599 57.3165 323.323 58.389 323.306 59.4577 cv
323.307 60.524 323.51 61.5616 323.9 62.4955 cv
324.703 64.3373 326.128 65.84 327.838 66.4936 cv
329.545 67.1761 331.384 66.9819 332.788 66.3 cv
334.206 65.6096 335.216 64.4272 335.643 63.1792 cv
336.067 61.9109 335.842 60.686 335.474 59.7596 cv
335.085 58.824 334.509 58.149 333.968 57.7134 cv
333.422 57.2739 332.91 57.0826 332.57 56.9709 cv
332.219 56.8884 332.035 56.8689 332.035 56.8689 cv
332.006 56.9206 332.835 56.9457 333.883 57.8442 cv
334.387 58.2955 334.92 58.9727 335.25 59.89 cv
335.571 60.795 335.718 61.9709 335.277 63.1229 cv
334.829 64.2603 333.849 65.3328 332.49 65.8973 cv
331.149 66.4717 329.464 66.5703 327.945 65.8853 cv
326.45 65.1863 325.145 63.7949 324.524 62.0562 cv
323.873 60.3312 323.958 58.2601 324.92 56.4895 cv
325.831 54.7083 327.456 53.1949 329.431 52.3821 cv
330.414 51.9726 331.485 51.7377 332.566 51.7475 cv
333.643 51.7562 334.736 52.0405 335.74 52.5108 cv
339.78 54.3961 342.418 59.6102 340.931 64.1907 cv
340.275 66.4813 338.764 68.506 336.879 70.0583 cv
335.802 70.939 334.594 71.6608 333.32 72.2458 cv
327.018 70.3873 320.789 67.4713 314.349 65.7876 cv
310.991 64.7543 306.99 64.2612 303.003 64.1002 cv
302.003 64.1078 301.002 64.1156 300.006 64.123 cv
299.241 64.1282 298.486 64.2177 297.735 64.2952 cv
296.422 63.8541 295.096 63.4677 293.764 63.1608 cv
293.104 63.0316 292.449 62.9034 291.799 62.7761 cv
291.143 62.6805 290.485 62.6302 289.838 62.5574 cv
288.546 62.3979 287.244 62.4411 286.009 62.5513 cv
281.024 62.993 276.959 65.2704 274.816 67.5934 cv
274.703 67.7163 274.613 67.8334 274.509 67.9543 cv
274.451 67.8862 274.405 67.822 274.344 67.7532 cv
272.238 65.3512 268.078 62.9742 262.96 62.5117 cv
261.692 62.3949 260.354 62.3549 259.028 62.5223 cv
258.365 62.6011 257.687 62.6459 257.017 62.7574 cv
256.35 62.8893 255.679 63.0225 255.003 63.1563 cv
253.716 63.4612 252.438 63.8422 251.172 64.2714 cv
249.364 64.1061 247.513 64.0298 245.667 64.0856 cv
cp
f
273.069 50.2053 mo
273.387 49.7433 273.848 49.5193 274.478 49.5193 cv
275.108 49.5193 275.569 49.7433 275.887 50.2053 cv
277.322 52.2932 275.612 58.5345 274.478 61.8132 cv
273.344 58.5345 271.634 52.2932 273.069 50.2053 cv
cp
274.478 64.204 mo
274.868 63.1873 li
275.028 62.7693 278.768 52.9219 276.576 49.732 cv
276.097 49.0363 275.392 48.6837 274.478 48.6837 cv
273.564 48.6837 272.859 49.0363 272.38 49.732 cv
270.188 52.9219 273.927 62.7693 274.087 63.1873 cv
274.478 64.204 li
cp
f
280.594 55.2325 mo
280.978 55.2325 281.395 55.3994 281.833 55.7285 cv
282.478 56.2132 282.761 56.7331 282.699 57.318 cv
282.495 59.245 278.755 61.546 276.643 62.6313 cv
277.152 60.0065 278.509 55.2325 280.594 55.2325 cv
cp
275.558 64.0749 mo
276.264 63.7475 li
276.548 63.6165 283.204 60.4977 283.53 57.4062 cv
283.624 56.5168 283.222 55.7274 282.336 55.0605 cv
281.749 54.6199 281.164 54.3969 280.594 54.3969 cv
277.147 54.3969 275.816 62.3929 275.676 63.3047 cv
275.558 64.0749 li
cp
f
267.123 55.7285 mo
267.56 55.3994 267.978 55.2325 268.363 55.2325 cv
270.446 55.2325 271.804 60.006 272.313 62.6313 cv
270.201 61.546 266.46 59.245 266.257 57.318 cv
266.195 56.7327 266.479 56.2132 267.123 55.7285 cv
cp
272.691 63.7475 mo
273.397 64.0749 li
273.28 63.3047 li
273.14 62.3929 271.81 54.3969 268.363 54.3969 cv
267.793 54.3969 267.207 54.6199 266.62 55.0605 cv
265.734 55.7274 265.332 56.5168 265.426 57.4062 cv
265.753 60.4977 272.407 63.6165 272.691 63.7475 cv
cp
f
290.732 441.989 mo
292.538 440.384 294.789 439.284 297.165 438.846 cv
297.795 438.73 298.495 438.627 298.909 438.138 cv
299.346 437.621 299.26 436.748 298.73 436.326 cv
298.338 436.014 297.8 435.961 297.299 435.993 cv
295.736 436.091 294.27 436.894 293.168 438.008 cv
292.066 439.122 291.301 440.529 290.732 441.989 cv
cp
f
292.9 431.269 mo
292.399 431.273 291.947 431.57 291.578 431.909 cv
290.424 432.969 289.789 434.515 289.632 436.074 cv
289.476 437.633 289.766 439.208 290.24 440.701 cv
290.636 438.318 291.695 436.047 293.267 434.212 cv
293.685 433.726 294.164 433.206 294.178 432.565 cv
294.193 431.889 293.577 431.263 292.9 431.269 cv
cp
f
336.34 453.193 mo
335.66 453.209 334.986 452.963 334.496 452.586 cv
333.967 452.248 333.637 451.777 333.394 451.376 cv
332.948 450.539 333.024 449.88 332.818 449.806 cv
332.735 449.77 332.655 449.904 332.578 450.212 cv
332.465 450.52 332.5 450.993 332.644 451.577 cv
332.852 452.128 333.198 452.789 333.832 453.3 cv
333.958 453.418 334.104 453.525 334.255 453.627 cv
323.909 453.627 li
324.709 453.277 325.493 452.817 326.206 452.201 cv
327.476 451.042 328.387 449.538 329.41 448.238 cv
330.391 446.904 331.774 445.951 333.331 445.517 cv
334.885 445.116 336.552 445.363 337.779 446.314 cv
338.975 447.129 339.831 448.76 339.482 450.326 cv
339.129 451.875 337.749 453.256 336.34 453.193 cv
cp
302.962 453.627 mo
303 453.132 302.958 452.631 302.851 452.164 cv
302.84 452.131 302.821 452.103 302.81 452.07 cv
303.798 452.638 305.041 453.189 306.452 453.627 cv
302.962 453.627 li
cp
301.625 454.275 mo
301.441 454.846 301.099 455.378 300.701 455.858 cv
300.521 456.12 300.279 456.243 300.083 456.449 cv
299.861 456.603 299.613 456.701 299.382 456.815 cv
298.829 456.986 298.287 456.946 297.805 456.821 cv
298.829 455.786 299.313 454.479 299.446 453.413 cv
299.575 452.291 299.35 451.374 299.05 450.819 cv
298.743 450.267 298.458 450.032 298.385 450.044 cv
298.297 450.063 298.383 450.356 298.59 450.839 cv
298.712 451.36 298.9 452.128 298.731 453.108 cv
298.563 454.069 298.104 455.224 297.129 456.139 cv
297.033 456.231 296.932 456.326 296.834 456.42 cv
296.823 456.413 296.807 456.407 296.795 456.4 cv
296.494 456.201 296.249 456.026 296.097 455.871 cv
295.925 455.732 295.786 455.66 295.701 455.687 cv
295.616 455.714 295.614 455.841 295.692 456.067 cv
295.731 456.179 295.791 456.317 295.87 456.475 cv
295.967 456.617 296.102 456.764 296.252 456.933 cv
296.253 456.933 li
295.99 457.104 295.725 457.275 295.454 457.45 cv
295.152 457.672 294.8 457.837 294.435 457.997 cv
294.069 458.152 293.725 458.358 293.325 458.483 cv
292.366 458.83 291.344 459.138 290.287 459.405 cv
290.061 459.188 289.824 458.985 289.565 458.818 cv
288.367 458.021 286.867 457.691 285.371 457.597 cv
286.571 457.425 288.038 456.921 289.358 455.811 cv
291.117 454.407 292.616 452.359 294.613 450.832 cv
295.57 450.068 296.688 449.642 297.875 449.705 cv
299.047 449.763 300.18 450.322 300.939 451.141 cv
301.699 451.901 302.006 453.139 301.625 454.275 cv
cp
282.75 460.354 mo
280.773 460.361 278.823 460.103 277.001 459.655 cv
277.026 459.65 277.053 459.644 277.078 459.639 cv
277.819 459.501 278.544 459.365 279.288 459.226 cv
280.081 459.079 280.927 458.999 281.791 458.868 cv
282.653 458.818 283.547 458.706 284.417 458.748 cv
286.037 458.745 287.634 459.052 288.739 459.756 cv
286.801 460.144 284.772 460.372 282.75 460.354 cv
cp
274.254 458.794 mo
273.674 458.571 273.109 458.334 272.581 458.074 cv
269.569 456.6 266.865 454.321 264.903 451.521 cv
262.92 448.735 261.782 445.376 261.676 442.061 cv
261.669 438.78 262.985 435.412 265.641 433.874 cv
266.951 433.147 268.49 432.887 269.919 433.091 cv
271.351 433.306 272.648 433.972 273.599 434.94 cv
273.658 435 273.704 435.068 273.761 435.129 cv
272.187 437.276 271.864 440.043 272.795 442.09 cv
273.075 442.733 273.458 443.298 273.902 443.777 cv
273.695 443.971 273.479 444.147 273.249 444.29 cv
272.411 444.788 271.467 444.949 270.696 444.707 cv
269.484 444.316 268.765 443.425 268.459 442.643 cv
269.411 442.503 270.145 441.69 270.145 440.699 cv
270.145 439.609 269.261 438.725 268.171 438.725 cv
267.081 438.725 266.198 439.609 266.198 440.699 cv
266.198 441.789 267.081 442.672 268.171 442.672 cv
268.21 442.672 268.246 442.663 268.284 442.661 cv
268.555 443.524 269.284 444.544 270.647 445.027 cv
271.511 445.331 272.59 445.146 273.527 444.615 cv
273.773 444.471 274.007 444.298 274.229 444.103 cv
274.484 444.335 274.75 444.546 275.037 444.712 cv
275.988 445.245 277.086 445.391 277.959 445.081 cv
279.33 444.576 280.06 443.546 280.332 442.669 cv
280.344 442.669 280.354 442.672 280.366 442.672 cv
281.456 442.672 282.339 441.789 282.339 440.699 cv
282.339 439.609 281.456 438.725 280.366 438.725 cv
279.276 438.725 278.392 439.609 278.392 440.699 cv
278.392 441.717 279.167 442.546 280.158 442.651 cv
279.844 443.468 279.093 444.398 277.818 444.787 cv
277.017 445.034 276.046 444.823 275.2 444.307 cv
274.968 444.16 274.75 443.981 274.543 443.784 cv
275.027 443.28 275.441 442.674 275.731 441.977 cv
276.594 439.949 276.275 437.239 274.724 435.13 cv
274.821 435.024 274.906 434.91 275.011 434.81 cv
275.994 433.858 277.323 433.192 278.781 433.036 cv
280.229 432.881 281.782 433.156 283.078 433.945 cv
285.722 435.577 286.935 439.022 286.864 442.308 cv
286.715 445.644 285.506 448.993 283.479 451.76 cv
281.469 454.54 278.729 456.786 275.693 458.216 cv
275.24 458.433 274.741 458.608 274.254 458.794 cv
cp
265.585 460.362 mo
263.61 460.371 261.64 460.14 259.754 459.765 cv
260.893 459.025 262.557 458.727 264.215 458.732 cv
265.07 458.706 265.943 458.794 266.787 458.848 cv
267.631 458.97 268.459 459.045 269.234 459.181 cv
270.103 459.337 270.905 459.482 271.625 459.617 cv
269.703 460.089 267.657 460.366 265.585 460.362 cv
cp
258.218 459.417 mo
257.186 459.159 256.18 458.872 255.241 458.537 cv
254.072 458.126 253.045 457.559 252.203 456.905 cv
252.492 456.597 252.681 456.318 252.742 456.076 cv
252.823 455.842 252.83 455.7 252.762 455.648 cv
252.693 455.598 252.567 455.653 252.405 455.78 cv
252.324 455.844 252.234 455.926 252.139 456.025 cv
251.997 456.124 251.867 456.215 251.745 456.3 cv
251.703 456.328 251.644 456.354 251.597 456.383 cv
250.584 455.435 249.93 454.356 249.773 453.302 cv
249.577 452.327 249.667 451.505 249.826 450.953 cv
249.991 450.406 250.147 450.086 250.084 449.994 cv
250.037 449.91 249.821 450.121 249.467 450.627 cv
249.201 451.162 248.872 452.06 248.981 453.212 cv
249.081 454.321 249.557 455.692 250.618 456.795 cv
250.177 456.9 249.683 456.923 249.181 456.777 cv
248.946 456.672 248.695 456.572 248.469 456.418 cv
248.27 456.209 248.019 456.095 247.838 455.819 cv
247.433 455.332 247.078 454.79 246.906 454.208 cv
246.686 453.631 246.73 453.028 246.842 452.478 cv
247.018 451.94 247.283 451.435 247.667 451.069 cv
248.442 450.264 249.589 449.723 250.759 449.711 cv
251.946 449.672 253.036 450.122 253.988 450.901 cv
255.96 452.44 257.44 454.482 259.197 455.881 cv
260.069 456.579 260.999 457.096 261.886 457.372 cv
262.255 457.482 262.6 457.549 262.936 457.607 cv
261.451 457.732 259.981 458.101 258.84 458.919 cv
258.615 459.059 258.411 459.231 258.218 459.417 cv
cp
274.247 435.695 mo
275.64 437.578 275.971 440.044 275.195 441.862 cv
274.956 442.46 274.618 442.987 274.224 443.435 cv
273.823 442.969 273.484 442.42 273.25 441.801 cv
272.533 439.971 272.88 437.556 274.247 435.695 cv
cp
245.584 453.627 mo
241.918 453.627 li
243.434 453.162 244.739 452.562 245.769 451.953 cv
245.606 452.485 245.536 453.057 245.584 453.627 cv
cp
214.179 453.627 mo
214.33 453.528 214.475 453.423 214.603 453.309 cv
215.223 452.824 215.574 452.188 215.777 451.649 cv
216.139 450.51 215.754 449.806 215.636 449.822 cv
215.552 449.82 215.485 449.977 215.435 450.234 cv
215.423 450.493 215.289 450.85 215.12 451.27 cv
214.884 451.667 214.579 452.144 214.058 452.501 cv
213.58 452.9 212.898 453.145 212.216 453.152 cv
210.795 453.244 209.37 451.817 209.056 450.235 cv
208.69 448.631 209.689 447.022 210.865 446.23 cv
211.499 445.801 212.227 445.494 212.989 445.375 cv
213.763 445.28 214.562 445.349 215.331 445.562 cv
216.884 446.011 218.224 447.008 219.195 448.34 cv
220.193 449.655 221.117 451.15 222.396 452.292 cv
223.056 452.858 223.776 453.294 224.512 453.627 cv
214.179 453.627 li
cp
351.951 453.483 mo
352.387 452.615 353.736 450.32 350.766 449.641 cv
351.92 450.867 350.773 452.664 349.987 453.627 cv
338.571 453.627 li
338.765 453.497 338.953 453.356 339.122 453.195 cv
339.896 452.482 340.439 451.516 340.657 450.47 cv
340.904 449.419 340.68 448.284 340.225 447.392 cv
339.764 446.491 339.107 445.743 338.367 445.244 cv
337.587 444.703 336.685 444.318 335.718 444.169 cv
334.758 444.048 333.784 444.141 332.869 444.405 cv
331.044 444.934 329.462 446.195 328.45 447.659 cv
327.416 449.098 326.586 450.513 325.492 451.56 cv
324.382 452.584 323.009 453.215 321.674 453.554 cv
321.559 453.584 321.447 453.601 321.333 453.627 cv
317.665 453.627 li
319.936 452.841 321.965 451.499 323.328 449.883 cv
325.078 447.816 326.214 444.995 325.832 442.144 cv
325.508 439.303 323.645 436.752 321.108 435.547 cv
319.817 434.984 318.359 434.854 317.028 435.116 cv
315.681 435.362 314.492 436.071 313.538 436.948 cv
312.542 437.814 311.994 439.073 311.765 440.288 cv
311.59 441.531 311.839 442.762 312.377 443.785 cv
312.913 444.811 313.763 445.632 314.748 446.062 cv
315.729 446.494 316.773 446.564 317.697 446.39 cv
318.617 446.208 319.455 445.809 320.031 445.21 cv
320.592 444.613 320.986 443.935 321.11 443.267 cv
321.438 441.943 321.104 440.847 320.745 440.237 cv
320.599 439.905 320.38 439.719 320.264 439.576 cv
320.141 439.438 320.074 439.37 320.068 439.376 cv
320.03 439.404 320.338 439.67 320.628 440.308 cv
320.928 440.924 321.172 441.996 320.79 443.216 cv
320.474 444.432 319.268 445.692 317.541 445.874 cv
316.702 445.982 315.771 445.862 314.944 445.436 cv
314.119 445.016 313.423 444.266 313.003 443.346 cv
312.581 442.43 312.423 441.342 312.628 440.298 cv
312.894 439.276 313.41 438.265 314.292 437.536 cv
315.16 436.817 316.229 436.295 317.385 436.092 cv
318.547 435.934 319.727 436.118 320.802 436.644 cv
322.933 437.723 324.458 440.063 324.667 442.492 cv
324.768 443.712 324.579 444.956 324.163 446.119 cv
323.733 447.281 323.056 448.339 322.258 449.263 cv
320.762 451.031 318.337 452.353 315.732 452.95 cv
313.111 453.54 310.344 453.424 307.976 452.924 cv
305.493 452.412 303.517 451.489 302.129 450.749 cv
302.005 450.576 301.893 450.386 301.749 450.243 cv
300.743 449.174 299.298 448.514 297.811 448.506 cv
296.326 448.449 294.851 449.131 293.84 450.032 cv
291.768 451.766 290.382 453.888 288.827 455.275 cv
287.3 456.719 285.53 457.231 284.27 457.349 cv
283.638 457.426 283.131 457.435 282.782 457.428 cv
282.433 457.433 282.242 457.444 282.241 457.462 cv
282.239 457.478 282.426 457.514 282.778 457.564 cv
282.854 457.577 282.966 457.586 283.057 457.598 cv
282.574 457.632 282.096 457.676 281.625 457.717 cv
280.754 457.861 279.898 457.967 279.109 458.142 cv
278.654 458.245 278.222 458.349 277.806 458.454 cv
278.044 458.316 278.278 458.171 278.511 458.024 cv
278.818 458.004 279.452 457.933 280.35 457.647 cv
281.614 457.234 283.294 456.27 284.926 454.763 cv
286.571 453.269 288.19 451.304 289.823 449.268 cv
291.465 447.242 293.142 445.115 295.052 443.464 cv
295.948 442.686 297.049 441.911 298.264 441.398 cv
299.475 440.874 300.791 440.648 301.978 440.662 cv
304.374 440.659 306.155 441.452 306.351 441.095 cv
306.533 440.881 304.786 439.718 302.034 439.565 cv
300.679 439.477 299.118 439.73 297.731 440.334 cv
296.336 440.926 295.131 441.805 294.176 442.626 cv
292.126 444.385 290.457 446.59 288.888 448.664 cv
287.326 450.75 285.847 452.732 284.361 454.264 cv
282.885 455.802 281.382 456.837 280.216 457.355 cv
279.576 457.633 279.078 457.787 278.742 457.884 cv
281.025 456.405 283.05 454.473 284.622 452.211 cv
286.715 449.236 287.916 445.651 287.983 442.055 cv
287.953 440.259 287.594 438.475 286.84 436.872 cv
286.095 435.269 284.89 433.875 283.373 433.02 cv
281.837 432.201 280.089 431.949 278.482 432.211 cv
276.873 432.482 275.404 433.278 274.366 434.388 cv
274.318 434.44 274.281 434.498 274.234 434.551 cv
274.162 434.471 274.103 434.383 274.027 434.306 cv
271.925 432.062 268.031 431.392 264.983 433.152 cv
263.471 434.033 262.322 435.487 261.612 437.104 cv
260.897 438.728 260.571 440.522 260.576 442.324 cv
260.684 445.928 261.95 449.508 264.086 452.461 cv
265.674 454.684 267.701 456.578 269.978 458.021 cv
269.669 457.931 269.081 457.77 268.28 457.414 cv
267.098 456.877 265.583 455.819 264.107 454.254 cv
262.618 452.699 261.143 450.695 259.579 448.596 cv
258.007 446.509 256.336 444.294 254.271 442.546 cv
253.303 441.726 252.1 440.875 250.725 440.313 cv
249.359 439.739 247.84 439.513 246.523 439.605 cv
243.85 439.771 242.143 440.906 242.218 441.173 cv
242.308 441.581 244.101 440.728 246.543 440.703 cv
247.754 440.675 249.103 440.902 250.336 441.438 cv
251.573 441.962 252.684 442.757 253.57 443.537 cv
255.469 445.203 257.136 447.327 258.763 449.353 cv
260.383 451.386 261.99 453.343 263.623 454.834 cv
265.246 456.335 266.915 457.304 268.177 457.72 cv
269.241 458.063 269.93 458.108 270.135 458.115 cv
270.278 458.203 270.424 458.285 270.569 458.37 cv
270.2 458.283 269.832 458.195 269.458 458.106 cv
268.649 457.931 267.768 457.829 266.875 457.686 cv
266.574 457.665 266.268 457.639 265.962 457.614 cv
266.167 457.583 266.307 457.558 266.305 457.545 cv
266.303 457.528 266.11 457.516 265.755 457.509 cv
265.401 457.514 264.886 457.5 264.244 457.419 cv
262.966 457.291 261.169 456.748 259.641 455.271 cv
258.083 453.854 256.699 451.713 254.612 449.978 cv
253.58 449.073 252.091 448.428 250.603 448.507 cv
249.117 448.564 247.683 449.244 246.696 450.337 cv
246.602 450.432 246.517 450.54 246.432 450.648 cv
245.06 451.399 243.08 452.345 240.586 452.877 cv
238.168 453.404 235.328 453.528 232.664 452.9 cv
229.994 452.307 227.601 450.867 226.13 449.103 cv
224.569 447.237 223.579 444.733 223.901 442.291 cv
224.15 439.858 225.775 437.612 227.894 436.568 cv
228.983 436.082 230.161 435.958 231.305 436.152 cv
232.459 436.335 233.495 436.934 234.327 437.659 cv
235.205 438.38 235.661 439.417 235.893 440.426 cv
236.068 441.461 235.889 442.53 235.453 443.424 cv
235.019 444.32 234.316 445.041 233.496 445.432 cv
232.674 445.83 231.758 445.929 230.938 445.806 cv
230.123 445.676 229.368 445.358 228.843 444.854 cv
228.335 444.353 227.946 443.769 227.806 443.164 cv
227.444 441.971 227.69 440.93 227.984 440.335 cv
228.269 439.72 228.565 439.464 228.528 439.435 cv
228.522 439.429 228.457 439.496 228.334 439.631 cv
228.219 439.772 228.004 439.955 227.859 440.283 cv
227.506 440.883 227.174 441.97 227.505 443.283 cv
227.76 444.587 229.025 446.065 230.924 446.346 cv
231.846 446.505 232.887 446.42 233.855 445.97 cv
234.825 445.523 235.657 444.689 236.174 443.656 cv
236.692 442.625 236.919 441.389 236.717 440.149 cv
236.454 438.932 235.857 437.718 234.863 436.847 cv
233.883 435.984 232.666 435.354 231.323 435.088 cv
229.974 434.864 228.521 435.058 227.252 435.66 cv
225.958 436.241 224.919 437.271 224.123 438.423 cv
223.34 439.589 222.787 440.947 222.676 442.379 cv
222.546 443.797 222.762 445.224 223.233 446.541 cv
223.718 447.856 224.476 449.037 225.373 450.063 cv
226.734 451.648 228.728 452.878 230.914 453.627 cv
226.999 453.627 li
226.927 453.609 226.855 453.598 226.782 453.579 cv
225.435 453.227 224.063 452.558 222.953 451.517 cv
221.866 450.442 221.05 448.999 219.991 447.563 cv
218.969 446.088 217.349 444.874 215.516 444.359 cv
214.591 444.117 213.611 444.05 212.654 444.204 cv
211.682 444.345 210.797 444.788 210.035 445.346 cv
208.582 446.349 207.416 448.464 207.908 450.583 cv
208.155 451.599 208.705 452.526 209.467 453.206 cv
209.638 453.363 209.825 453.501 210.019 453.627 cv
198.582 453.627 li
197.838 452.664 196.752 450.867 197.844 449.641 cv
195.033 450.32 196.31 452.615 196.723 453.483 cv
194.894 452.338 191.723 454.297 191.723 454.297 cv
191.726 454.298 194.894 456.263 196.723 455.119 cv
196.31 455.987 195.033 458.282 197.844 458.961 cv
196.813 457.519 197.798 455.875 198.528 454.974 cv
245.953 454.974 li
246.214 455.584 246.567 456.136 246.977 456.603 cv
247.194 456.898 247.555 457.12 247.835 457.364 cv
248.154 457.568 248.523 457.704 248.86 457.83 cv
249.824 458.065 250.69 457.865 251.342 457.53 cv
251.393 457.581 251.442 457.63 251.493 457.681 cv
251.815 457.918 252.158 458.141 252.504 458.378 cv
252.843 458.633 253.22 458.82 253.608 459 cv
253.997 459.176 254.38 459.406 254.794 459.543 cv
255.638 459.863 256.522 460.152 257.435 460.407 cv
257.301 460.63 257.179 460.859 257.077 461.094 cv
256.702 461.963 256.605 462.928 256.57 463.761 cv
256.463 465.574 256.971 467.463 258.164 468.864 cv
259.352 470.289 261.243 470.96 262.953 470.698 cv
264.732 470.473 266.012 469.024 266.419 467.605 cv
266.87 466.146 266.416 464.607 265.512 463.752 cv
264.644 462.848 263.237 462.715 262.518 463.308 cv
261.766 463.818 261.505 464.564 261.531 465.034 cv
261.542 465.515 261.746 465.728 261.727 465.725 cv
261.775 465.714 261.618 465.475 261.667 465.032 cv
261.695 464.601 262.008 463.955 262.705 463.57 cv
263.376 463.125 264.465 463.349 265.159 464.152 cv
265.875 464.952 266.129 466.24 265.685 467.442 cv
265.239 468.629 264.134 469.669 262.732 469.773 cv
261.354 469.884 259.83 469.258 258.94 468.067 cv
258.023 466.875 257.652 465.268 257.777 463.701 cv
257.799 462.547 258.111 461.531 258.706 460.735 cv
260.97 461.268 263.381 461.573 265.798 461.553 cv
268.691 461.563 271.552 461.037 274.063 460.161 cv
274.154 460.161 274.265 460.152 274.387 460.141 cv
277 461.053 279.971 461.557 282.95 461.537 cv
285.303 461.537 287.639 461.227 289.832 460.705 cv
290.46 461.534 290.739 462.627 290.764 463.839 cv
290.871 465.387 290.452 466.991 289.514 468.141 cv
288.608 469.301 287.073 469.889 285.722 469.73 cv
284.337 469.614 283.287 468.529 282.876 467.365 cv
282.451 466.178 282.746 464.926 283.451 464.164 cv
284.138 463.389 285.182 463.208 285.813 463.642 cv
286.477 464.019 286.768 464.638 286.79 465.041 cv
286.833 465.455 286.688 465.676 286.734 465.688 cv
286.716 465.69 286.914 465.491 286.925 465.03 cv
286.952 464.581 286.7 463.854 285.961 463.355 cv
285.251 462.78 283.89 462.931 283.03 463.826 cv
282.137 464.685 281.723 466.218 282.179 467.669 cv
282.606 469.088 283.923 470.482 285.697 470.691 cv
287.409 470.905 289.289 470.203 290.453 468.753 cv
291.618 467.326 292.079 465.416 291.956 463.619 cv
291.918 462.774 291.803 461.804 291.396 460.942 cv
291.306 460.747 291.199 460.56 291.084 460.377 cv
291.983 460.124 292.852 459.838 293.681 459.521 cv
294.936 458.976 296.14 458.362 297.08 457.541 cv
297.752 457.9 298.656 458.121 299.667 457.873 cv
300.019 457.75 300.398 457.6 300.726 457.387 cv
301.012 457.132 301.39 456.902 301.6 456.593 cv
302.002 456.123 302.37 455.582 302.621 454.974 cv
350.044 454.974 li
350.815 455.875 351.856 457.519 350.766 458.961 cv
353.736 458.282 352.387 455.987 351.951 455.119 cv
353.883 456.263 357.23 454.298 357.233 454.297 cv
357.233 454.297 353.883 452.338 351.951 453.483 cv
cp
f
249.807 436.326 mo
249.277 436.748 249.191 437.621 249.628 438.138 cv
250.042 438.627 250.742 438.73 251.372 438.846 cv
253.748 439.284 255.999 440.384 257.806 441.989 cv
257.236 440.529 256.471 439.122 255.369 438.008 cv
254.267 436.894 252.801 436.091 251.238 435.993 cv
250.737 435.961 250.199 436.014 249.807 436.326 cv
cp
f
258.905 436.074 mo
258.748 434.515 258.113 432.969 256.959 431.909 cv
256.59 431.57 256.138 431.273 255.637 431.269 cv
254.96 431.263 254.344 431.889 254.359 432.565 cv
254.373 433.206 254.852 433.726 255.27 434.212 cv
256.842 436.047 257.901 438.318 258.296 440.701 cv
258.771 439.208 259.061 437.633 258.905 436.074 cv
cp
f
313.066 255.765 mo
303.478 255.799 288.83 255.715 288.604 256.53 cv
288.377 257.345 303.762 257.16 313.292 257.194 cv
333.6 257.269 357.233 256.692 357.233 256.53 cv
357.233 256.368 333.378 255.693 313.066 255.765 cv
cp
f
260.352 256.431 mo
260.579 255.616 245.195 255.801 235.664 255.766 cv
215.356 255.692 191.723 256.269 191.723 256.431 cv
191.723 256.593 215.578 257.268 235.89 257.196 cv
245.478 257.162 260.126 257.246 260.352 256.431 cv
cp
f
280.754 260.097 mo
280.518 260.403 279.34 261.966 278.984 262.416 cv
278.624 259.002 276.152 258.795 275.376 258.946 cv
275.039 259.011 274.75 259.1 274.504 259.208 cv
274.256 259.105 273.966 259.02 273.627 258.96 cv
272.849 258.823 270.381 259.07 270.077 262.489 cv
269.714 262.046 268.51 260.502 268.269 260.2 cv
267.61 259.281 267.531 258.669 267.521 257.923 cv
267.517 257.627 267.662 257.319 267.864 257.088 cv
267.974 257.148 268.081 257.194 268.17 257.213 cv
268.517 257.29 268.848 257.247 269.16 257.164 cv
269.165 257.177 269.178 257.189 269.182 257.202 cv
269.266 257.464 268.991 257.709 268.751 257.876 cv
268.182 258.274 268.756 259.306 269.634 258.937 cv
270.749 258.468 270.677 257.264 270.406 256.771 cv
270.358 256.683 270.291 256.594 270.215 256.506 cv
270.279 256.423 270.359 256.344 270.395 256.257 cv
270.613 255.739 270.71 254.555 269.587 254.104 cv
268.703 253.75 268.147 254.792 268.723 255.18 cv
268.962 255.341 269.235 255.578 269.164 255.838 cv
268.853 255.752 268.512 255.738 268.165 255.852 cv
268.078 255.88 267.974 255.932 267.866 255.997 cv
267.651 255.768 267.492 255.457 267.492 255.154 cv
267.49 254.407 267.558 253.794 268.202 252.864 cv
268.438 252.558 269.616 250.995 269.972 250.545 cv
270.332 253.959 272.804 254.166 273.579 254.015 cv
273.917 253.95 274.206 253.86 274.452 253.752 cv
274.7 253.856 274.99 253.941 275.329 254.001 cv
276.107 254.138 278.575 253.891 278.879 250.472 cv
279.242 250.915 280.446 252.459 280.687 252.761 cv
281.346 253.68 281.425 254.292 281.435 255.038 cv
281.439 255.334 281.294 255.642 281.092 255.873 cv
280.982 255.813 280.875 255.767 280.786 255.747 cv
280.439 255.671 280.108 255.714 279.796 255.797 cv
279.79 255.784 279.778 255.772 279.774 255.759 cv
279.69 255.497 279.965 255.252 280.205 255.085 cv
280.774 254.687 280.2 253.655 279.322 254.024 cv
278.207 254.493 278.279 255.697 278.55 256.19 cv
278.598 256.278 278.665 256.367 278.741 256.455 cv
278.677 256.538 278.597 256.617 278.561 256.704 cv
278.343 257.222 278.246 258.406 279.369 258.857 cv
280.253 259.211 280.809 258.169 280.233 257.781 cv
279.994 257.619 279.721 257.382 279.792 257.123 cv
280.103 257.208 280.444 257.223 280.791 257.109 cv
280.878 257.081 280.982 257.029 281.09 256.964 cv
281.305 257.193 281.464 257.504 281.465 257.807 cv
281.466 258.554 281.398 259.167 280.754 260.097 cv
cp
274.513 260.282 mo
275.166 260.93 274.769 261.643 274.63 261.92 cv
274.601 261.978 274.566 262.03 274.528 262.079 cv
274.489 262.03 274.453 261.979 274.423 261.922 cv
274.279 261.647 273.87 260.94 274.513 260.282 cv
cp
278.232 263.072 mo
277.937 263.774 277.045 265.561 274.557 265.581 cv
272.067 265.602 271.147 263.83 270.84 263.133 cv
270.434 260.506 272.536 259.374 273.689 259.77 cv
272.889 260.64 273.197 261.879 273.372 262.471 cv
273.38 262.498 273.39 262.525 273.399 262.553 cv
273.13 262.657 272.871 262.853 272.889 263.084 cv
272.945 263.834 273.737 263.931 274.063 263.905 cv
274.234 263.891 274.394 263.853 274.542 263.796 cv
274.691 263.85 274.851 263.886 275.022 263.897 cv
275.349 263.918 276.139 263.807 276.183 263.057 cv
276.196 262.826 275.934 262.634 275.664 262.534 cv
275.672 262.507 275.682 262.479 275.689 262.452 cv
275.855 261.857 276.142 260.613 275.328 259.757 cv
276.474 259.342 278.594 260.438 278.232 263.072 cv
cp
274.443 252.679 mo
273.79 252.031 274.188 251.318 274.326 251.041 cv
274.355 250.983 274.39 250.931 274.428 250.882 cv
274.467 250.931 274.504 250.982 274.533 251.039 cv
274.677 251.314 275.086 252.021 274.443 252.679 cv
cp
270.724 249.889 mo
271.019 249.187 271.911 247.4 274.399 247.38 cv
276.889 247.359 277.81 249.131 278.116 249.828 cv
278.522 252.455 276.421 253.587 275.267 253.191 cv
276.067 252.321 275.759 251.082 275.584 250.49 cv
275.576 250.463 275.566 250.435 275.557 250.408 cv
275.826 250.304 276.085 250.108 276.067 249.877 cv
276.011 249.128 275.219 249.029 274.893 249.056 cv
274.722 249.07 274.562 249.108 274.414 249.165 cv
274.265 249.111 274.105 249.075 273.934 249.064 cv
273.607 249.043 272.818 249.154 272.773 249.904 cv
272.76 250.135 273.022 250.327 273.292 250.427 cv
273.284 250.454 273.274 250.482 273.267 250.51 cv
273.102 251.104 272.814 252.348 273.628 253.204 cv
272.482 253.619 270.362 252.523 270.724 249.889 cv
cp
285.166 255.929 mo
286.81 256.147 288.295 255.496 288.983 253.987 cv
289.783 252.234 288.953 250.564 288.462 249.925 cv
287.805 249.071 286.332 248.559 285.474 248.785 cv
283.659 249.265 282.548 252.089 284.682 253.031 cv
285.362 253.331 286.333 253.171 286.762 252.707 cv
287.474 251.939 286.966 251.419 286.724 251.266 cv
285.789 250.67 285.32 252.11 284.817 251.142 cv
284.56 250.649 285.161 249.959 285.767 249.78 cv
286.363 249.605 287.11 249.808 287.67 250.296 cv
288.568 251.08 288.875 252.491 288.384 253.577 cv
287.894 254.663 286.632 255.365 285.45 255.209 cv
284.731 255.114 283.601 254.752 282.886 254.089 cv
281.805 253.084 280.447 251.146 279.356 249.666 cv
279.502 249.74 279.657 249.806 279.822 249.859 cv
280.116 249.951 280.437 250.01 280.769 249.997 cv
280.851 249.995 280.935 249.982 281.017 249.974 cv
281.1 249.966 281.183 249.948 281.267 249.928 cv
281.435 249.885 281.616 249.815 281.776 249.7 cv
281.814 249.673 281.852 249.646 281.89 249.618 cv
281.924 249.586 281.959 249.553 281.994 249.52 cv
282.068 249.456 282.123 249.376 282.183 249.298 cv
282.216 249.259 282.235 249.215 282.261 249.172 cv
282.285 249.129 282.313 249.087 282.332 249.04 cv
282.369 248.948 282.411 248.856 282.431 248.757 cv
282.487 248.564 282.492 248.356 282.473 248.157 cv
282.443 247.963 282.39 247.778 282.305 247.626 cv
282.144 247.316 281.91 247.119 281.719 247.038 cv
281.625 246.995 281.538 246.985 281.471 246.995 cv
281.403 247.006 281.355 247.04 281.323 247.097 cv
281.292 247.155 281.285 247.218 281.293 247.282 cv
281.297 247.314 281.305 247.346 281.316 247.379 cv
281.326 247.413 281.338 247.449 281.353 247.484 cv
281.412 247.626 281.498 247.789 281.549 247.972 cv
281.579 248.061 281.589 248.156 281.597 248.249 cv
281.595 248.339 281.592 248.431 281.563 248.521 cv
281.542 248.614 281.494 248.694 281.451 248.769 cv
281.396 248.835 281.344 248.897 281.283 248.93 cv
281.227 248.974 281.146 249.003 281.052 249.03 cv
280.959 249.06 280.846 249.069 280.738 249.089 cv
280.518 249.106 280.288 249.093 280.058 249.053 cv
279.827 249.015 279.602 248.936 279.387 248.853 cv
279.172 248.769 278.971 248.656 278.781 248.551 cv
278.558 248.42 278.357 248.286 278.183 248.167 cv
277.95 247.9 277.637 247.548 277.637 247.548 cv
277.637 247.548 277.234 247.178 277.003 247.018 cv
276.209 246.469 275.302 246.209 274.39 246.231 cv
273.477 246.224 272.575 246.499 271.79 247.061 cv
271.629 247.177 271.07 247.764 270.681 248.193 cv
270.497 248.324 270.281 248.475 270.037 248.624 cv
269.85 248.732 269.651 248.848 269.437 248.935 cv
269.224 249.022 269 249.104 268.77 249.146 cv
268.541 249.19 268.31 249.207 268.09 249.193 cv
267.982 249.175 267.869 249.168 267.775 249.14 cv
267.68 249.114 267.6 249.087 267.543 249.044 cv
267.481 249.011 267.427 248.95 267.373 248.885 cv
267.327 248.812 267.278 248.732 267.256 248.64 cv
267.225 248.55 267.221 248.458 267.217 248.368 cv
267.224 248.275 267.232 248.18 267.261 248.09 cv
267.309 247.907 267.393 247.742 267.449 247.599 cv
267.463 247.564 267.474 247.527 267.484 247.493 cv
267.495 247.461 267.502 247.428 267.505 247.396 cv
267.512 247.332 267.504 247.269 267.472 247.212 cv
267.44 247.155 267.391 247.121 267.323 247.112 cv
267.256 247.102 267.168 247.115 267.075 247.16 cv
266.886 247.243 266.655 247.444 266.499 247.757 cv
266.416 247.91 266.367 248.096 266.339 248.29 cv
266.324 248.489 266.333 248.697 266.392 248.89 cv
266.414 248.988 266.457 249.08 266.496 249.171 cv
266.515 249.217 266.544 249.259 266.568 249.302 cv
266.595 249.344 266.616 249.389 266.648 249.427 cv
266.711 249.504 266.767 249.583 266.841 249.646 cv
266.877 249.678 266.912 249.71 266.947 249.742 cv
266.986 249.769 267.024 249.796 267.062 249.822 cv
267.224 249.934 267.407 250.001 267.575 250.041 cv
267.659 250.06 267.743 250.077 267.826 250.083 cv
267.908 250.09 267.992 250.101 268.074 250.103 cv
268.406 250.11 268.727 250.045 269.019 249.948 cv
269.183 249.893 269.337 249.824 269.481 249.747 cv
268.415 251.245 267.09 253.206 266.025 254.228 cv
265.321 254.903 264.198 255.284 263.48 255.391 cv
262.301 255.566 261.028 254.885 260.519 253.807 cv
260.01 252.729 260.294 251.314 261.179 250.516 cv
261.731 250.018 262.474 249.803 263.074 249.968 cv
263.682 250.136 264.295 250.816 264.046 251.314 cv
263.559 252.29 263.066 250.858 262.141 251.469 cv
261.902 251.627 261.402 252.155 262.126 252.911 cv
262.564 253.368 263.537 253.512 264.212 253.2 cv
266.331 252.223 265.172 249.418 263.35 248.968 cv
262.488 248.756 260.962 249.25 260.381 250.158 cv
258.998 252.318 259.729 253.812 259.927 254.227 cv
260.64 255.724 262.136 256.352 263.776 256.106 cv
264.956 255.929 266.529 254.906 267.207 253.795 cv
266.678 255.14 266.896 256.022 267.282 256.559 cv
266.912 257.1 266.714 257.964 267.259 259.286 cv
266.562 258.187 264.973 257.19 263.79 257.032 cv
262.146 256.813 260.661 257.465 259.973 258.974 cv
259.173 260.727 260.003 262.397 260.494 263.035 cv
261.151 263.89 262.624 264.402 263.482 264.176 cv
265.297 263.696 266.409 260.872 264.274 259.93 cv
263.594 259.63 262.623 259.79 262.193 260.254 cv
261.482 261.022 261.99 261.541 262.232 261.695 cv
263.167 262.291 263.636 260.851 264.139 261.819 cv
264.396 262.312 263.795 263.002 263.189 263.18 cv
262.593 263.356 261.846 263.153 261.286 262.664 cv
260.388 261.881 260.081 260.47 260.572 259.384 cv
261.063 258.298 262.324 257.596 263.505 257.752 cv
264.225 257.847 265.355 258.209 266.07 258.872 cv
267.152 259.877 268.509 261.815 269.6 263.295 cv
269.454 263.221 269.299 263.155 269.134 263.102 cv
268.841 263.01 268.519 262.951 268.187 262.964 cv
268.105 262.966 268.021 262.979 267.939 262.987 cv
267.856 262.995 267.773 263.013 267.689 263.033 cv
267.521 263.076 267.34 263.146 267.18 263.261 cv
267.142 263.288 267.104 263.315 267.066 263.343 cv
267.031 263.375 266.997 263.407 266.962 263.441 cv
266.889 263.505 266.834 263.585 266.772 263.663 cv
266.74 263.702 266.721 263.746 266.695 263.789 cv
266.671 263.832 266.643 263.874 266.625 263.921 cv
266.587 264.013 266.545 264.105 266.525 264.204 cv
266.469 264.397 266.464 264.605 266.483 264.804 cv
266.513 264.998 266.566 265.183 266.651 265.335 cv
266.812 265.645 267.046 265.842 267.237 265.922 cv
267.331 265.966 267.418 265.977 267.486 265.966 cv
267.553 265.955 267.601 265.921 267.633 265.864 cv
267.664 265.806 267.671 265.743 267.663 265.679 cv
267.659 265.647 267.651 265.615 267.64 265.582 cv
267.629 265.548 267.618 265.512 267.603 265.477 cv
267.544 265.335 267.458 265.171 267.407 264.989 cv
267.377 264.9 267.368 264.805 267.359 264.712 cv
267.361 264.622 267.364 264.529 267.393 264.439 cv
267.414 264.347 267.462 264.267 267.505 264.192 cv
267.56 264.126 267.612 264.064 267.673 264.031 cv
267.73 263.986 267.81 263.958 267.904 263.93 cv
267.997 263.901 268.11 263.892 268.218 263.872 cv
268.438 263.855 268.668 263.868 268.898 263.908 cv
269.129 263.946 269.354 264.025 269.569 264.108 cv
269.784 264.192 269.985 264.305 270.174 264.41 cv
270.398 264.541 270.599 264.675 270.773 264.794 cv
271.006 265.061 271.319 265.413 271.319 265.413 cv
271.319 265.413 271.722 265.783 271.953 265.943 cv
272.747 266.492 273.654 266.752 274.566 266.73 cv
275.479 266.737 276.381 266.462 277.166 265.899 cv
277.327 265.784 277.886 265.197 278.275 264.768 cv
278.459 264.637 278.675 264.486 278.919 264.337 cv
279.106 264.229 279.305 264.113 279.519 264.026 cv
279.732 263.939 279.956 263.857 280.186 263.815 cv
280.415 263.771 280.646 263.754 280.866 263.768 cv
280.974 263.786 281.087 263.793 281.181 263.821 cv
281.276 263.847 281.356 263.874 281.413 263.917 cv
281.475 263.949 281.529 264.011 281.584 264.076 cv
281.628 264.149 281.678 264.229 281.7 264.321 cv
281.731 264.411 281.735 264.503 281.739 264.593 cv
281.732 264.686 281.724 264.781 281.695 264.871 cv
281.647 265.054 281.563 265.219 281.508 265.362 cv
281.493 265.397 281.482 265.434 281.472 265.467 cv
281.462 265.5 281.454 265.533 281.451 265.565 cv
281.444 265.629 281.452 265.692 281.484 265.749 cv
281.516 265.806 281.565 265.839 281.633 265.849 cv
281.7 265.858 281.788 265.846 281.881 265.801 cv
282.07 265.718 282.301 265.517 282.457 265.204 cv
282.54 265.051 282.589 264.865 282.617 264.671 cv
282.632 264.472 282.623 264.264 282.564 264.071 cv
282.542 263.972 282.499 263.881 282.46 263.789 cv
282.441 263.744 282.412 263.702 282.388 263.659 cv
282.361 263.617 282.34 263.572 282.308 263.535 cv
282.246 263.457 282.189 263.378 282.115 263.315 cv
282.079 263.283 282.044 263.251 282.009 263.219 cv
281.97 263.192 281.932 263.165 281.894 263.139 cv
281.732 263.027 281.55 262.96 281.381 262.92 cv
281.297 262.901 281.213 262.884 281.13 262.878 cv
281.047 262.871 280.964 262.86 280.882 262.858 cv
280.55 262.852 280.229 262.916 279.937 263.013 cv
279.773 263.068 279.619 263.137 279.475 263.214 cv
280.541 261.716 281.866 259.755 282.931 258.733 cv
283.635 258.057 284.758 257.677 285.476 257.57 cv
286.656 257.395 287.928 258.076 288.437 259.154 cv
288.946 260.231 288.662 261.647 287.777 262.445 cv
287.225 262.943 286.482 263.158 285.882 262.993 cv
285.274 262.825 284.661 262.145 284.91 261.647 cv
285.397 260.671 285.89 262.103 286.815 261.492 cv
287.054 261.334 287.554 260.806 286.83 260.05 cv
286.392 259.593 285.419 259.449 284.744 259.76 cv
282.626 260.738 283.784 263.543 285.606 263.992 cv
286.468 264.205 287.994 263.711 288.575 262.803 cv
289.958 260.643 289.227 259.149 289.029 258.733 cv
288.316 257.237 286.82 256.609 285.18 256.855 cv
284 257.032 282.427 258.055 281.749 259.166 cv
282.277 257.821 282.06 256.939 281.674 256.402 cv
282.044 255.861 282.242 254.997 281.697 253.675 cv
282.394 254.774 283.983 255.771 285.166 255.929 cv
cp
f
316.617 197.125 mo
316.807 196.987 317.073 196.793 317.42 196.54 cv
317.732 196.318 318.121 196.048 318.56 195.759 cv
324.737 195.759 330.146 195.759 334.422 195.759 cv
334.972 196.194 335.521 196.654 336.075 197.125 cv
330.694 197.125 323.746 197.125 316.617 197.125 cv
cp
274.56 200.622 mo
274.535 200.653 274.504 200.68 274.478 200.71 cv
274.452 200.68 274.421 200.653 274.396 200.622 cv
273.88 200.007 271.749 197.125 267.148 197.125 cv
264.81 197.125 248.208 197.125 232.437 197.125 cv
232.425 197.115 232.421 197.111 232.409 197.1 cv
232.229 196.947 231.963 196.721 231.618 196.429 cv
231.378 196.233 231.081 196.002 230.757 195.759 cv
255.807 195.759 293.149 195.759 318.199 195.759 cv
317.875 196.002 317.578 196.233 317.337 196.429 cv
316.993 196.721 316.727 196.947 316.547 197.1 cv
316.534 197.111 316.531 197.115 316.519 197.125 cv
300.748 197.125 284.146 197.125 281.808 197.125 cv
277.207 197.125 275.076 200.007 274.56 200.622 cv
cp
214.534 195.759 mo
218.81 195.759 224.218 195.759 230.396 195.759 cv
230.835 196.048 231.224 196.318 231.536 196.54 cv
231.883 196.793 232.149 196.987 232.339 197.125 cv
225.21 197.125 218.262 197.125 212.881 197.125 cv
213.435 196.654 213.984 196.194 214.534 195.759 cv
cp
216.219 194.536 mo
218.346 193.156 220.742 192.678 222.882 192.871 cv
225.042 193.013 226.847 193.832 228.294 194.523 cv
228.675 194.721 229.027 194.918 229.358 195.112 cv
215.417 195.112 li
215.683 194.919 215.946 194.711 216.219 194.536 cv
cp
320.662 194.523 mo
322.109 193.832 323.914 193.013 326.074 192.871 cv
328.214 192.678 330.61 193.156 332.737 194.536 cv
333.01 194.711 333.273 194.919 333.539 195.112 cv
319.598 195.112 li
319.929 194.918 320.281 194.721 320.662 194.523 cv
cp
339.105 199.594 mo
341.449 201.282 344.334 202.444 347.319 202.647 cv
348.806 202.732 350.319 202.735 351.778 202.302 cv
353.232 201.915 354.64 201.178 355.654 200.004 cv
356.661 198.843 357.228 197.365 357.233 195.882 cv
357.253 194.407 356.659 192.908 355.543 191.975 cv
354.534 191.122 353.291 190.687 352.061 190.671 cv
350.828 190.66 349.596 191.18 348.787 192.055 cv
347.986 192.919 347.542 194.076 347.689 195.211 cv
347.755 196.375 348.469 197.313 349.269 197.867 cv
350.095 198.423 351.167 198.546 351.962 198.266 cv
352.753 198.004 353.261 197.493 353.545 197.019 cv
354.089 195.978 353.67 195.299 353.208 195.345 cv
352.691 195.362 352.425 195.635 352.057 195.883 cv
351.857 196.005 351.622 196.156 351.343 196.226 cv
351.081 196.292 350.779 196.288 350.391 196.099 cv
350.039 195.886 349.617 195.502 349.543 194.963 cv
349.368 194.431 349.543 193.686 349.974 193.097 cv
350.407 192.513 351.138 192.061 352.051 191.999 cv
352.951 191.954 353.952 192.251 354.699 192.886 cv
356.374 194.216 356.402 197.295 354.745 199.159 cv
353.121 201.074 350.167 201.713 347.441 201.501 cv
344.663 201.36 341.974 200.353 339.708 198.809 cv
339.421 198.609 339.147 198.39 338.867 198.179 cv
342.097 198.179 344.163 198.179 344.435 198.179 cv
346.07 198.179 346.285 197.125 346.285 197.125 cv
346.285 197.125 342.821 197.125 337.502 197.125 cv
336.93 196.664 336.357 196.21 335.786 195.759 cv
341.295 195.759 344.608 195.759 344.734 195.759 cv
346.473 195.759 346.764 195.112 346.764 195.112 cv
334.957 195.112 li
334.374 194.676 333.783 194.259 333.171 193.887 cv
330.891 192.478 328.255 192.032 326.034 192.318 cv
323.778 192.546 321.953 193.462 320.512 194.227 cv
319.987 194.529 319.531 194.825 319.108 195.112 cv
229.848 195.112 li
229.425 194.825 228.969 194.529 228.444 194.227 cv
227.003 193.462 225.178 192.546 222.922 192.318 cv
220.701 192.032 218.065 192.478 215.785 193.887 cv
215.173 194.259 214.582 194.676 213.999 195.112 cv
202.192 195.112 li
202.192 195.112 202.483 195.759 204.222 195.759 cv
204.348 195.759 207.661 195.759 213.17 195.759 cv
212.599 196.21 212.026 196.664 211.454 197.125 cv
206.135 197.125 202.671 197.125 202.671 197.125 cv
202.671 197.125 202.886 198.179 204.521 198.179 cv
204.793 198.179 206.859 198.179 210.089 198.179 cv
209.809 198.39 209.535 198.609 209.248 198.809 cv
206.982 200.353 204.293 201.36 201.515 201.501 cv
198.789 201.713 195.835 201.074 194.211 199.159 cv
192.554 197.295 192.582 194.216 194.257 192.886 cv
195.004 192.251 196.005 191.954 196.905 191.999 cv
197.818 192.061 198.549 192.513 198.982 193.097 cv
199.413 193.686 199.588 194.431 199.413 194.963 cv
199.339 195.502 198.917 195.886 198.565 196.099 cv
198.177 196.288 197.875 196.292 197.613 196.226 cv
197.334 196.156 197.099 196.005 196.899 195.883 cv
196.531 195.635 196.265 195.362 195.748 195.345 cv
195.286 195.299 194.867 195.978 195.411 197.019 cv
195.695 197.493 196.203 198.004 196.994 198.266 cv
197.789 198.546 198.861 198.423 199.687 197.867 cv
200.487 197.313 201.2 196.375 201.267 195.211 cv
201.414 194.076 200.97 192.919 200.169 192.055 cv
199.36 191.18 198.128 190.66 196.895 190.671 cv
195.665 190.687 194.422 191.122 193.413 191.975 cv
192.297 192.908 191.703 194.407 191.723 195.882 cv
191.728 197.365 192.295 198.843 193.302 200.004 cv
194.316 201.178 195.724 201.915 197.178 202.302 cv
198.637 202.735 200.15 202.732 201.637 202.647 cv
204.622 202.444 207.507 201.282 209.851 199.594 cv
210.471 199.135 211.06 198.658 211.635 198.179 cv
227.847 198.179 266.217 198.179 268.761 198.179 cv
270.695 198.179 272.687 200.009 273.877 201.276 cv
273.499 201.568 273.082 201.779 272.628 201.792 cv
271.878 201.813 272.179 201.254 271.131 200.289 cv
270.083 199.324 269.151 200.436 267.574 200.14 cv
266.637 199.964 265.176 200.695 265.1 202.889 cv
265.899 202.029 267.109 201.779 268.211 202.52 cv
269.313 203.262 270.661 203.396 271.938 203.258 cv
272.713 203.174 273.525 202.971 274.093 202.369 cv
274.176 202.281 274.31 202.128 274.478 201.937 cv
274.646 202.128 274.78 202.281 274.863 202.369 cv
275.431 202.971 276.243 203.174 277.018 203.258 cv
278.295 203.396 279.643 203.262 280.745 202.52 cv
281.848 201.779 283.057 202.029 283.856 202.889 cv
283.779 200.695 282.319 199.964 281.382 200.14 cv
279.805 200.436 278.873 199.324 277.825 200.289 cv
276.777 201.254 277.078 201.813 276.328 201.792 cv
275.874 201.779 275.457 201.568 275.079 201.276 cv
276.269 200.009 278.261 198.179 280.195 198.179 cv
282.739 198.179 321.109 198.179 337.321 198.179 cv
337.896 198.658 338.485 199.135 339.105 199.594 cv
cp
f
328.443 126.383 mo
283.497 126.383 li
283.497 128.213 li
328.443 128.213 li
328.443 126.383 li
cp
f
331.224 128.506 mo
331.224 126.09 li
331.224 125.464 330.716 124.956 330.089 124.956 cv
329.463 124.956 328.955 125.464 328.955 126.09 cv
328.955 128.506 li
328.955 129.133 329.463 129.641 330.089 129.641 cv
330.716 129.641 331.224 129.133 331.224 128.506 cv
cp
f
334.912 128.808 mo
334.912 125.789 li
334.912 125.005 334.277 124.37 333.493 124.37 cv
332.71 124.37 332.075 125.005 332.075 125.789 cv
332.075 128.808 li
332.075 129.591 332.71 130.226 333.493 130.226 cv
334.277 130.226 334.912 129.591 334.912 128.808 cv
cp
f
339.255 129.223 mo
339.255 125.373 li
339.255 124.375 338.445 123.565 337.446 123.565 cv
336.448 123.565 335.638 124.375 335.638 125.373 cv
335.638 129.223 li
335.638 130.222 336.448 131.032 337.446 131.032 cv
338.445 131.032 339.255 130.222 339.255 129.223 cv
cp
f
346.458 118.724 mo
345.809 119.096 345.629 120.192 345.438 120.841 cv
345.187 121.694 344.968 122.575 344.638 123.401 cv
344.664 123.336 344.441 123.953 344.638 123.401 cv
343.883 125.523 341.86 126.935 339.605 126.852 cv
343.009 127.755 347.494 126.272 348.25 122.454 cv
348.423 121.581 348.378 120.635 348.028 119.809 cv
347.799 119.27 347.163 118.32 346.458 118.724 cv
cp
f
348.961 123.252 mo
348.534 124.565 347.768 125.62 346.46 126.145 cv
348.38 126.131 350.972 125.884 352.051 124.027 cv
352.522 123.217 352.814 121.483 351.614 121.101 cv
350.389 120.711 349.269 122.2 348.981 123.204 cv
348.847 123.626 348.912 123.411 348.961 123.252 cv
cp
f
343.886 129.795 mo
344.91 131.144 345.153 132.975 345.678 134.548 cv
345.863 135.102 346.218 136.19 347.013 135.931 cv
347.708 135.704 348.068 134.837 348.224 134.194 cv
348.607 132.607 348.089 130.807 346.965 129.632 cv
345.11 127.668 342.173 127.07 339.605 127.75 cv
341.297 127.689 342.867 128.445 343.886 129.795 cv
cp
f
348.613 130.467 mo
349.111 131.476 349.247 132.532 350.266 133.198 cv
351.266 133.827 352.351 133.479 352.459 132.226 cv
352.547 131.2 351.973 130.187 351.152 129.602 cv
351.12 129.581 351.09 129.56 351.073 129.548 cv
349.679 128.663 348.082 128.47 346.46 128.457 cv
347.436 128.849 348.147 129.523 348.613 130.467 cv
cp
f
345.975 127.298 mo
350.777 127.48 357.233 131.666 357.233 127.298 cv
357.233 122.931 350.857 127.109 345.975 127.298 cv
cp
f
265.459 126.383 mo
220.513 126.383 li
220.513 128.213 li
265.459 128.213 li
265.459 126.383 li
cp
f
220.001 128.506 mo
220.001 126.09 li
220.001 125.464 219.493 124.956 218.867 124.956 cv
218.24 124.956 217.732 125.464 217.732 126.09 cv
217.732 128.506 li
217.732 129.133 218.24 129.641 218.867 129.641 cv
219.493 129.641 220.001 129.133 220.001 128.506 cv
cp
f
216.881 128.808 mo
216.881 125.789 li
216.881 125.005 216.246 124.37 215.463 124.37 cv
214.679 124.37 214.044 125.005 214.044 125.789 cv
214.044 128.808 li
214.044 129.591 214.679 130.226 215.463 130.226 cv
216.246 130.226 216.881 129.591 216.881 128.808 cv
cp
f
213.318 129.223 mo
213.318 125.373 li
213.318 124.375 212.508 123.565 211.51 123.565 cv
210.511 123.565 209.701 124.375 209.701 125.373 cv
209.701 129.223 li
209.701 130.222 210.511 131.032 211.51 131.032 cv
212.508 131.032 213.318 130.222 213.318 129.223 cv
cp
f
202.498 135.872 mo
203.147 135.501 203.327 134.405 203.518 133.755 cv
203.768 132.903 203.988 132.022 204.318 131.196 cv
204.292 131.261 204.515 130.644 204.318 131.196 cv
205.073 129.074 207.096 127.662 209.35 127.745 cv
205.947 126.841 201.462 128.324 200.706 132.143 cv
200.533 133.016 200.578 133.961 200.928 134.787 cv
201.157 135.327 201.793 136.277 202.498 135.872 cv
cp
f
199.995 131.345 mo
200.422 130.032 201.188 128.977 202.496 128.452 cv
200.576 128.466 197.984 128.712 196.905 130.569 cv
196.433 131.38 196.142 133.113 197.342 133.496 cv
198.567 133.886 199.687 132.397 199.975 131.392 cv
200.109 130.971 200.044 131.186 199.995 131.345 cv
cp
f
205.07 124.801 mo
204.046 123.452 203.803 121.622 203.278 120.049 cv
203.093 119.495 202.738 118.407 201.943 118.666 cv
201.248 118.892 200.887 119.759 200.732 120.403 cv
200.349 121.99 200.867 123.79 201.991 124.964 cv
203.846 126.928 206.783 127.527 209.351 126.846 cv
207.659 126.908 206.089 126.151 205.07 124.801 cv
cp
f
198.69 121.398 mo
197.69 120.769 196.605 121.118 196.497 122.371 cv
196.409 123.397 196.983 124.41 197.804 124.995 cv
197.835 125.016 197.865 125.036 197.882 125.048 cv
199.276 125.934 200.874 126.126 202.496 126.14 cv
201.52 125.747 200.808 125.074 200.343 124.13 cv
199.845 123.121 199.709 122.064 198.69 121.398 cv
cp
f
191.723 127.298 mo
191.723 131.666 198.099 127.488 202.981 127.298 cv
198.179 127.116 191.723 122.931 191.723 127.298 cv
cp
f
277.264 127.298 mo
277.264 125.707 276.03 124.416 274.508 124.416 cv
272.985 124.416 271.751 125.707 271.751 127.298 cv
271.751 128.89 272.985 130.18 274.508 130.18 cv
276.03 130.18 277.264 128.89 277.264 127.298 cv
cp
f
282.333 127.298 mo
282.333 126.082 281.39 125.096 280.227 125.096 cv
279.064 125.096 278.121 126.082 278.121 127.298 cv
278.121 128.515 279.064 129.5 280.227 129.5 cv
281.39 129.5 282.333 128.515 282.333 127.298 cv
cp
f
270.835 127.298 mo
270.835 126.082 269.892 125.096 268.729 125.096 cv
267.566 125.096 266.623 126.082 266.623 127.298 cv
266.623 128.515 267.566 129.5 268.729 129.5 cv
269.892 129.5 270.835 128.515 270.835 127.298 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 17.1.0%%For: (Iana) ()%%Title: (a6.eps)%%CreationDate: 25.07.14 16:23%%Canvassize: 16383%AI9_DataStream%Gb",KGs`6:oC2V\p^Zi0$]*8Q&"o)<+:=!Vif,)f&BSLDh=^U(pY"Fb\u0mA8B0I#!ZQ?7Uo+!g];g3ik3)@'6*"1-S`JOT/SA<Q%ZfG7T`jOUGP2jm5cTeW%ep9\C=XS;27.dgJ(]&[LA:<DAfHb6:D?0']mE2))C\;n_m7OM4/$p8_DJqO6pfVKG[`^%;V4@?XCGaap%B(Cq%j_Sfu\*4p!lA\uHh//JT)*_m[bW2JrDgTh8RcA#`#D\dCJF(h_I@(gm%*8%P)gQKa!7H?-5(3-AnN$+:c[flL?Pi]fT7]Du%?OqW;r;>Y"oTIu$H-Es*Vq`lulg5GrZ^_WshZLBU.FsO&K1;I\PL3M%Z2ZK[4Y1,MG7`,r7QsL3d!qAZO2$N*#,qQf"TGUPc@<^W%G/hY61sF6?&VmUd\o2.b&$FV!?X1tX".UW7G/)Vp1s5b8Z.6:rXI!(q"8lYXOgr1E_HZS9]]=EG`j>00YX:n-/?f"LYPl#%H!W"&%CL-(=Y1qj7rsr5qH</&W/;ER&)R]"f<kT$>nduQjl*oEt=p('+[k0J[`+<FeoU?HdbMA@c*sB"-(a.e(1SH*J]c&`:b!0YiH\)KI%h5RgUg[Ag199'I'bD7\TYDDO!,:npmadFFtFC6drp5&+@[H\O(I0X<QFglftD_3W!!6F1(*fK8P[pIT_)VCI>J'mVhU%&eq+.ag\%\DOKtjKsVh=P,O-h9'X(nGrHaKB?%3>Xrg;(31W%r0Yg^?o#]A^C5`=m!8!%9`A\>esi/<i1K&fDr8Um;1u[l"U0#gr9H=eeT()Y%j7(Ss$!VI$ha]6Ta)A\Q=MBhu^0`@h5,/C'U'P`_pkPuH#dL*0Z1&G+7]\oWYmLYN=X`3n632'u-+mD2q*)5>Q10+!`,0b=4C=Zj%O2tD-V7Q(SF7]/GZ#EG4)mO?VC8H:e=+n=##?QSnESZKbg_SLp^[W8G#_->[9IK6G=+n>.h=qe[\0`2ZWQF0F(9S$p,>P4k0Z>-(%3Ra@paAg%6glbaaZfemjgj!q2\`/agi.$Q:lbhW4'6B7:c.A=mp_U2SI>Yp9'lJrq_r(4u=3(6Zh`Pt5i,?QNp#0iO,"i6kQ,goW%PmlTpQ2E&%nbed>LrFI7FQ&MVluD/M0-6I,<r?D8oac%]F\4E/FkE-abu\n5p`$J?^2\Qp'5i`C&I2Ar2m4K2kmgXP7ptR^19>"T%8K5sF-&#nrl%S+Ge"(-l<9J7hDE)^V&[aNg4(>2:\T_r;fD-N7S2HM,R<d)bi>tV`O6'GY41CWI=5'Z39@6>S5"iAJHS'a">0E#U%FNnAcA^(IMOeO,0f$mN;<V'5NEkgC-#`J]@?abhYrj-IUUAsdKfB)Jt0E7N2#EM@SoO%S6"T2R*jaU^[hnr9M*QilB*+.*Cq-Q>3%ht:@U2`G(p1.;0(J*ZFu?2s#9<rA$G3V!Z01LKsiqSn"nIC<@!]i*5Y81lHIn5Jr\qHOAbSdgg6NM#a5B9ts[Tmo)t1cLIsK-F_?%h%9VGIs=+)nhp>\#7(crgcte_Km&!KnN)\]IDi7GY/On;6Muo-JA!(K.E#$7>$]Z\G#/Nk7+Fn8K6GbFRNK]%j;INEGWe(%\TqNI%A."as@B/>2nQQ=]=8pK"]o0=oa0=.*#PEr9<YQV#*+0i^MK&5)s!+$Rj5W(5?VoV^QoTXt<sddCOV"7s_0j*!GWnY?>doNnX]d;S%e]RF;/XNGQajHM?1qq!d`0of*o05>QO/H's^Ng;OEut"%%l@J;b0t`19)8N#@pj*7VPJ'<'b]Yp8kL.l')F7r$1jPIbBTKUW\:.]%p69BS1WT3.,uCsGF-V-43N+3/daCQ);\H*EU"7;5nZ!iLek%o-mYP-m#I'c03oITM=u$=^NsZ-l1<l)KED+7i?9>:3*U\^G6aF/'%3PtBIgJ^2"*T8LT7pMo7dTkd&](&d8kpqV@E_6sJ@[TMRF[AM?C>m97qnq,SRZu1=;Lru7PnJXM^86)aRN1'@e9?LhYoNSl>4Y?Y%[@FQpH-gcGDR`kLF-dkf'h)4,dAA<t;L/X4ffTe<R,fR@]HjJPA6W1_BaL"TRiLT5*1J6Y=`J!h?n?lYi&.j;AU.0(`RaQ_4_=H]%e`:**6!JNnR,of3e%3eFANKAsVR_k$AKt#L(%6qT+^,#sR\GP&PkM+!-0N0H`LP&KlV'J66u9Du%8HgMku7Fnl3ZdD[XdOFo/1*c%OLfV:/P*:Fj:;2ZT>t.#XW+^sjcS1/TterX#2f$LQ73>Q9!k<Qp+%=u_-*LO[F?NYm2N7_[-o9>mR?bJ3mGE6%m5_ZC.r2GH(N['%OtZg8IW4H)[u*C>rMWaH%T'IPE\=b,=f;CC$N6'lD2M)n25f-44]h3%O`W%cf%u+17f-#a,nS+2>?MZ+pAE&o.+iJIP))VU77T4^%Q8O`+=u7ak6X/5eXV8j'(qc"i(Y>4RbkW@SF@s`a+4?H(M&lK,P*Rt(67Ds]?_ZnPMA5*l&YrZO>k]`pPB:]0k1ZhKR'Q;*^6plM%qbVoXd_:dN/#N:(f%Mce<&:75:$Xq-Nf&t,YOIEA(.N@/>\>SFgY;mHW5C_Mg9Kh&;0^L^=@V=qX/$ti[LRhOB:Gj-8&_tf)Ui\_%MSpA?39KNt#&Q9lUnTC5Tr.0&,=>DM0OlMb=tWd5(u#O!;IsWu'.6F6N`2'Zga8'/Q-?IL8P1G@;0I]GVrDGCX3,4XR<-#XNKau+%ES(Znbr1dH>\^aFml3rbBc:Y\Uh!+gSQ\7FCLlZqD\CH&$"km`/Po]5rL]R<!6f,BqrH<Xrae2P<ZFp,Wg/j+W>90IjX>FS'MQqY%a-'UM3CZpE<g;(a96p<b\f-l0X\;n')-[uaiG%$s,pXXhln=W@;6ALFC@A4/N$3[U?le58>&07hWR<!:@r4'iZ.;d41s]BXot8Sl%<33,G%"%).!QE-#eu5X.Y;0hkb>N0>9^AeHR`Y\b4jL@%())$nQ:Y5hE>DN^Mj""tek%NhmAm60W(??hfAW-5T:5C87_ImKSsB:'%bG92AN`q0I^7:.Se<h4!F&#-3f:a`e>#ChBP#m[.V,m:gjmQ`B*A,fXa[g'@KR%jF"69h@D?$h_6<8bs@o\Q+hq/]jETFqMid+76%O\7/:2"]F#@mSVEU@f./ZXm%K7q[937T![9o-h21fimL8g4&<,<ju(p;VOIurCQEMC99Nlf6XU#5"`TLI*C,%9tj7u)*Y1'3e[&<%C,Xk2b,@uP.>tCs](//0@^5CM[O!C$Ao,Df<'J@n`+tRNKRB4;bHY+<hcOZY`E$$/2,rgm&\WsWDqYH[fLtnT)3rc(m9Nl[\Z0;\%eR@ep]TT)$)4sReCJ.jXITpBXWj9^J<DH:,Nb-4He:Z_&c1o-KR-&-HSGBE)oHKScbss&pHppJ/VB-$-,NdT^<S[-):PEs*2e.2L%06!iDDR<47>5Xekm+(rb%e"8_pVU'L^ok.cYArtF>mV$c)?[LVd;9CTS#t`Egk/k>I8nD&X&]#`DZ,'mC?G3:GPL__oAHrlgRfMD%qWt`]isYkV/;AF6^u;k;j7NgfE!(AOk_:^=pAjV9NY=\8nT``-^%640e4P^@\!H!2d#u,C^QVk<CWGg[;`F_m>;je2k7h$E?Cnr$%\8hW>f6?./qugnlqc[q:;/<O#34esR.CZ=FK6"FWGpYV4Ei\!?&H!VFj>Jh!$3uT%Mnp_fa=nS&$T93;`-f-*,B)-4JD$/Q0N(TU%f'RU1=4Dn"iWW"D0J91=W8'V^j;YL-[J/"(,6DaR7)?X0_H6'dOX<k>YCaC\h+YOEkac>Zg[,3i:.RB(WDDCRSge]7B57#AR^$\i%WS,(p5\cNroB`/p3@'T?"5],2mSJPelP=P&3RrVtD;3Hm#M804l1]$^-"r:(-:U7pOR)W?>>"t_h_9I%9n$JC;fD79WPdE]j67B&%NCNlB>OJ$4/-##ECr>0]U[K&FgQdt(L/B@S0QqS$hd<WV5FY117_RDa"!j4A)BbK^X!7ZliFJI'\_NH*72[>5&5klO:O#09FAP<;%.SJnpHI07N(R;W2HDOKnqq:;eR]0:MZX0b$S8s2H)iM&sB=VA0h5VQ>bM@J]XK+X<5-DAp@)DXBomVm10==oUM<*CEE\d`$K@c:D%JJ27%m'oG(n&==6LCcG6U#FGJpm=o\Hti'*7]G6p(!f%'5A$5E*l$UhHI]1Ln7/_0_..iRma#kh<\b3bC,T77BaH3?XWJ#K2/rDM%F,tCuDKuM_Ea!B\]<rD\[kj((>CCo/J+\;#4LR6D5ZlV8_p%.(kcf2m`;-1`(bjBPXaY<E^AtB9DA!_DY4*4)EYX)TX8UMhMi_V=%^4tG*+db&Y=XfY7f/aTZ(KR_7?5;I)qN=`1jlb^(s1ErO[jde&%Xq2Ya>%Be*Tip*U]g6FZK7hR)Jf+@r>e,=Bea`.62,$mkt@j2%EUhgrdeZtiQd*1Ej\9!r;7TaYF_a2GYhg'42M?PDCML9OqK6cS'A(bZ1d$_h6HKk]QbFf2[u'G8ep;s<$HK19/q"K.`$Mbpc.A50%q2[?P0lb[pNXKGM`lr\%RBGpQ1'Dp?A&s)?I)$r]KU&r,[;Hj+lH*khR$TF$HgO,.;VU,7DK9-+dAkI,VDYKu?#O#E4c/FX=/ZL\%G-fZc;=68<'n41+-k)P(p>]WL33tB`T4[oJhoVMG=oL8$T4[oJ5@*o$[g\s7j&N_J]Cm,ljH@Y:JXRl]s2lf<H_4FB2+sTS$.LMW%qMut"*4?ApB=_gce39*9R[2`9(30pbmFJ9XIp_2?lhutc*Aul0:TTcgg.gT9%Fj\X89\jop)fJcBNSOb'b)'_^rpVtdjV-H8L[`A%FZd`'Gp+*tdMF]2jG`3!6!r$X-a"nTIK`k?.g:h\PsKJAcTt1.+9VB/e$dBr3NAXGM0L<"j]C+j@`>c2_Lp`H#(BV21]1Opa"'kh%*.:Ff()>]&0<`uAe5HWXV;/$-"0NuS6t9R">4D11EP6L7?tZ@0SQ`R2*2LXp%+IpW;7Z40q<)9'Jjd.Vm\\1+)=\&keWZ=s9uDu@%1ZD#)LN9HP9Oi.A-\FTt>Y*=Z&6c!#rR=o43;_#Z3iD**S,3F>Wg)%Cm>j:k<\dC;d_rl*;SYbId-K6*Xo-/$2N;I";[R"L<Jbua%\4D7UOeSa0[aV88^KRGG;.[IU;=&>4hEPl.qC+CCm1aqgNGn)>r0Qd#P\YU!J0_h"?Zo$rEUm`kk'hIg;kI;m4hGBMk1%@l:AppS%;fh6lF:*tj@d;6]pM&6Wm/Ceg,JCq,,49="\gK?\h\BujncWR:T$t"23Vf?Ie<X]Y]:Q?7ce5JaCtEa:lT$Fa^@o11A-$]-e$`<*%=i75rl,8"qo&TZ&Co;?_dlH1ISF(DniU!JV4?D6]*3k=Q:?Ok#7^[\m4@jJ`daW#Tg'(0`EaS:kc(FXbcAD.2i4ZdBIAqh%FI^"0%@JhRUBsYVA6+!()VG/1/iF8T@("t5Fmoh0ij]mG]:SfE8P<nrQ>cFQ1;%e4V:7@H3r]s/H_V37L9!au7^Z^8N::di:CB^Ghg.K%Y%Xe2t%ri!:F[Jie-<aBE`bH2.rW+O#G=g;[ACe@/jhQ5@O"d+`L-Ps_Es/S'`BqE!O,@7tRplecVCVZ9YKan4Xb,QH#3edB6W?0mf%RgrR83T\nV_:<Z@lP-m%VcJ?[W4W%1#K!Mu);+a#=&>&U]rq!qjnTZnE:Y,H@<Qtrb3M\3]\^H`d]@UHX'Nqa(UMi7J%g(L.hu=$%OG+)m@E`I&ZeEC"Ftp%'>b<:F0d\in#5dYkd`[GhbXsNNLHV%:?c1U@9t@,#7b&c5AMI+fReU0tqd,DURGHGDoh+)>pZ\Ncf3cF6%aJ4#Z+-W5Og\Fe'=?`jro;B+'I!.UO<D<?UEBF3EQi/GKlioSD-FI'L>!M^r!Vb+?ZIu!eB"mWh(7>,T0=sCe_Wfmrm'/CH-?)D+%?iS0p#k(6qbqRBlY/T-(mE^gUbNJm"r%&t<5`k.NIWet_T,`Lp#'+S[M[p0cjAU_`Mlch6fU5kTZWA5TYb\=JS5CcUgq8sqcCP;\%obm!'.BcKq+lM^T!1.B#O,nXqCOCedkDr%"euJ!.jecA3YP7;Kanf:;&\(fD,'$70ob=RBRaS\F(,PT/S3B`D!BP,*gJpF^]R83W%=3ai%$u1"/Q$WJnZB\/E0n,u\1='X#/m%:t<DT`V9fN#X2lg#U+sdr,CSW,edrMkpBAn0[cqQN`FVEepPic[`"-1.4P1e6ahnk6'%"3.3,V6>(Mn`OVTRnU!B/YFQSCA*%[g%31cg6@f,>iU#X#\PnGB=G<S6!Q2T\$fQ%Vi%:"qSr2SW^uDdboS>iM^`9njXajY*O3fi%Q<D"D!s=kB]ssK20)XQS=$F54GP!@s"lEZs_+hUml2#2j%65st],+PoI<I:3^J=H9]mja>0CI&Nc$\42<nuq\A[>T\B<LUY(7>,T%/%[uFeA$-n.]q77+r:1#4h9%YLYq%]Xo\3FhZU(ol]8[>9#'/+eZPf@I(@cQ!Dn2Onk-4=j?8KtEj&O/ep\$BX\+KJ6AEi?I7^R7%?GG@#>dO`GhNED&qt3FIk>Nai07?RlKC7-[!<erEDH!/XgkaQ/V`<ec)DkfRQ1uS`FIBX?jp!.>fef/WAf81KI/j%B)rV6>g)IBo%IuT]i(C\jdl?:11s,Hjh6RFGTf3`rFAI2>2h;'-M8COO52sUsG)rVNE%h=sR"aPLuDhS!^AWP#`7*XegCMN=R?^ff&J,-*l;iYO"%W>8JN_o1kZN7,c6;eq6hL6%]BeGAR41&7uTWRm,:de'M=&!9S+H@H^Y?E-u<5H]-%p$N8;QM_6mEIIO8qrORe/"c+DSXl0R#,YtG%93DTo+CEsbG6Y1lmPV9W2aEP36,q(&<*@qBajR$.P.8&7.=Y>f'I]fn>Hde5j]:h0`C&.Q8#C3&omlAh2^A>!V.b$eF/30VO(D?T%p^Koi'3)M3j#8C*ouSV2d6>e"jo&EHnp\X;fDePkoR72\aS0/Ro(<goDN)]rg!i1giGr9GEIDZLbrHD?\]2r0ZVo:gB?+.VY51+n%$5&d(i4\]"^'a8BFaA16Cj*;=D#Z6C>(]V^.'?<kY/V3\Z<QWOasg(iQE/P^^OG-VbpO1DR$YOS1oAr.OrF*19n)*5P3>tTaBL+G%<2g:pK17jinsR;,o[Pe`X]g#@_r`H17V03&,(hU(07>GF<jd*UDl%aU*2m)Dgb5PW1c8,`I7<8;TB2[]=mgs,m?bHL]IY:6qF\EB%X/MoS7eKCKO<u#3m^AT6g^@Or_#f51fh=Ir0%3Q3)Z5=^6Fg*7VQm&6WJ5FFn#EoI3sKD>fkCoDs2,@CS(/0B#mAclD1%m,rWHJ)%%%PY(Dt>K%>n:;`lS*qZn@Nl6a0cC)TA!%Ie@@a\hX#u]R6(9^Fda9bh*cCS]]tnGc.'jE/I<t/,P;+_H7M+YeO<7J]%Pe9XcKII%>dM6BL-3+jZ64>6ebUCW%:%jth-kkX[r^8@Zqi%;C!B?(5<!$Mb_457fJJu"aauK.@K.>]-<t>8U-P7";S=M(`k20IkqoI9ZX-At%U(rN.l"a[>!`$\?q#jf-3Y@FDN"[1O^8W^fmU:uo"k.eqB$!fa[hNImY2m+tC$)#H_$2?\CG7=E,Ln<^VZ&9pm--MT(3)L</(:40%qD#V6?TkRdHN@&-E+W8qQ8<kgcK-QonqE.Jl/!oCli0ZOmR9U7`WM^:Qc]dil\]%!HR%B6GJ,$;m*2SNE[*.1GAU870?rS,k%9sP%=/MDas!H(kIodHjm'Q)b(TdVf:Xe,:\!D1\;sW-9_e0(L7B'oQURP<O^*+GBl&F3ZD05gWe7W]pS%XgLl?q:XaXhq89R`b.[k]Q-%T=oqrp9^<g&4A_NE+=n`barl3RP(r<!Z)g$bC9<Wm(C+J3T@gD>2H5[PO#p\1HRO7^!@-m+/_)F-22NNiHJ<$XoSoB):?rF7)G@_%`D8,GC<tleF44q&PfkB39kMM3T&mK;]QtJ61V8EM3g6*R;%o=E2rLbaE/DSP<YLiUr<TTF9d%F)B/P8)EJh)k^i]'S<YP6;':@;Q%rbaW2h2%LbRT3UZRK,M(%I_OXr7Q.5S\Y!qJM0dfY<K;XZ4DW5WWgjR/bi+*DkK>ZEQH.@V5__8orFZ;rP@.;lr>jni)MT32".'/%qP8IYme8g#fCE/*aOtX^YOH.b<*D#a7@aDIh+tAYC6hlUUo\<O$oQ5.Am*Y8X8:/TIFQD755R<4X(H(r,os=_V,ak/C6hn[>/Vto%](p'jc$5V_\1)-W`t+?Q<!rZ:XuspchllRPQ:kr1CmI\!!Fu+mVccqX^M25oS+M#e)fSdI7[tkBfu\G1grq^99T)2/O]'C3dPS1:%l4)1c%*d#Chj=@YS78:]qp[.b26JJ^rL8jW\0@KWG4.`,3I=(_fD&ZX.tulLm:T`#IT?dfRskU)_EgtuLR<H!A@<.q.>?p+L"O7V%\^d];p1fRj,ur66^;Zq,fC%]\jtACRI#H2"phP7U8rC1*/FF5X<R^hUn]AYs9DM>ToIoh3/RG/Rmr]Q19!)63os`,8CZHt6Aa!n"%Ib/[S(6]E\kr#,tk<AhK1kc%$<Wd)Je:3m-+%>2L`&5u@'QL7l]>??]NHTMmSDm>>V)l3-Vp&)`IJU?6KpA30/Pknkb2<+^V.n>O%j)2!m^WDbZj*IJ_l<m9F$Fnck;6Vot&`mc8hQQsA,&kqsQbJh$JnM/UNVeUq5&j^soIHjp[Sh(D;Ah:r@s46a"W=h:+"COVgPm+j%m3IZ#P\?DtJk!FR.o1W^(F2qEm<4ABdhnI=^C/onZi"l"8&/F(bM@8hPn>[aC-$VTeJ&P<A#(PqXiK7@1PIJ*X=5]'pY.,0htE=h%oAs#dRDsFLV?][udq:^BY446&'Q]oGAE*IJ&ki8edjJeK+T?/s+=c">(rYc\8_;o@6jag$H4Q.X6Vjb@&<i$kZ\&gqK+PAA&47ps%N=S@OR/>+g??'()]a#]-V\HIi&@7!#PEk&E+,!0>pZXW02sDH<QlUjI:.nTt`WmYbb^K>qI!-(\*uos$l<T53F,hK)&P+L,=2_N4%p`c.`VpK$ts7bdW++*J)n!h*-%=\8JUIJ&JE]edn1-N/upar\7\NW3Uf"G1QYM!DOIb4J9VXB2-S,%/cRDo#&M`(;FZSRLsZWOtl%)3a0$B!HfC`L>+i$L;ZE<K/RHJin]+^1t-#TSl#+ZF%R.4<@W`0?h,pr2g/8?cdHfHi9Rr>&Wj!b?"Md(4?5/4S\R%(W#:Mo/!!@%hgl:jIXrU9m)'"YK$PM9^u)s-!mAR#mE"(rHF))!WK+((lT$IJ>2k&#b5g1cZa.s/()\Xg#E^)hoYIhM)a6ZUn6O`2I;Y&qTCh4m%I!G`7^'!TFN3G(lR871k9GPA3GNYq%lJ1Ej19;4HCCiKm!pS61,hYr';=!sl2#!Q9e?_TTfn)fWg.XC@a:npZX%;B!5VcTrqu=q>%8t3A^b1o`UT"^ZTYHW>RhWt2&J'ZN(](nFN#NALFp3no\g(!E2ru#"%"CBHc>Z%b3);l!+Z.q"Ybo],Mha-VuRqXb=]/HVN04&=l%!*'o;hquDfd/O:CD#SCDoq+HrE3IeRr1i'7X\A9fJ;`ngNZaob0CeFu;WjuR:F)N6[09MPia/aZik?P(NJY>n[;/HWP7XBEg6K"u%Ul^gQTeQKmpA`%\O7VT,LT1&P0-<nPFGNk_aN<bDkf\IO<cpgD@O]=Y<<g-c]6UfMm.\W\Ej(Gl(&C$H*GNL_\*M#i`,k:33L-),%V7knRVq;qqYo<6Qou_Ed`GU3/KbJ#=n(,X@Mq=E_V'%T&rE>;`>aOIS=kdrO8aB"?RLkoUr1]:R>STeG^>0j:S>16Lgs/sf\Gs-E%T7$Yn:#p\kX'OeLBDL6%$iNZ0RoEUc)>q/4jg]cj#p![,@O@X,ipiq`rKH'tRNoKnj^0`nf/bpu7U.f"eh;5CC41mEY^FgP/>hD!%q)2:of"Td>h^GnEc14;@^g-DL]ho`,S62hKII/h5CQag_232M&bsGj:gW"rF+jdbH="=[0,\qSQ(j'gn0Fk)7DdlMQK5J$*@8oEB%RV$8*r$buX]@3rBli0UZ=tu,BfJ),1dD$ArWVK3"CJGE'X@XJqa.V4dpJXLK1$Y%YOR^cOl*aC![9deB;k%G1$1o[&Os[c`9<1W0%,DiImNO0XH9R'b'e3![$Wi+4Foukm+s.ZiZWTOll_g1%:apkF/3bKR6j%nF;C44IQm+-LM`W/$s`TSYX.7>N>*s:@13gikJNGPZH%c0TuOf(p8t%jASFbfFWjRI+2H1p^ESokRh^4iT02l*h9W?4Zn'6%;3?&P@Y7Rb_#TFYYA;e1s,QcCcs-qrA^(=r#NKGFEoNmFo.h%-r]R-O4r]52,ce"P-HfKjY)&.F1dDc`@kVNfi-[uLjKh3<VVZA`i*Y2KlZL?Ec8/\^YtQ2a?r)Tr_^l*fDb&JeuSImq5A0jP9Kr<%Rs8m3ddfG=<o5?-X$^Ch3plp.F(gkdB*NEk[ae,9.s#J4J^nmQU!.@cEeAg&k'J\ZT]aF[P'$ts-fSkr>6t?\IEBu)$HrAd+P(41%D_1H^X'I`$K.*@6gI_lkA,(M^h!0%)?$pGmi7+fq?G(*Lb:(ggG<jW'Fa@q3X9*s=(h%!9@u]gf!LNeYHb_F-j[P[+p`C7ZZUpuj%mf3r=F5S^5i"Hs&2nh^NM,aA5>.9,Glm!DORCtlk0mf=@dlNTX[6dXNhgfG`mXZ)Bh-B@4q<@=4%Pe3XjaK:TPAD0i]u/a`GS'6%%q>U(g7es73?Dh&-FaMHh+E-XJ^YDB&kEmUbC>F?PU)I.o)UPGq1JJpG^"EP#[9`4ea0sl#J\BU:(kOJ1[\5%M8n1]:QZAj[p<H7a%q%aq:/I9Yk/`&2$;<+0QSo:l@4M\8gF/,NnQ9n9nok(-%ZVYEodS/qCY?'<19.'b^WU?&O5dsdGI%7iML>G__6A7k&j3<]SG3bJu%M,DKceB!rON..ak,CRQb20.gVgg=gXrN0-"heEnI<kh,@0H!&KC';BhS(Nu?kbA;tM"FeNSMZ_!XpHarZri9*o@^F6%#2OLc5t66%M=$hJg$SoESCl++k1bTC+(_1(K+?h7o@>Ma[8Z"s$7-bCd@BnCTeEi".grNHkd]HIK'tL)h'!$Rmek;ibEXl*poWgP1FDL-k5G#!%a?IDD%1bEA9&k(L"j6efG.BB6D\M;NX8^_l$(=BioiAL!B5`Uo#"IF-,@^j#Ygb.n.je(*ei_IaWJ.3EY'5oS,@$C$a\ZdShH2se%fM&;72rJ\!b%grQpd#JD_OE[1W3mO'(QcR/@Z9V?A6Al4e*coa%#Y!j1:>6Q^7^VDS9'aJ.`u)"n\!Y4Yq^uH+DZ=GI8n03`WZFn%\sl,%e%E>S7k&CVWE1:bMQHX#J[=-DC!^Ol'gj\*_m2U9`UmTOU`HtpJOgP#O:@#-%sKb(=T>ED-a.$!1!)4KbqRs4@bGe&?dD!?%;sk*MJ!!?FERo'<!12B=rD@@#n'R)S+m?rO2.ucIDiKgQ'kXZ,D4f@)UDUT"mMO_Q?6aKXM6+;"d:bo.^K^"4)SJ*a>f!J+G.1YU%SsPD[j&bVsic66,(Np!<Zjf-lO"slC3Teh?>VaWb[W$d/Zr82A6-j-6M312<I:r#8LZ2>``qn6.J]bF1+Kn\B8%c#aSq>,N5Lu+D%a5>WAfqWl.=iSB.0sc*^-@4jNH'UT[?FPuVZb5NE#CmV`2p:$`hCuMX0pcG6K3f#.6#tLSQ(cO4^cRSSb\+t?i.K4^+aNS1LC5`k%QK7Qf8UQb0WOOqsUt>B010A5,Fe5'tYM[E%CWGO&UJG$eEda^07;RgXX'9(144PZgQAnr1.<MSRqW-[g1#aU)6iJU``ioJ_jIfD1%,B"iK!REaP'"[d*=QX<='_p'X'^oQO?ma?2p=iIk]HA&Pg"!uqQ5GZu$L%YS2\`HGms&n>Zs8stU<(_hq%KD\M@:^@1<Q>A^G[=:%>NS'B!jTZmBPA<_I?bt=?]9)q9Qi)SW\#=I4/&u(ZuZjI=B%Mr(^CLE[FVCN[#E^hI/tN@dZHX-19O,61j64Gig"k,l,Ms"+t'm>%I^+lM[M]m80#FQo>CY/6I4RjJ=TW'P-**dF"D)(^]@C`0Ma")00[_0XNuRc;BtO8WfFO%]lEkp2#mR"l4ir_L3/Jjj9ag8R/:*bT%l>%U#+61u*X)o8FT,66:`i6=kj!5F[qN*NN[F5N7#@)#.4-SnOn]&eDgg$t8;<^&5NEA?Fer:>E_IA/#Q!b"MLj-VjO0p9LO1+D2%$8)<g_5+UZj0L,k<4_JB"I'DKhg4Uu4TQ!B_@WA8ciP7&o:MduG;tc!39nlY-O"P*4hR>,0s9Jf;M7Yg)C^d.Br&O%VD1\UNa)Hu%[5$ON0i"Wnghr+XD2?a^*%C8r7e*D^$]WW%Og.FfU/R"`a"Y)kD:MD(rHQNb![QPtTWS0t;M05P;-N#WC5<33*6q"P6[6;nEjaK#%NM-t/ebYYa[:!l,+\)0k`!St:otNQ@`"n9fmi'(.%YsqGoSgXL)3Gbp_NQ#oO^sKgitQPs-9/986Xm&hRBgPA7j5<&Pqc<n&:.hG%:'fCd`A%`Co]4lWT=D;)'G<2;>9ot6N#(ZaQdLqiCP8(+AV?BAq4^OeL)hA:FK=6SA62-#a+IE(N;,,f//0KE*'Gf=/[nnu)g2Y@%Uf=/<1d\;P&CfQDV>4%Z:Chc`)u7_?HGLD[mk<?sED\'=Xc;Oa'Pd^SPIbhIKGVk,h*8$0'fXk8L;oXO6I4jnPZb6\FRm1Fs/X`'%WHF8;PnE[-.Upce@mP!pm[@@UPH$$@"6;p=D*j<F0K)a`&G;Yh#ei%PNpE2O+a(U5FF,m8l.A+f-4>BV1%(hpNQ:=TeN4=g\'@H_%m7$nc'-\'AB>WF2Dmf7uF/Ifg9l#]eeN'"R7p1Y9@ud`p_i0's.s1Y5CO$5N4gTrWDU/t3+)H3"Nq_Z,VUJ(:-Li>aQ6^MX6_!5&%%T^ACY0A?T&`Y-tNZcchU445.,Uof&dIto^Y*c*LcP>ZD*Ha)i@+(N!`Xr&dkU]JFVcZ"@j%3>RDtW5&DPZbs]29Z:)r[m&\N5YT%fk:dBVJ^VJ5Rrmj;"!hXS@YHLkZC1E[,#W-/#V3HZW:oBg#?3tLPq]J6^IB-7ECs-W=M.lD3XpF0!fft@qCV,A@QmU)[_>[80MPn%h`+Fg[Lk7bD6HDUBA^d"a)Pu!W<H=Fs)cUMC6e,MS:Wu.9t1&,TYo]SolsR-Jj`Emh!`g`gQ4`A(hKPkZqAJPU"u^e'o)6QMR=K2%??pR"G!ptinkL-5>!OqK`_UH<;pM"]?6`B#2%%)-Ws$S,lh:?pGL*^>;00s-BQ=7`O*a60E^rU^VXE\;d8"-<W')aTdeZ`SCZMT]%j(%G*,ho+U5P^dYhB=1tlg.^dX;T@aOXb;N@oAmk)p9:%]8M[.Y=[11hc.D9.QE7\EEr`L':$KYdMqeZ^MR=c`()A$=;'Fhro7)4%PAk!A9"04JmVeA?el9V$r+q.i_=2PrNALJ!Z%_9G%XYL(ON;NQA(Wo>&DiOR]42jTdTIiKi7BB@2u!9jC<@)T`b_mi)l@_t[!sfZ%dGeec'<MVURn]NZ)HH4RkiWGV>X4O1]D*fidEnYn6/:>T#[,bsollOMA*5c<beeUFiS9UG)Rg>C+^]/Ifc#\V!U0!L=[9]'8C^jt%'[[nVe3WKc?+ospA7Pr[d$Kcn2^`3FR.CQq\P;sS<edASN)b;PfMM4'DNYT;^"Z*4P/AHICJ-5DcJgMp>>PmuATH>p;(]-G&1:=+%A[lLo51&8/i(B&iT7(U83)5Qto<NIK*cH4Z3%Fs)83E@B@SE/B7q9rBAROK.7R(ohQ7bk&hI8tBdRkG+KJBA1*.o!/OL.jsN2L@1%3.\,lNNC(+1<EqF[H+-'B]%BHl4sfkmLn;Tgf.M+eAO'E`0K-N9Gprs4H3G)bPB,PdirI/)2$qO?CH^Bo:jbpP,##=j?&djG'Me\%bQ>b^\1>ai"^l/TMD^hKmNWCkBJh7U`4s#!L1+tgZ=G_T3'9sq9suG^-)hu[G_V)*/n5^#4[_l)cKrLnY0(Z4h0LH>s&-!\f,_>M%PqYDt$0Q<X4SJX5<].V/@@[-lH"(Oc2_d%-M%K4td,Z_rEpc]#Q6KqRi80M&]mDs"6sRhr!%938Kt&l\$T\$o.cTO_$CdNY=0,Ek%``Tb75'q_He&(CdPPZllpPU\pH`re,CYb!4l1.F3er.tY`<Z,Fol@Kbf73[Fh7p;/p3,K\[ejldlgt)B[I0\#Ph,6hE*g'B*R!^_%^DBZ]Xh/@!?aGgE<Ymj2[GFRRn_F&rb1<\t6@.&*T0.V0[C5AOp'UI?:FjD#pAW1ETsgsC@(`.7RU6OgDY/kE^Z=4398g>mH`NLf%h!:Rb4SA.O8k&LB62l5krk[B;n^r/-1pXI"6$+*ZHh6KCDSM9]GO_=QhX[#@e[*\j[H1`'\PQP$+-[g_<0-5)M--Tm&2G&_^DmCP%``hF$no=Z9?T8KYM?GrRh()OEerR5hBD2qH+..)PnFbjX)a<*T;;A6jhT@L*hs]_$QL;,)%e%Tk_;'G1rP:g3^#H_N:cNS.=&sD6%cFnr0X2SubCPDY(982*XdF3:mm[UFZ.ciJa<*r`lhE'b\L%VqqFR+.c/_@bOW9,&jcgEH/(Hr@M>C6*ni;=\"Xh6W9k2uW-G@/pA%XigV)_NXAPa$K=gPBmd&mN"C"DIl`tS1TZ/a%Gkjmi@KA\6fUR*36YU00CihJ&V,F#>9u_Hm@9Xnd7Qsc*%j?=77-101K7Ypp0_;%^[j91[(e5p^8l]d[ZBj(Tl-L2k$^POrC;'n-(k);s%NmcoJD'kcsMs1q6%;?M(a(]MiZ&^pI_n15'Co[+"r#<?3k+[hE&6]l-eaK%VkmDhC%Ym4-)27lf=u<<p'5pX7/+C&nFYuAU0W.injN1mn76[<qYerGiab/[kjNZNPG8+Ur^Ar#07!]Z_38.mWjr9(DWQe36u&rm%cWpLFs1OTM07I7V*^>,LA%c-]IlHg<]mUR]beJXsHX4_]'T`"R5Lt:2=[&7Ccat:m&"/e,rT_Gr6a?,5n%R,]/eu,C*#@hsrPpG/%c2!Q$iV8N8!^?Pu"M<3m*\Z=Gd<q@/^%LT#WVE^oP%gZsc*@l8mru'U(7r2is54&Dou$@Sb'sA6DZ<.TE.2LgPVqZt)"G=e96IWI%Re+,;T:93f=Ih[]^TB[M>,BP\%Z/!d\(+@gUuTk^6G=Ig*Tg@bZ6j&r,?SuXSb<7U-!6'sV\`PV\\f58,\D1mZgt6ji:pkAB<CTO%Zle0']#k[XP/AC.7^^ZsH_#qG;h+OXI:4X1dZOqEn=bgWAoGA?'"S9>e[u,[]CW7GEk:*8<[r$3F2:BD@$h0\cPu<cIG`m`?WoRL%7^44"X1^(.c0+f0Ws`<DSjp]seq^S/ZR&9IDrX3($qdjD>P<f`I9psj4/I]oNKmDhqe.WFh>"E82m:g:X/[/+er*jrpQo4$,D20p%ceg>&TZ+t/3fijhqpf;md<aEim@V,-$XLDMLcah%0=G6@V0bkOVqg_1l$[7=j^-eNfK*SZq65*ks1&ZHD4e*K>^uMI\ME+t^rnD.%:20+Vaa5l6hhjqlks=b)I&31J]9h:.s3q=h2jRLdU1m*tUZh%2(Y3@#lp7OU>29`#%,:c$pJKV>$2>.N=:=G.Yl<S&Ns"c`L9?+R%5Ni>"0YQ2s\a/4`KpBp>0j*eb*A9&MNDI*uD_DIgC6\V([edXu"dEro^^=o6bDVF6_qa*Vhpkd7)=/1?RVUa%nic-$WLrXJ.plJS%&Hjc1GJqnno3G3rC-E;rq*uas`J5fQI-n#Of/J&NP.b4e=7;_C"kY=jT"e9u:NQ-W`b_$U>>U\[)t<1h%Xk1Ser-kLd<bUBg6'.g%pB(8mk2=i_*e'C+XHsIS5F#Rtk4],cCZ3"r2V6/MBR2f0QZ(rX9>)<>:Q;ik$9a\rZEje.T#%UF?=*$6?3QS&cf!EQ>W`?FLtBDV%01V^IADc=nn#sX,>C$!dYV4$AjQsprWWOLYcNZ$V$;L-:*`7k%Zi8Z(Ri4o$%gSb-)8e+m&j3sD_AoWn+7Hu(Ak+5^+q7/>N1E)U%+[I[C]9c;%JA8CnhO#^JV;WhZ`LU5ea'2cJ+\E.V'ka9X%QpRbcH4numjsPWMAAGA8'Y=9rlo>T2,0[R^qQ*'WG,ftA#2.dkV&64%]b].%Ni,B-0B20UPDF.!eR9rd.,9ndqpM/)hpdVgNCaeUn&Vo8fqSJOWY!isO\*P3U*?LGMQUij8H:0G(0m2lg55,[[sF-);\"%_%`)FS&>"6V4/;V;B[!o]?jtkg[On[N]CHP`#-LZQsa;FjNY-.(f%,&JiCPeIo>>,Ut,3_ji&X)4NHu$Po@<I=#d]`eXklK2]13UtB%-EK-<$bJ8EYB_aC+-"J,A0C^s\,Yl-CMpknG/(HrRE)RL3j:$a!oJF3<Vj0&@C^LG;>/M>*A*$rp/nm6EE)IEmGQ:EP=#66iS&V>%m)M84X@@0holhfRJOjKSH=_gs$O<HT/"1/AAEi&/%RbM!++Dc^2j*u?i%*F9h1#tN:'\BQM_AH:aI<R[+4bJEXlAZS]s$6:8CEqN%3Q_D71<Zl&`o642[o.SJlJpV05=%p>Xoj-fZFKoomk<Bf7NO)N7jl:0U\3e>XLJ4=&8B#&R.,1lg/t<ldQjOcR<I(.[3;`dTSrOs%1gFc[hVS4$_jN)BmbiNkS#I%?@m^k$Db-/S.)29%dF("*:LrHlcZHl82R;0%EMW5Mr_1=ImpG-)XA728G4lI;SDfFqi_8O-j>eI[%E^?QiBt_[WSprB,bkq-CJ;6Yj2f#$,jkn:3ku2P=^"<mIPZ1'tbU\mf&IJG8s(/XKq)p,:O\M!'f6SLNCM`D$?GCmp_@G9[4HX03%1H2M$*2_puhgZ?@^dc&sT6qR"7YW5se#^58DOeu'5e5aQ@Ypo_T,.;CS_HY3['8Q(U6sj%G3aaUC%XY!RbMVZ/O8Wc+/6(<m'XP#%p/WI1k5@e-+P)rBWWWpca%.(3T%ticI_N2u;a*<Ch#EOkj^ql^caFW4/_W4.@g-#T2!&NPb^OS*?\jEl>-9b&(:*0.=A(G_p[b63%p!;=$T:kiLbG..qp"&&j4WcOKQE8';O$A=aAa;eac-G%'rU<2GQ(7!p_gLmsX1`_Eq5Xl.hjlaeCYuIMZbb%L[FNAW2L;QBh1'G*%\WLB_**F_.Bs$,QIHrM(+$?;!<ifpah_<Y5=N=9Idob/d:B#Oq*TSgAQ&BR-[h:guoJIGe]Ng=Im(5Kfoc.4B?X2pRIdt)Cki&6D%k3;rPXi5#_I+)u4FSP@V.B_0'><Vi:>!$u8E,YPo@BU0d0D[jk:QeKHq1=4@o;1H)m\=\F/[9_>r@-dGg7.:uC+o@KnbR%u\U2a0%:=<H=QU$>5(\j0C?XkRa^Q=nmNskVeh(Kg&I=bjArC::p`tUCd\Tst)2n-SH/,aV/7c@p2OHr=[lW*3.LRin^jTeXo-9c_NW`lJ^%UI?JV%rN2Emm".9L$*[43%hUW4j?l-!d(&?eA2f:\b>Ds:"&;%cJs9s].9Q/]p9-iQ=%<7^T8N+Sc8hV5In2q,QIF&m'0;q\HA>e%hjk!57%<C]:4OufO$D3Z0aub%:K0uKrd*l56u'??Qh9'l(T][`[Ip`,Nt*<g=[@[]r,B?T@"$>2&#)!jrXM8Bh%E0ZEWXOW[FJo.%mhIdNohTl%h>;$Vc(ghnh!Y/.Bk)VP99;@OeZKdiYX<^,\@D?KlOa=?]7^7:H$)nYSL'[O(%0tk]2q&+F72Kd)!I6'KQe5j0-36'%TS"1$8Y""sJODo8=,ub;SW4Q:"Xgn9>@2X9+-V&0rB>8&F.!!=p?lh5+-4&<9Kp#KpU<c,H#GpZPdk]4QF6O&@o[[`HWR3`Dgsu8%?EW18ZOHrk,%MIcieQ]X7e%dUkq/uaBn,tA%cuNAi)O@Moao8<mH_YGn7#MO>CL_#;I<dIIhZ9.4d"Lj8maKFrC?Soo/g0DF&I+X%#JOaGP[fberqh\lX2;J]6aB").<G)":V4)"6/_ZN(RVl/_h\h7B3#cRI*eSSQk;I%JptH+r?nE`cW?$a/Ph/;P)3Q7gnMCA[s"Ho%qlU0umCplRSo1u,8J-m9lZT*<D'(tX\_#$j0@s7q*Ad8Po3-RHem4.;BTq%g_3aF;*$tITGl;-SIrC.;dJ*)-IIR,@5NLOrY901;%&C+.,9D%n`Sif^2fqoo=:S7DW/7StuM9^/-qmdj'V82W*Gl4H5Ot2o?[a4E,$Fqf;V8Cs.mdn%d`+CWJI$P_2P'cgA1Q24VEbVr6%2s(4.ps/97jb):/>1i'\)Kes6`Oc$;&b-4(B]jL88u5$9_RsDDWuI&ck/,STj8%DiO"2;]2E>.nf6b#An-3F`qn9C]a85t6n#-/C%5r#uU?!:H]oc5=2#g_J]^43cE.`e`b=C$F;m&bXK]O-9gpD]/hCL=h*6J#J+(scP"MU0'2HH!ju&m5.`LNhq=Ji%rOO`.s_lCF9/%2n-VSSUJ_SXb[3ijkP+eeFjt#O8$8JlrhA'6N]8o?bUC$QYsKAle_Hk0-7U7=V=f_rIhsUi&+:Oia1+2;W7D=F'a:/"BZFg5lk$N%mecHqbP'4VM]5ITCCjrC5$*CfmlpI):02D!c0><VQ_2Yt]J%i:^LFK&=;\K/cD(UT6a++B!)_.`pY9PHG9G.ZG.+jUZua:;725sA%Vs<;1b]!.i5Pe15]'D@pl/`j@'k2D%6D96b/_U"G4jr`G<boD.[:&'lm).n5V-MXN>d1\C!ZlaAagH31kNk?l!gJ0P%WrA-n,T11%lXY9f_#[?CJ+&]6q_h&J;lFq-m,P2JWt-\mho]*qZdKd(WGg@6j[0jTb2V.Hc4>WCfZ'#uB2RCXYh#J,9StG<T"Ojn_OqD6S1j\-%Y]c@2$+[2'j&S\>BRnZCGBrFt[B%oB-ph`7Iq[p_NR##l'`Pbo5$C1V<puMT[%s8=(NPLU%JNE]d(\-Q/%=9il5(7Ds/;qgl"gpW%>Pf3Tjkb=F[f6LdR9SLqHFWj"38"#rI!:J]jd"lg]mGjLJ+k+t8Amh^&\p;,m.K^6m#GS5Q%Sa`fCp)3J7"X4iR&,g@6WKO210Zc%`\(iCNdS(>g*f*@A+8GCpP-*$[$IZ/574UFUMoKqT(Y?;g-!f8Sih8hn,m8NY9)<a/?d3H<hY`f)ioEOOa^dlG^m#j$TEB[gk]<(%h1)^%XruRZHRlMcHVIW8mR)'VVa$V*NdOm,-*?8O(ER]o%$s6Ap>_Y5F,9MCf#mNUeg85'Lm6VSMN<`TEV5%(`r@3V4c$TA8u8p/%&FmHMIW`=$;DUpk_2BH_0GE(C!BRG.,$EaIm4GIA?VVZML4jW]1:Vb"$^\0.0c]h@`!`)4X-RtUW`B)TgFr$4i*##aiUg(A2J(n6%\(=[<3+%Rs?`r7G2m7uUY*@*'f%3s:]S3"7GdCf2Ma&\!jZf>fcTU^WFrT:h2SrjRbO=&/&)Z7s^3nme!D2.[POFGcWTk26cGs>m%E6n[!_NWu9kMKTO*.4pd:ObK1LFhZ:O4%dB,%WL;:9e7(*8>"<a*KM?fX\K\A1b;sUpCI`PqRi!YM*==khQ-JAE4TXC1VnJ/jJ(3%2jVD]`qthc>JQSS?J"`bjjdGf8M#;e1-!8%+873C>&#YW]B@g`oukR=j2Xdt_"bALEil+#?>SAT*_YD)g.h-gqS^G0I'VLN&A3H4%!!,=.K3<OW87"I#mCs,(2=7-E[I7>(mcHg0A;N/BFoW#PA+aln._]oRW/2.lo(Q5[Mi[.a/$"RM?KQ=fi[4ADY<EZs%8l!O+3Y]B%hlT7"Q*4ThqXQXahk#3\9%\tl]t"U?U%W2sI*hk!I(]H,^9erhlg%p8T=tJ]Zh.Z/ni-U9lVHE7L"Rr(VOgZ)cM(UjfO&?r=8[h[%If&*AHI1AnZZ*Vsr<E3!G3M2HoA,Jn9-;$7]R/Qf);MEF>s-6r(OM5*k5?ATbKlbFDYsL_X&Y9%0CJ#NPEhp)ZR<^Foac6T6&YW6%ZlXTiF(>N;=j35&2hf_gl;DW.;)fD5q3M!Ao:=<^Qh`>Eo5V$P:c;/Uf9W+jq5:]N[(l$C]*S7BNr9PWLZ_Ye=K;eNa,$`FFCZe&%F'2g&J,?sICH];;;u64GMiFb+\bP18Z"6T]hVUQq]!D/.q6%L1rp:<!V,iaF,)D\p(GDj'%.bOW!2%M.]t\sX98\?sk[2!dE++0A%+Tf>]=9L50n#]Z_5)7G?hWrsVhQD@>)k@sj@:mij.\H[.gHVh4EK:(n1qlQ5`nPPjYN^RJ02n\0hC%^n*I\.K?;!HZa*`pAcpQDG%jd(3:`SYp3>.o(0kk27sr>ll"6h+dS/;(-Y2XVk$_D!Z^1c:Vp&'$p0m+B;a>X"UV%W*"Tpe7#42]BE>f^*P;ICFRb5AJr*7_deo%e8iYm^K8^a=202Hq7c->I,-[.c?NVQh1RR3jI=TnS`s0%LbcgW1UcJ_(D!3D7ro4)fhu%V3I8JNs8:o?7m(aR]$J$ip[AdAM8rEO%]1Cdr(4fiJ09b9SKV%)$kN%Wge*IGXHoPbMn@e5Xs."EmJFsWP4n*/mq-Hhrb'2SMZaT14Q96[57tJ`<kA81iIXM`7:0-"JPh?+?%O9PVFR3af7HD*\[f?+HqHl`IpB35.5B8FK`5U7XD!^)UEE&6*W=Q%g4,It6QON=_TL'0D1eI#^nDJ*1^bL6u,*mV3hO<AET1;pGF%DAUrf-egY4*t^'p*?NQ"/XWC_TEELdL_omg6/9P)1'MD/=B7ts!*Oi6cjLFpB._`QH&A\W90e<n\hoqu3ft3j.'e8fOM]A%LrQ$%%@l#(eMpld!l5hSh(a(qr@"B%9QBMc+)i+$j[Vsh!JP3F=J,j7Kc+GUs!+C=WKS8E!4eLp@+$9q_)Z]C1`X)^=V\s&oT7d7&5`*Cp%1*_QT(Vlhsk!5=cLg%SWq&rTKL:4rI,+'AXD!(mT/=pGVL4g\f7YH"-:`S3nC3a.:og$)"ida-9_!sRW!1kE_\R+7:Aq;I@_Lki3%,]Z7i#>>+_#ZjDbKSuAA7c"0iF0'nK8WsQSD$]&#b5`16\d;c"((V1cclf)-hZJ/p5n5-UXReU93'_j=,_4nZ!=f;Vcj4OO6m3,W%#I/5R5nMXj*.e1T(rp35##O7R/rKm-d^QPLFmf,LZ3]uf-Qie_bO%QtKIphn(N&%1]ad/.M\Wc*n9k4Q7i&RS:^EHhDM\5a62!WR%1QC`L,)GOmQV$KF9<fLBF9:T&KU*>Q;'brQg(o\QXDt)(3"Z]'BnG[qR0P:m>(g!K6/leGGheMM0U"h-W6rtT+NX(>Ss(fQ"b?&n%B.4PNgsD>RC`sWB4<d$)&A)f+?,8Ag4bk2@a-OP3?3jS3!H_mFHEKb!+,3/s-OVYf9b<E7L_^5D+VPGWAdT@;Mh#Z.#]4+^T+,)L%dfpK?JQ)i&dYIrUA6f3L"S-+#TU6lO-5[BMJd(2HDa@qk"K!6Ur%-_`Z0\P6=gm`H5WNhJ1C0)jDINZ5!7EBELD^JQ76\ebS@fSf%XI4>.VGNUFfGj+;)eOL+6j[9YW]poEWStDjJ:[.RksK),8?-!k"<_n&+VYEMatpV;K%bN),Vfrq3<<`Q7kiku'F/(joOX^SBh"lr%7)Qs%AoRef(^:`e()_X)/>,V>>gruiE#'u?5Cg:&l+[j-J6;Rd:G'Roe:#@JU_pGB!t7%SlN?tbQ;FD7!-*CQ[77,2p_C)T>5\H\%K]loU,mA3$KRd<pe#J@/5`SO>m/RD9gG)A'\gQuOEgCN$!9STj.Vr>ii^]T</J-2hP0K5VEm[KfE"H5/>d!BSL:m\F'=*COXWkQr%cJ'4R3K\E89SkO.kTMNb8GgP!(h'RTCX.[g-*h8q%c9V^H.eRk`Q-BQ)/-4(ZP8Os>mDo565NUhe,BM"&E7*&$UQ?=OY@c?Mj3^%%+_,GFoL8/r*Y0A->A1d-m'Rj@qF*np/ehus@fM=eF0*aX_>s*H6$>$WeGup=>`*Rb+;UWET&K;BiX;AK;kX634'mG'L'f"F-Al'h%GT:5o%LbYo*/>`j(WJs+>_*2`kg8=V#%Jk7<M9s/5."]a;S`qX1SE]+#_g^f7CEW<37("&^jo;f@k]O^5;49><**/"Lm6p\R'/aU%dBOcYJ/P$m+TfSP8&u8da,r!g#s.(eP%.4ZL2@=MLe%R+H>FY^\.oHUk]::VYq83b5uF/0JC.mrJK78+2OcE_FM3VF98Cm+m2?!a%Ln>$DAPA*q-d!9GHcR`oU3g`I3=?B)3uV`>BZ5M=#ZF:ubWH"H+p:(u^0n7V-tNAjDSUo<&__7E%'&D]X6KHp1YCW%?s+aR5]lQb%\6=Z,"8Za]_ePi(@&lCcGD._I$dT=,!PsXqXuRjd,&TM](ghf'Z^p1B"R(m5-!d#UU#Z@>@C@k'b)jE34$aipn-1&-k8<P1878_?%+Z>&jL*-IIL]ZHF(PDqTrF:rkL`\Wp6LYOu416<(!:cR-0LQa#Y&KnaTE>T(7)r+/J-]6/L<<V+!I`t4<\+Ub6o(Rf%j1r?X.c7'%fF:K`#t;;<LPKbTW4Rc$"L__O/Eehp&pD.oB4Xa%`l>uLp.c/9#06jfb75.saoWUFcpep0&HT"^>+RQq,(el&F<&a\MTBAoa2Se*%"&dO,m4/7>-ur$,/0\<#:7>pNpd(j\3<EGMFA7s[0VG,?*<SVZj\X$D!+g`TTjtYNKRs/CZm.nn(!3&g=c(5:0\Q)3#_K#!E-ic3%8[LgX>pDZU$GU'MM'1b]IdCPfS,nfJg'],JE8?2N7Msd&?[Hl,@^mla-EiIAQ['4a"pb;P)A.W.+iX+j,K`9-lQee/"G%8u3aNCA%#VAPQ18[>CKHe,Jq&g*_(not7KNOON*JI<6"Bp%J:h64f0K8!7'TO=^Ea?dp$ll2n:(H:!NlD_j7gBb-+iF[5&MOWhBnd>-`F1%/%JhU`q9#2i,=IN8.O<VV_I>5hI'k*[SZJh\=QDj%o7KAC/-jnT_atT7[nn^37'MRQXBUpp:`d)$&(3ud8JKPRQ':OXi@3USf+CBep%S\do,6kEd+XqLo)GlVG&E^Bj5]U)'19m%,BW-E2h!W`GC/GFGl!J[)LGKt74k4K]Q`p&RSdqP$4/n8EnE`?ro#'1149MNi>-$+Bh%3p"h4Lp<=JY3q)P)J"ek:D,jRo1AZN3aL8e<%4q]Zqc"V32lIOMi:9%[:&5e>Do+Ga0g_D_QLj[-hUZo<U-d\6'V\^f#0EKX]haO%T[cgQ,IEX!P(cqJ<S5[`Y)4=T.-M"p2BAfXU<SUr[DXso(M'nHP!p=,b>_b;><H3id<8C;LpZPKFX1g4j'kr'KiLE2gM'ZpMN,0L%Ch\g2b$WjQW"N8"3clB:q\N7Kdlp=Rj0YT076Bn^A7\P`4B;=.ISlF;A*9iVLt]VD;PWs&\fdtX[45BqGHOQ-g?Io)W"'9r12.^l%`21sCa=mt(E@;HdA`I_U0&<Op`i/@GJPTMRNe=+::`P6e7QEI=[,Rg$*/qjjkr<5&ea#2tMbDiFlkc#)is=$\QH*uU>Z-Vmc+**]%8#/Uo5)rk-&q1hT`b#-/!]Dq=FI]G@%!4&&[M<nsXZ%>D<3CBmFQBTJ0m%fH$YPt7"Jupaq1>kqU9Y-6`PT.kAKFA[#?1:T3Pi'@%NM'$TO:c/5$:_%J"T]%dA2`LY,Ns'h8=3'bPut#g3$I>S9+Rt!1nGC4H?aA,0R#WlAVsH9EGXJp#s9'6ad!U5=6*P9/<N>\OrE%8%#U+PR=P3Pe;Df*1p3:>G,IhFGqf:MT+*+L$NdUO&63N=MOU**>,PXlt9,inmVF0q>&-QSmc'\aPai+b9\"uOb\J_c;AU/jG44HC=%Q%h%&jT^M#"C1L./B=TEM!N1Q_[%dLW)K#*-JoFuQjn(E8KDnX62N)p`3KdX",'c)m(DL(clDU?9Ggt"dNHmBWO-,3(kJ7TR&XUJ%.+]4YDe*F5)2Lc>&#ccX!j1<a=g<@jgJqnoYaNb`&FnSoD%MY(D6bK*$IGpo6i`81,fCe"c,b_SiX_.d`1%_T":u"eN#\FS<"gf+%7`%g8*3A)'dR=bJ0:#sNg69De9#.jMK]#iq,5%C4\R<g!%l7NPB:3cJN%5GlY1M2L`.b/g6q(a=JZ32&1G<\]7lU^n&0eb`(;lNC%Qn2[PR.Z][$:?q[kC@b7@Ncpn@]_L'1`(uq!\KD%(b$>7O[YXu"lNL_?&j0:kT^)63GuhDi_hHEB!`1Z:13mpW_p;O#c4Q+66[i^%l&8MDJ2ef/Z"dc#%nlkAkDTh"/)=3A,@'kkJZma`jTpYqA4;l2N\qZ32Es_b-lrV;baVQS4Gg"B$CR#KR)4Xo$HQKY7[-YKYZSEK%@2Pq..$GAq^*tqUWec;XgiILkdYP`,*sfQW-3m_7YLcJ\PN><'1`6,bG(P/KM?;D[<5p'#EEn,0#RN'&1&8e^NpUVb;Q/Wf#3QR"%P3n_/JM7@!_H;U*i4Em&jU<<Fq[s8]#"Ur(>Y6OO8=jT9;Cs)c5:28Bm#).j!uGDM_&*N,;\5u@A2.0u'a[$UY_pq.CEl(ghS)l+%CB<`F=lWS0NIdDW7#(8:\4Bm/k!0;@CtiJJ7Suo+!laefiZgPSCdTlV')LbY(5>!aXBEFe6EKn5YrGY0KsVIiU23BrKGF>TR#gcb%Um/[T<6UQJ/Et8:_'@\O01ssqk+#b'lkEpo`/Z(>U#B<e9#j+Dk(`G*RV1?DBuVWpVg5KDU6^nnH"o'3*`e2fo"qXoC0.Nk<r$eg%f@&briR`(#<Y6'0BJi["L/p2QLM2rPd>Ct/("'t2Xhu2s!*!nOgB\NY`U)*W:@h`d6^A*]\P/DI>@Cun<si)NLGou<G17#<4Kc@D%n4:'A@2Pqn@tY)g-D;#<%*KXtUE%TL`GJM8?7*c,7Stl&;&JJ+i"JJfbX.=Y_m%Q`m8Qk\Z,XFCl<,B.Rb4!%$-,F6hoFJQE@3KZ%(eVX:KN(`nd`/;+R?-3b5#Xr6\d!4"^hO3nQp>""*l\9uJY(5^MEV#gWoS]16_5/f4B)Ieq6VmrrNnqdK\HW]MP:Zb;i6MQV@cs/%%-[j1$XFtBKY.s(bJdb1(.)I*T`bS0Yoj2#6Nr*I(HIl`a[)+UiOV4<$6kBJ!DXG,V2\S+dcY*!JB/+V(e_1D:eEFtG1BL+C'i*@%>t;%-Gj,eGP'jeOg,"B3@E.F;3OnB@=pJ@/5o;'iK5-#7KTYZ%#t?m?+"V4>0*=8NRU>:"3ES79![>ZX^`3m=q%scjSg#iOcM@-m%Vh[D3-SWS`.$1^=lGu6p!e#)WTFW)==^\>r:ooO'ViA\,5`S>LA/f_Ea=WJjq%Qdp64(@.C`DflnmhnP3ppPb>S0I8$3[d?CVDE<%bn?+Y8V,u4:FJmAB7a-L84%^2kQnHqEesiVcNBaF<oF)d%&kXK*h"nd5S7lb+iq&>:;ltfhBpMNCGk1U!GGuiN$+Va?>MHeW%_Jp%T[c+F([N<PZT3I>_H@JQhEopU%"auR<o@@;N7H(E+;J'@+]]0pL3]Sj!926ZKQn?B34*nn)'E`5i"h%a_K2N!"3<cPk+I*(Z8WR-%e(E0jJtjhDJs:@r^YG$Zois&5!m$?&\POA9McsRq?SFA$g^ujq"UZMlZ&FFn#=o]oPS:TJ]!b>u/Pt1GRT^9VP#3j7&!nmsqB^Ue%Y,%0>pp)'Qc]HKrU6X1=</=&+ULrZJd^c@?n0n>flU`WnAJlGJA:S\EaRq+;d"c:&NTjVERR9_%T$83q#bo!W"Skf'J@MT'LJ:H)%iAaGan43e9/5N7'n$(k6W533T(_%(<_ar))-LF/AM^U>GP.5B`N!B^VR'I,C.oK#jA4mAHnVIk]#1O>\=W#6%dH3QC4OqjjH)&a&%9j1$s)VM'&#dW-`J49gGP%)UbZ5s!kW6*g/1+Q/c9>I:f\[3_pgRO-5,qU9OdWI+[RE0TJM/mtV)DD^<-($AQA5dDK!Yc8XgK_Mt%TKLYUbAo<7_kt*&$aO?m4sDIe82;DV/?5^I>tQXNSclrJ*et_F^`_5V)?mW7cN#Eb3XIX9&JIQ/V3D]aYb)"okXN![[>7Us#[B0O%V&cYu.e0ntii.irR26da4NP>J!a\#XQ!!"#^3k_1Md<F3fdmOQRh(j<=XciN9=0V`oE`e)1(AgZBiF(i1^0%_+0d2PnR14dSIZi>%abU6U715j\JElY7D@"2:d5I,>got>4&C86*QGoERILC(3:fF@rfsp,fNNDT'dRSp7AH@W=9DW!CEarhQ=H@FM"AJocCl\&t']9ab%9;Q#20F;+3f9-B1Yl8,g73Z0^cKNIhM7=52G]3i9'Xs,*g!g`^JfqDj#b?_ni0GDBp:N6B&aCAp"moaQB]GsDDJhIZY)`&AHk'c;%aCr$B!_nHH[*9(p='!*J/p\n\UF6U;%dotd/6jfmJ-6:r?JWHIM-H\]il8H[Y02tNaE`lH[Q86$5hORUH16UY/3[NpTYTa@#6>&4%=LST=o"dr@1D%p>NI_1p,iSnA%W5`F";76[$]ltd*)Ht$<Cd_7"C?V(TU4jOph!BBB8h`-if^F'B*TE534b%"!$FKE?7Q:qjAG;5%j12[ZigZ1MN5BRd"G+t+=`0o-J<:-VZ%u2&+Lc$u==5:q1:R\Ifj*u6maLD%PV`tCitu2gK*62ibaBVIW!6K2@@7cc?d%Cf&k`P0%%PSK?F?g3f>#&FYh^mu-3E:/ol6*=*T[^fq"*Ms)J@5k*Q$*2L_0jt`5m.?`I?gt0Tl_hUl*Oh\0^t4QHo1\1-7M2J$R'S8J]d7J%b*&DrV5ESaW4q=+aHs8%ZQs4d(mW0MgZ8M?\9q(ANF6rt[,'eN4Cp:E*CY_Q:4@"t.7dAl*#W<,:Uro3dWVCIn53ROnUe:>:rt9^%"1ZkppjUXu?mg=-.eYAP2_OjDhM39d'2g!Ng5ZG51lT19iL1gKJi)@X3_'&2W\Bta.!![mh5hVOH,8e#arRhUVHu5k;f3QNE.j^"%m[Qu["Tc+=a&Bf@kciXJ0cjku2LtpfMO$`mJQ22nCIT]Xnib$PA$Druq't7[:`XoA)K?`4&V7VL%\=XA#qhJ]5o'O4$k`eTQoj!D%G]Ur\_t+I4,IBh#$Nkka%jFKrPQO@cjp]4mj:sd+9,r."3IO+(`?Ij_T`JW1M'=U(LEIsDJLrAqm[,JcMOdUdHnSAr_$M@-$0C_l%;jotS0:TNm6;U<&%dO34]#YUAEsj_lUfHs)KTRNf-h:4jMJ9kbYe3LQ*1gP5H[LX6&ediE&@H'J65uhRMX)_76(c?>*[;Q.WH]ec%=AG;]pip^GAQHnK+I!G&JD##E0Os0X81S%VEAE;S%bWi,UlU[=07eoSZ0Nbm8,rrh"V<H:7.Y3K1.C;P<1mME1D4?&!c)V4>c5_^%"`=Hr;PPZG7ZV=h.c2@o(0FI7\[1DF;-O2"JMIb+GRH'nWbd^$F+Do/U\Ms*/*MY\"ELf/Iaej<9<&6t"NW5BJI2WAUqjnIT`Y'i%9b;Qpg,<><h[tmSZW+-D@gY!hdrc*"\h8bp=T?0h0Nb@iN[1*LSqK@dkmeM1#pa#"5dC^<j$VhiT.nd1=b+6s)&2!0Xo_Ukgd$-H%iKJ`mR<MUR/9K!#$hOe35R"I6oLAi4ZA&ROUJ"<uQfCP+=bOc%X\b<DcrTbh&BrFVf_4<mH`DYU')8=44FponPbM$EV]1i;_1Emb%<79!a'+9gl>6iIs#[`nH,S)S=6.3c#K)!ih1JXC0$<3BK(f.qtp,tr14G>4H(7@u%&nGKkX+_!*6LY"0'M6%1_SHmO=PP1<jbZEf%G-H4tV$@Q75Fb6F"qL#$3>k1c*'+pORlU^gG9br^e%4^M0Z_(l<)?6p/8>'Y*YZ3hARD:J4*X#O/Y_A'Z6e/`a>=qF`5Y14\sdk[%Lp/O@-gVS"jOl>+eo2gLY[ZXJCr[CD0TsM$4pu6F;^;WdR;.Y<Unld5)eNWF'g#.5$R?:X.CP'cWt9lIR2!@]5seF>3XoVlDbCVZ%Xp$iI7A^1(`!;V]4V0\)bgaEGB+0!=+=s`8DU6/_/lYQAHc1'd`gYjS&O]-g[BijUC"1fbRs<A(it/X)9c$S=#usnA$93:];K.::%!sW#1#TPY):`r>9%R;jW*2^[FXMYpW1k^8%;MRC@<5FkEP)C*86RZ#r.=>3V.75\KON<_BC+/J$:R\/u2TOe*+P]eJGGm-Fch%Kf%>7(Nf&Lmh^/7KmX,""s*"p$6C$p5QC0e?!$W&P7!X.MPP$tO@C_NR]"(,_-_7<7LQqXS':.uo->Gc!eXOXCXD*A$L1[Ln?HLa&qd%-ICbV*]p-\m5k0c)Gqd/=-Y(>C<n&CS4]HGOiQ'&#;//Y<QZI@'*jTV'%c1A`PK>BZHYK:5d&(]'QlSB5hd*<,+LM6*nkud]>Dc5%N?+pL1(/.WVfXq^;7Tk`l"_K>"0:SiY2kL5rLa2VS=(LS\6&"=6o'iH0`<I,;@+]Nko^))V60q]W.np\)R;TjCf$t=fKs2&.N&`d%p,5.'1P`-78a+Yb`);,P0ba$^6"Z\ujM:U:2N6+1#L>]JbYsr%P9$trZT*I]?f+qB-Ar.3,)[YRcEbqb2k/01j,*uraV+.#\uo;r%/MFX.@FR5@g]sWa7U-0q+D_tJ9/Ks[<C'Ghem8n1AF:AfBQ//acue;?N_9Vp4gX.#GKDjM<m[,*(f/bEinedJaV\%0UZC3Pbpo="%Y&,'Be28q>(K\agWp,,(6![c@,;.&X].D8?Y6Yi/nI2#SEZ^$/(2Xf*76t/d7WLug:^`F`@mk=3SIhkj7R@EX(WhQ2X7ge7n5<iH%(8d$0ohVCj7[[4kN)<>MRUm1=Q2XX#<qo6L22\oBc]5+,b#0m-I39.K@C-MbDbHFWBeVb]'U[S'#dY#c-AfhYf;er9$+1!M.CF9e%p&q/eX[$,NQW8&>:Y*r+'[Rn!>]Vi?W34Cc[T446@uD>Yq$k6D[fa^eUEe6W#-f,oRgXt[d$kTO=,D,N@b7A61^k1s2a0'ig)Z%+%*H%T><g[ueHF"o@T6a.b?*%ORh2j-f4I%ujZ,bGm5d=\JqaH8>a1XFGpR6W@glA_o<?d6C>V/-m-6\PISo:*#5%cJfK1'aX;f6Ij%Z&7B@Mdm[=<CUthA..k);0ZW,ZDH?$j"O)9N9rV4[/sEIj/EknKk,MA0+Qh1VI1D%l-2R?&Cd2.-6DVD`_iShYiP"HdFJo82\&`"%pJ]/!*6Q\^WU1TH\Qd"]UDmlE>?(BV@c`>bSLVj\*F*$RH-g*^?![llI9V:Sg!gaWdkT]:jr?VqWWM#_D1pbtNme<gViJ)]?SGPt%>KAXa;\Qk/9drc/FB`XCa/MhHK-$pXHDB:eS+MG_S6kGcq`"o2]DG('7]-5cQHi'm4t@1WIel`hOWh_7%l>2r:CsfXAXde!+cs]8%-)LIF6_(gS1D)+SNDE:dH*BJ>&a.@6'LjXrHn2(i@h;,jReY[7A27f^FS6rBI,Rb*T+Ne5IXRM-/e$qG-ZSrI+&#OCL;KI#KLHV$%n?bf8e0Q_PkQ<Q>\=q6n(c;kkE_0t2"=b1Z_JuBZ,<"l*3X3\4W5QMll'r,Fb/BH#*5!."+bF!B`&Ehokbq6i`Qjac8j!/)bDIH-%ScmX_afTs_D6dlkGN9B5TKU)fW`B9X6U1WQectXIV?l6<"/.Vf*K#Dfrpn?L]KKB!4F&?S,&\!c$CE48Ca.c7j%:'u1j%j4QAFrU%7$%tcar+Tt&4'0$ag1t5`*NkQ@\EkOd424Sags7Y8an&qX<6,8fq(H6RZ-%3kfn?s5W"Wul#&sA%G>/<2s):HnmoE^FF6m/%UD5J%oX9i#;UXSL4([A0`3[u/C21_7m\#=VNU$=+Jpc@V5S1#'mQ5\kUhZl[ALjDia]b\iPMEO>[<f"2^UKcDWTC206W$8+!-juq,Kn>Z%B-;e:JqLO]dkO>o`_C<5%,>Zaol:9rs1()7;\Y(9.k^gAS<(W6]NL?=G.oOoZjfE=[=gS.,,7@gqjru&FK<!Gg\)nj4ab6XcQb1f%Ei#@B.FCP22mpGsOs!&dWoL=*jp]Cl6At=k5XAU$l53elV02k/PE*-s+%d[Z=n,WDJ8MG?C!1h,8)(ki,,I7%iI[m@nj0Pu%1!ZH%it5U*EN.Cr,1RCN>25@6RQs-Jm'?u;9gqU"$M^D=H!J9V7e&*]bE%`NYm`1Ud(DWbI0N"#"U2Fq=WE4TPdc,35!qhWih6es!q0Dp%kC%^bFTCL6Q=>3Vq3&Ok6Wd5(/;GR--S.W1n;YTR#`=4!<o@iLk+.#f,uJpES"LZM3'BK*qm)7$V$$4i;XSt&O)AG2+L$MS2g?RJ%^]Tp\RUH,B!X8-#%3C:j,t)j_Y(UekOe-M9RHfO67uD:gTKkg^Q2o55bGGb\ZA<,u;F53RdhR,6Y!fPu5Lr*<cc!XoDE8oCV]cKM%+j!G%YTP]%`A+.7;'ltfM'Ku,=-=AQQ8rG*'%s_Z8oXiY[>W>IMg$QSC9QHMOs%EP7*7XoICW5DdpZ^:%h'*!Biq(J+PV,%Sqe?/%!Y4)[Xj5c_FOC60`f?:u&V<<?mAY_#5!PY@`*>JH%"TR+98B.a6AHFp2N.Z$$,K+2kI>P*8OPnRFKdZ[Wp?[[#%2&[b]sF^GOB//%Ei=ADG=rcNLrh%$L186(K6Ie3erV<P<"b"u;OB7N++a1q/OMlFHJ4d"C(a!G>YWfWk@"+IGpB`FTrk`<e6W.N==IbIQ!02J'O.kC%g&_LrQtMirb'"fe[$5.<j4)Lk.Jna#\K<*`'INIXS?D6^,Z!G;<Y$9V5c-%iNY3Nf3LeA49A<U>7`$-D5UB(BZ.[,X&D_H2D*')9%]N^4V5cDr0J=d4C>m9AAQAci[6U;8P=g?j]&>$"G:F98@)@DB0P-M'/BT"05'OmE-dTsb1@Q?tMpZHg.>XS,tM52BY\emLMl)mmf%/5LS<>7-LFI7UQehB1hn_\sah^k.at+u>P#P(r)!Q-,I]'gIYu"LTKH,;Xp;O=SG2OcC>H:qEL`+fa(SJW&P8Ql@?r;?Z%>[_pZI%Nl"U+6suM3)U]V%Z7ooZFUeaq.-8^5GCC`;a;?Wc5q44#P'Cub8_K0J]>'K3#(Z>;aA#ML_:%[(>,+(/PA:U0a#C+pKW`aio'<;Z%\a):SHm;j]jZM.T&dBu(/_Nt'<#J#MpliVfoi]LQO-kMgD,irP1(G6KAUUhDkd'kY2OXt?DSh^W7"!j22Jdhu2Znqrko"/I4Q/Qp%7Xo-q@\A@/UjP'bdN)0cc3b#aKgI1n/G_8ulkV`-7sdKHXrk3OVaO,LiXK,fJ3k]OL=^Q]=3i[n1Yjs_!WqK$Z)T7DZh!aNgfUJ1%^mA0o?99r`^t^Xuh)\`YTcbVtS4Nke;/B/+Q8Kn_Tp%;W1Vu/WcU*+&Wlu">!DOoO4>ROVON8ZYr%p>A_HB<>;i\b#?`6<uT&c4*%9nLZMMN7rQ'J@iSEQ9&Wj%TR^h??48UD&"\@Oe,t$L#\DL+iJK6*)1(lDURiOV((U[ce\P4W8tsN[)ku#(6=0s(C`TPr6*lDS[^I%4-Va8F9h7N]3P/Eg6Q%,r6IUb\q%oX>GLJ>Et!bsYk-%31.`$Z!#@o^i5U"KL:XMKj@t@9F"q[&6u,866i.(69E>l)1b(5`M8o[l%<KmgeZ2TnaedKnQ(pCf54*Vdf(m[S'0s,/JQKo.]`OJHA[=#Nfc4P?;R3?pUMW^rk@6b:aLmN`g#_f;$=q*b0PpJQl)Cb;\aWB`f%OP%bnhL_\FcEit+JIs3NUNj7;?mI6JQFeP2,Z<&DE^>u[/<1l)L<'CN2&l@!/NHY7As=)?!(,9W@APA6M(sfcj"e7cekF3"=[d;n%DcS!)$/\1e(mm--(b>*qaT1`A9Z05=6&"5>;<Xh_[qZ'DRqHW,!T8#o9u`78'UpBeI$\Ko5qCP-;F2M@4/>j?0&m<h(C#pK:+C0f%0mb1-aM3L,Uj*W(Sk?%9c5_Bm#&EI[]7n=!F4JlR$P6s2Rk4g65&9XM[)SicKBG't:8tJh`#LLbhX@"W%2DWk(cs`(YTC'CkD[e=%)=e)LK$I[W"FTnY;7=$EY01+K!CBRfhnPVb%9t8DI_*J>$)j.;/!j"R+C4N[B9KP1)$_PPZADk?iZ<[U5eL(@hj4sWfQG4;HbNGO%c$sMWiih96_OP0,h=C&Qb!Omq\$m9iY(O3IPqVQpFl^6#HPGu7;P+F@VD7dm*PomsT$Y`4UkVL&B3pqD]3R?W,PX/nWrB&Hj>i"2%Tdi+`F6G=93nI$sEVO12X2`>qXrGH;dG=M;%fQ0lL[n^NOLh7-#1kL/WIfb9QN?qsUcS(P.#()0M0Ni!e-Bp8A-t6Cl5K8[_$G(o%R;\4<l`('G\IPj_19<#_'aXXCV]s>f0FkO5%*L)q>pRl24l@uQd6BNG8.Wkteco>GDB=*.aGX-C4eei_\W_fX7=kdsHiWO<`o.0,%a:c.&`=E6(!U+k?o1FH8W%FlR:<j(iD+"A7a[p265l]rhJ:HPQf5i]Z%JR>6'V5m<"5_T!T,LRm+5pb0kYuXVoYknViNm2t*hNld%2u.#EG'JiU?Rd$\%'u2k\dl[j5;$<K&[;&iF(36>>NY^XD(9tk*\8gZOW:qp5s9RH8BLG_nV?WI:='KK)+0k%Z`RZu?2ElmG4nT(%ku\mOqkrE!UY`Eh?RNU\UmU]!dCgYq)(0#K565SsB"3R?5IBNbMG-L%iAKa8rcfS&N<MP<%i)Jp'k9[oR!bA/<6Z20PjP2%*%([S%3,'ka(ic'*PTD4^$%f'<MTGj$A$4FEgT#uZk:k]Ck!oSbF2VZ/TG`Qs\/3#Js/CeI)'B0"%)<s30TM#=2+8`mjEu8aR&'.1Q^`QL%H;$>I&ZWWYI2kEYT"-%T9<M!!K)1GnD='@DA$oY&Q[<:N-?lI52)&8k3F*c5'j^4eRish[4Dc/FY"5fZ[54c`kn;Aa<-]%.I35YT%=+.fM4jZd3<.&n"nrF$5f;QUdYrpR&<D[c4ZWJ=J\AIrd5:`#7qrJo0/#8@YZ`R`K$gJgP)sjCO+0ReBj3CY2^AIX<LIT+&7g#!j%rj\R?5j%`g<$(?_NX$<4`Z+.+2(N'g9(1G[Yh3`WLIQB8#p?k?rP^gLjt"05Ko"A.#DWD$DbU.W(<H_A5DuM.^&;,T`3@:q1,#U'%=ho^/Qe&m;q8(=ZmI9'"c`RQgrn:P,eT1s2Md#i%M4JsG9ZY!B1VRGVYC-qNn>M;m%mX]m2L/sJR#J.Pb3"Rf4?<dGNpHm#CT\<Y%6%&YGU!V'5EgT!62&kN95Q?hjglCVm-AYL)0#q*6\UTYA^&gN[Sn<Ldka0l_iLaI\TA_+eN1\RM;(5X/EJ?mJl8i^P(`1;UijuZl%*W[nKmR^4HL7a\"$HYFYkR$'.kA8*2T&]SQ"3.#TZ,5[/568adr4`;oO.C5sB5?Kp0os_%`B'&oU6)<I/$5NORm&aU'jc<)TbE0/%/>a)^Kr@M[Ou^grX<PkHL98s73W_^*F14#.:F'(C@C5l#P_V'S9\XMGC8JH4@maSmCYG45ep-dYYXQ]JG^il!=4I-b\0nfc=MZ?f%s&dHGW;a'%:ItMj]hdSdZ-f`X!S[*Ag?._<i'5m!a":[sK!oOk%OZCM%RuB9>p_O9a23Zhh8]c;;+9OrEQB87e_Z)/M/E3G>3MUX%[X\3^s7_TSkC8&3#i>g%e:/3\2UicIU9KhaLg6Y'?Z<<47e747BN-,X1j]0*?DJ')9Yek[)\,^i/NMU#!?]9*"qn@q&:?AGmoICQ%neXrg'DS7M9WEASaJrGWj[!SLgC+$;CCXV!O.+bRC]5MQ2ON7s$jW1`kKPmJaqd8<odgBj%<T8s9QjI65&ZH4XBjt8KQ=S/'7kb;%nt*"&n,)^K#>!'7O%Ls!rl%0!Z5Pu/`mUV33Q3-+,M2GAQUDc]N;A-"Btc3Pfeq@HArB48H).+]`@O'mMMp1m?eM0ql54%iqB?r*%ALNb!U04%#5'YG)/@WnJd@qN_hcC.YM6;'sVeB@o;Z33*R(LOWPRZ83^cR/R/_S".Pu=#=FPj/4^=r%2_Ppqbf(3qOcPWa/L&`<c%(=k:g9#RI[Zb\\\g?puup,2k3;CH)JQJr(mN-/Qt-#$YZ[=WF]5Q<<@f$i1oTB%?\&fg1@!H_f]COc`CJtf(:=c-qQDH[f"+qkYQ%Q8AhE]n[56/#uH:.GPHa7EZ=OA0RPHC'P(R!>o:OIYlk^Op)IkO^/!H''D/aPtj%TJ1=BT.9X#Znh2dSli,nFoqZdV+hJE$VcLt@%ah-$&V_eJkFGeSr1c9-Bo74a69?RArP`n;Q4]pVE+jKk]dRkm2+ag-B`SR<>A#6J@JCn=g7UDKl1Q9C,mg9W^e7*BH%>fBS9ag5\%RmdEYc2rnOo=XnJ^82<CM>(BUb=5V?63Ss]@KG2**M,._lYad1/GmUh&Nl2iMmn<Bd:1@6%&gGi]Nmn$N<5I+R?GElg3c[92C7/P%f*%l$M>?K#4$\s@5$s3I/mgdiMWOR/Zf?:Co#.jo?m"k5?:+u`Pd9bcL/WU_]?c@f:1:rt>.BNFQ$KQOVGGHZDZUX[NV@%94UY#S%CK&(7h63B)lEID8E],>Y-'i[<]=>'p2W&kPNh!K:UD(_(;>.+RBSB&+=MaLG6G]2'Ub'N)$>VCC`F9iAVeE(EG4")E_sJQua[rCm%S"?kr$mh/9-.aBiD2)X.mR*#)\$TYWZfWO>NIa:pCDiPWOcj@PcQ65?A(IeoeV>q.#FfWHQ7Na+N="MB.`D2;8^Tnc_aauUe#KEW%+.c"MT$DrRD.JKLA/)n"$=QQ[$jqhE%"QKW@#[H%I,p]cc8Es&+\Tm5ANY&g$k?,NOU"d_8+U>4LBBpN#m!B&$ZhZ=5kpV0Yh\p#%VOrH+_:^K7F4'd1YpLuJ5k/[)D]:&^55!A./l9UK]p4H?4(F-r"_KQ/M[CIIM!@1'CU,[.Krs?NL[+>)HW!li';g'T\TW@he@N].%enWK=fq+A4;KXUhf#VJ?2:H$M/(&7%#[qCubM(g&XMnb&!c,ccFe_-K.LUgE>,t70-TPYHUm[%`]'sO,eR@V<-)MB[l7FIiWLjm2%8JYQ/'[XeXN4?)%1I9!s.)f6[TasnSJ3,1/Pl/uk`3Thge+Kijfs8UrZ`hQQWq(A?^On^OMpc''A0`uTdUZmYG8"0mg2*U15X+fk%ofQ3Y5u_?+5G9ol.Pom0)M^B:A$g.b,+laI(i%mO"ihjjlL'tW.c)"Dmj9G#B9rC/._m)[dZ8#sXHhGA9gZiYaH"^.3bF79Pah,+%!G:YqNF=[OpUY-;+^4EbZ9uS&=T,Ugn!=reV!ZlH>t=H1s"nFB9n@.=3d1k_iCggnek7;"=0=@6JYJN>e-?ch[*E'R@?@q%enKsC%-)Gjq^/]3h@Xe>tOYMi\p3L(R3NgH\Lu2)u;I0<c8R7#b2ZABOmn7,!O.^#Tf%a-RCc`KrQg%ZLU&fmEY)u\u]l^'e!44AsZH:5?%NMKRGUdZG88d%OTZ\s`f*,g*nmgUiWSp5P2GXAm<2ug7q`K.*cDIMcf=8)?1[E%+3n'=Zas)O)9kb3s0=iPW@^=DG]]6H"$(<*#@%\LHBM6`iOP1#>52<,("k&*J9C'@NiL9sUZJ5&^UQVq&7hZ*<YlV7,E>AJJ&BC_W[CPc$i.'ZNX=Zc+T(ccJ>Y3>0W:]1.`8jW2CE%W4+P+Gd#/K6IkC6q'N2`4$Uu*``gZjj=a2qjbd+c574c2H8@"gkXTep1N!tRpn0ju<!)O:I.rmX.D(9(*,EOMlRk_8H,athfq<P)%m,Lu[nKNr9NS)?UWkJ'<U9\;\cQ']i,>?]@o8W2cK<E_`fkofa.<G`'2H!Y[1N1Uo+GCbBXqnA+N!/@5m&O1=3=O@l2t-L*Z`HkZ%HISjZ\]i\mnWHJ$^&Ul&)HDh$0_TGURfD/[rqMQ&^%0iUPm>_3\%MZ3Y35`CIoN1-oaEf09'#i9XBUjj1mm;:OlfX8Eq$>EV4[''%SW%RE%%^,Wl[%]#VH,g_[ZdX)G<K]"h[8Ptg_SG;<;$Q@_CTP0[d"9<b%$Vrs(hj73Burb$VCI$Ccg8I!C`%?j[2s@a-!%f^^h&.%M2R*G_0*EB('bN==egRlRJC0ecu=,]aQkk9oX4*;q7,n<JN;PkFCPuHS$r$+Y<bJlp=YOm[/$uF]l>R)\9;e0LfUTsW<(Lbb*orl%7@aeY?YY9f@(qj96n?#p'MEc4oTgtZW2/&d<-T+*<K-ii>IO[9N0E$h(=/L2^QgO,BE(hA@oPXm6EdHDrJUZ1Y`@<q_.ehnFIH/e%GRW!l#Q="hE?.`;Uc>BuUUp[B?Y:@3F639IjE:&X0D,hNIBISj]A2R&LDf9Y:2,N#ffl;o->:VKTDFhTA'V'Wce2pdD[QWC\iZ23%dQf\`d8.a*\nWm>>:hD_9t,,[.dML%5Y+O!H+se7Z<cX6)cSAINnl+iMfmg[Ci,]mjW5V,&VjFtYk0[C+R3qfKLs6.U_t+sW#@bb%fZ5g%+e%*]+q.=H&;66/:!T;MlkN[2R'^gH_Y>FF72Y>GP#2GNP:91>B)[K?(a_1pV7oWEf$26X1>j<jbs#&Cq@F"A3W9"9I[K9g%)Bd1B\*u"Pb'goQI6k4B4K`EWEQ>6DMbc\uO7Ddh:nlfUq!sNN'\eSIEpsn;*cA@_/M+lTNiP';n#e_8gNt//)WR!ILK!n+8Fcq`%D2rOGT+QAu`DGZ#6D5.YVslsF$N"]qQh",KeF:Vi\(51M#r@:mb=_In3UIk</+psE73he=m#oQBD@Ga_E=\BUm<$r:*\H!7dHT_]%ah^3`;)]'%0\eG!+i"*VJu\Hh^^BF_4MJTA9^4Td.M"E1G4*E(>Y:JWlqhq:*__T2,<hGU'Egf=#g175\ri9ojD5>NK1F.%]N)HN%g)!iXe-FksZo'_u:H/o[X]&8>TLJY?a9I_-<C1W*0jj-C@t8t+\1fBXH3eu0YUnpC#9ZIV$`"t_h!s<3aE4B$;MjmmELHZUZ]TPV%c<R&_Lf0Sl+6b%_WdsO=pDVSp7k+e+<uHArU_'%"EiT_FL^ET$%,;HPcO9T#-UF@[!cKEC8\1,QTST79kR`$/(F2UjN=t313IE/#%a*n/pILc[SEr=+T"]S;</mNHW<1uG8X`_V/s-Xmm0,/1cA2;Ab/<h?<K2Q^p($u)<kEfM9/4r0+"ASsaI9Gj;^[IF[rpiJL+A1bg%Aul3(n(3%";JF8:>O.:@3Ajs$_GpIP3(U>,s7'1V3OE.eOUrs^=]9fWkG.ja)f&FD\t8as?I4^G7a"GH>AFc8^"c;WAW2o58i[ti%ASZTfG8Bm.3'Y'-'Dk3qO_oROL?'>K/b'k>%8p*5;-Z!g+G&%&CZ$5uR9e2>8%:IF.hTiCJbEXVMQiVN7p;gY.q-.5Dn!Zh8lu:_%C!YF2$@:0A=+1TG6t%!5'#kWkb(Zl.<Aj;\ROiG1Y*tA\&_FF#chhT&h.YjI<%>0Rd.DLH0LWOn^rY9^YqkO4q`Q<#/T'O>3<jop%QPkO^c@(*H-If5EI4XMq`Xh+!,*S_`f=/fd)VC#aJjB^ZIMNRFY1%1&0btbV8M/,(Hfhf*-X"*)G&e13rq2GjF\+bYC`joP/(/]H%IjEIIF3eu721[K9o?_G]U3BVHr=%FP,`mAR:H0GaZ9.mEXI14=?XG"a['.k=3/%(<B^pt'BVQWi")/hrOaU@hkSbiVT*ZRriE&V"%q;`t)^!D(LSkS.U4<g?+B`p>el`O@mJ!&K)]I3HGo)f>EH$Ajl>Een)_S!bWUen1[>@7r^c?tQD9[OnAKOE.n2rs:B%Z9.>[7G/O%>+uVu>SisKY.HikkG^,.hX7sZN8aY9J!1h)pfC)^GPK-r:L<_n%L_&PBjT\=9MiaC5CG3*%Ia^=jBLp$1:e`D[9YO@b.`tpQEQQ8%?kSFm!afp86`,:)HMi,r0Z&%Hit\BJ3<b5@WtpS`o"@+<;67*.(<[;@YWVA3qgD6>q'.##PHE99"o>L=f\Z"XSVCll!PB[a-^W'#%l+3)1h"A=d1r4iek*m0<<ArEYDY-Jka5&Mae@AGhpUAQKo5+>KBm\VG4@;;mfB8-]93t`n%nCggQQ@`B_))Y?D<"'u6."56JpI3n%PHp(?cL-Z0'cjg-!3H/A?:4EC5&Pp&!k0W^!@U9<o)J3e9#DTE#c],*#*3DQ#.!=hk2h)f_a&095W:'da0rh(V9<\-3?_bQ%GhKg%[;k"l(GL$,`u:bPf6hZW\H!aG_a!OA6U#6,8RGAF)9e$R0luq>4d?J5na;q-'YVj9+k]1R"1c$2U*;Wn>h>Bu_RZ(_nu#qDa*YVM%pm[EF(K5s=DhGrCG>8Pt3$9(Xa<W-aQppO+5eft+@F@XuV>1"RKo=I`-<t`k,UFCYei.6;dbi_KpS!KOfj`TMU[r<N<Ju%>AqroO%mRJAa/O+jOhc26sT]6se,X/\mJG*nkqlLq(CuC<!Q*<Xp^X\Ho%#^,VR5Dnmo%sE)U(*/*@p2^CfYUUqgL]4@K3K^foM>Z%*<%,)%*]H]*(Bod)<\QQ?J27MDH(c?f&?K\>Mj*MkrQ!MKro`foF@+r!-.OP[eC8hMhj)2Q7p-lqj,Hc<GlhjVNPukaC2p\"Ki>f?]:YXN%#,bIfO;Ab5bM3H7M3q&kBiL7UjLBqsb"<o=^hMRS>>$9K&O`C#dDTo&P'Auf/RZg(9D^WAInk+)9-E&RHXe6H`)"$=Z4cpLj?-j4%K<^X@8)tZViSQ5=fm"<P=)-oL@(S36i-_,i[u:4=J3*YIcRRMZA8"iqO@H_WX7c:E9`/59MI[5>05XD+\>t`Z^5(UF+tr'Tk^KiX%$@4X5M,mS2r;'nZ=`.KM59VPYSj0O*EZGZ7"-c!4D$K"7rjYB;BsHhbpj/n;3"HD5cf^icoI!%pL/NiSicrc7`j`_o5GIb(k;Hre%hoGcCWs:+-&KAG2%)Q9D-%i"To\_k/&Nt(-P&V?%<\_taJ^4J\J\8gF:Cop':(18H0JGtCmer=D%3F2JdH=PC39PkE/H*ger;#73%(un:[0OntJ;u`R&\MOaT%3:ZaA1^-?CXTDK$N^=L7YYBP%VF9$GBX,qG8N.;QJCD[ALQoOTr>ZPk^/eG2S!"#,D_ZI?W3:7QFoVX%:s#!,&PAY<?pJ(%GO!<`hgh6h[+sh9KqFS`In&'+F6FdIL8,)2<$>u:`1f=V7_DP\agNl`n5=fnCn_Md.FMeE+"&6%L>h>#D;.MI%)e$6be;5cF2jp9+[iB.oXe4]T-*(GKjERR*8Yll8<'<r#NJM!V0&E\oej[4GB<3ij5*1.7\)uaqPZI>?K(e#K/bMQjZXcSsWfPf.%@UAgs,C*QIdGG_1ku<L\3G%(D(>5!8&='PY/L6L'$"QW^7NRKWL_]Yn;p_(IC8?(D+BW6B+&rOu(^\[`qC-kCCJsd.=f`n9]TU+W%'P`'jF>"M8O`%-#`,^P<RK@\BNk`T!p%?M^I^P71?XDKPbX`FC^Kg03SZ>LVMUq?Lf8AjP=YnEQh&ssH0Ek=\(a1$G?9Cl-RL96`%RGJ_k=E$<3r=nbtR'32=E?H)h1((?9*8+gB9V$a5e?*XV*Y5q'WbDT!d5'd*\Mb&p-[&bRh:P\Y"o4^56cMK"*c"1L_N/XA!"_cX%H+/VR^;%o\CiK:+W3-ZJ/HTRRi_=V9bACAq(,DLC&=h2Vc>EAWk]SXMIjBqa0?W@Z]3)F\4tSmdNa#VF3G>Uc?_eu:Wg'(]a]^.9%WnZ)l_//KW\BU6pp26<G2/)\6J?-,rUX6Cn&CdhV-J3LoOSS:t[TW7!JHH9@7@@?1P^qGK[>7N6p\X[F+uo:<UF:blm3elb9@MW)%Fn19cfBLU].k;C/T$Al%dh=MAjA2=K)n\TDVNn]YhIDQ4`P5'+?a>_8Y=ktDlc:!:?C@3p.a1!OG9Dj.K'uME4'"$NjCcor.1i5u%OA6$8qR24+a%tC0/;+o.)b*0Q<87ojGSDI3kWP56W!@;"ZsjSkkbon5MEQRF`K+Sa"W,n9+RpQT9agD$Z.so#P@?V>`CM)mg=n5j%DG%_^>m1j=\#9sjW0D2K[;m]^<:/-&U$2=97kI#,VX;Q1=<:S1UUu[tUZIYR3:P#:A0Fr05/j".W\\l&,etD`L9]huY[BtR/C[ps%,A&1kLZoZ^FOC%P1O)G'K9L7OL>^qY)454j'_NSD31rIE:J:B_m+YecE&:=,Ps4.6l>YVHcdi=Lc6PXW1G"F*$p."a_`k:"\L;Nm%Ht8,9FsJNa#O87lQ=PXBQKLFE9n)YQH/")+X@_iQMC[G9cD7--D)3DTs(^bgR^YdW/;Nt3IA%sHs)(Qt58Y:@V&PF*[UU[.I]"Hb%rr=;d%CBiQofD(QGtg&F/k./qNq%ch8KuLb$p:SaBQ*`R0G!>78@)AB!=N*Q2o;kk&s28JY<TZUos;</[e]"<?_Gi7Wb?"1!:JmE%oSjHK8_JhK"_;uq]oj4\ODhtT8fO1_,Pj7@7Crd>iE;l&7Y#50`i.)g'#?hrG7T=+?19bXCu#`7<)6GXjcf^=h9<>:-F^s)Ws'n<%7o_j@+p:L%Q#T\f&iEbFWFq-8?e&=RJ6UBN9<k.V/UkRK[%aG+5sjtJXE<EQ++;mkltp@%^`Y0spD_#.Qhd%1C)8[l@AKdf&V="L%$^t3=d4,.9mW-Va0Xc(+l#)3+1R1.1F]CQ^DcV,MWbNjAM&#1DDch!b[U`lHVN#[5kD>2L[HqZA,mF.b%&,f(irD.i3"G"DFOTrg%VB7N"=L[3*r(GSs4IKV<f-KL=AFj!LFPA]@.[3PLF.BC,67F!(D%nG(KIUgrZB=9B-+Yl`'(Z-/A!nu+*L9sHg9Wl'@j^:1Sc"ip%.^N1Q=",^g4NnN:qS>TYJfGW$UIZE*@_Es<R3cCp4j2cacGcc5KZ7)@[*tDmG2(>ghjgc'b-[-s&h'V<oP/G^RF;43L[+T6[)dP;%_[.oF=]M&m(=NhWK$%5a>G`&D$FcR'0ac7s<2[i8L6'L5:NMCmVbc!b1^R^gUgh^kNm(3.'c[?tHWba1B,D=F;ZY1r&d>gr>:&>J%"sG<bVGg.<p.l`6,Ykre>CUCOoDR/%MZG6`p1kH'Btm'3#"tL?=RqKb0,_pr&nc7(a]L[Mo6P^XFgbD8H+pZqCFUpue#hZPfe(Tp%W\I23iTk6!M=Y=85!Cig5pf5)]b?lcUa$8NX#-0[pDK0bMj`X,aoU"]/-<nDnTHVSmDq.[7ci;hKirm`T5_HtT31Nl86g&D<D_Mh%`_9abD]Htk(Ns/[rCJRin@ID?,*ceo#;YnpRF;mgi[fkNXd3!TBTB+4e2mE+?$nG8^+2GB.'AO7KY$r`@0RLbl]WE,[*WVnPU_dI%%>?1#].KmZQ@8"W8j1t#`iGV)B(HHsO2n!M8kU,mcFUca/GfodaW8YP;ij(=P?R=CWZCdfMT,q"HSMS6@uZ3N4+I^tFPh@JoJ)*$%]p%a-Kt)meBWA`U<2_?,.r0lpp[IaJ)_MhFkO&oWn5YAeGM0&I$\_j-l$(+R>F8T?n(?_Imb).0L$;CKb&N=lUU$@m+0q[s]%oL]%F]?t%G.(4C`*9gN2=m=+l)nTifrlZqs%&f.^4(O1!:n.QKGd@<'9+Apb_uc'N!9qG:MG(CSI/DQmB`5@bm-&rE3E"5'OD(t<\PIe%fsP\LW2WBnm6c0>)bLhn&<(&G"`>mY.J&o@pk8'Oe.-RW/2C!m8)HlVUGI2BqM0@;]ZYiEA24KDJV?DW#+&$Q;&@n4#+'BESCW+Y%_SL"rC+JOhM6rS`"21V2KSo2^F$4nmq?fIhQ[4rlVV#ao/9BBifRjF45U6^e)`%,Y5b+>N\WC>PVQ0+i)[cji<?f*]VN[)OFbW-D%hV!ARl_FLQ]*')5Z'bPOfB)5pJrHdfO$C,TruC\6T98#Ef9^9`fp4=8/j)sX&LMW?2\l$TS,;<l@X[\`LWnrCZ+jIm6Lp$HjR):#%5#X!)ICn0Or7>\m1Cgdcf(O:@'A9V5mG&q.Gi0i5!/UNLH+[rZ"`.a5`dniRh7?D$LBDe:h:QT9`[;n1EhENT8?hOE\C$>D`EDn$%76\TA9>AjfABa8M%YuE$rTF^0YYk1?5rO\lQ[AlsBH:LIj8jeHW'BFWJKcq1Qu=s@[)dU/@4/KbNqXh\7A>M+K!7eIgV,pYTQ8-6%"c8oWXLs*?:eM+sHgimj)oMiEac+mfo3W#1p\tWdOU9tJs'R$E>G6cW;*'oU5`);l.08'4Yoti![@p*f'IHm.mt8sl869'NCK`\F%docba3b[a7USaf3`u&*9OV_W41"bS/E\FM;.4>%#(T+goB)Z-RniKhnnLl-*T&.e\/JF3S;;Yfq;)^eJQ6.$L1g*%Lkd?!i[Y<.r%J\I7c[Rdn>F+f[Bd442A'<FhB*W-qc(aGcdeaK@LL'PuDRT\_[lE@Qo/&4<J^Zg2`Z7Q!SR0'4G=G*%E)%`:<X/M-q5W6*=CR\=d%GK2X52:V=7"9EiiZ$+)XZJK%/HAZACEb!k<67s,Mf^4R=i1#fHi!S9_0:&[S-c!X==4]M<oXBr,[So9H,Vlt+EGObGjhSS[J2KKm%njB#4'intLlc0b!Jn^d/:L.tE6p5idbOSa:[SB6Xn%rs6#mr%>\!2_k"n9=Ll1ip<o1^qZ5/BMX->r_$'/%5o+@5-)<!;"nqi%&l%,=tc=^dW@N"P^s3_aJ*b.<hR$q>CY37l6G=1GD-*9Tqo,dk<8-JX"jFE6mEn6<Fj:FG.#QEhc9+gr_PW`C'M(WCdQj,(M6<,e#39%E*(/!7rpr#_JFrG3('6Y,O#$?CDgsTUKnu^Opr:F4uaPr2ckL&H"jlPiIUoKp9+i>r+PN<FP@0cj>fEDK.oW5j`+^jn0QK7p-pNg%JbOWPR;b4>1@\bD9[]s>Ko7_NK19IGVsm"*;YM<8M2C$\a,Ru'`ble%X+a?\o8VqM-)L)&JA+;-@fm;[Ar_]O_N"ZQ.s^&=QkN-7%[B#!K6S$X>3`rf\blm)2U.tZ3C]=\7`osE'5XOMT(3<%!pc2/s'!hb_%\sN<K7h'[e3oN;=H<K:Imc\SK7VJ-(d[5B^-TF!M%">Z%/r:E/+=Lo'bQn<T`781&#`'Z4$RX3_4/ib0$"rabaQR]p"#>$64gC,DU=JMG!=.e3oD@_8GR9PQAt4i7R+ebQ#KHlu;fZcCMos!:%]O0;tJ\@aQ;6'`)&b3t6:5ZQXOM&fcQh>rq+T/=e(]8sY]NN8a;F/h,H@o@WeTWq!L\k^!LB.Jo6]W_6co6IZ^7<kmPR(qiR]t'"%JE,:G.#3WmXa6()2dYtpknqDJ"=20b/<C)f'U;-iU]_F[e&EN'OiQot7f=6[3"?E<p$3.A#VGU?$!Z?scblqke4kNp`=]Me`D>'g%)A!q*1/qj;O/o-dbEtGKN4]=8:Z-XhkgTuQN`Es#g`dEt22;WT]T9ul,pN=l-2ZVKJKBuN.#)In8kk_r^/:qi=C"(?Q^`)nK.-s.%L/(RL`;fL<Aa!OOV_dRjW+DdHFG"Ra]]I3JI1SG9\t&E(Bj-V0!lbVX:V7G!Sq7,c(`sDji8M/+W_Ye&:_Ed:GNPQ*GetBa+S"KK%I*`8*;N:HB3>b"L;/l-XmRR^dd1+@$&'A&dISY:O(W;@h/+`!3"HX"-?dSpsbSbh7&V[klD#K#-aJ%.;-n7&>rDNKQ#[SWbR`lUM%J-4Zm:/:^1HA-6IF9#+4KK\n%j<L0]s3b%>$G,/TFRod^E04a:<Y"$6f$JuI(_>CrB$?c)&1FK_j$s\5U)TNgQr:c7pS"Use$kC_%-'1[LGp-;)FSN*irIMN;[EojR:`+?a8J`GX$sm!U(So&63m%W<-#b06q#]_egp!+E5^;O@c@G^G).^pM$Y`\&$TuR^^&!F9J_Gnd%;\od@)!rgi<X$V12kC1n*.mWG]`^QM=eGZpYq\-9W[e_H!1tC!?hn(?aHcjQV05.E^`*PU+1R>$:K]>INrW#*FqXEP++-^(F:`0q%G1V]s-8m6q59?UTZ00Pp7Xk6o33'5RZd[Z_^]W$H;'V/<niC?H&B2WNe)rnc0,&Z0PLR'K=tm/L@K7<,IUc=pT=-hR>1bVXFul=#%pbZ[DA6D)E2GV:tDQGqKagO-#4Ig%jO^8=C4L:B&KM`#XB.sYRI7*Lr7JTfb5,/4[:Zr8!,;k1:5$[4iI^ak-7+,7k#n@Lh=+8*T%(e;BCVX1XP5hIEN*aZNh')^D$L]BdYn."-XA'XiR54%\hr,RNX2Sgc?8B+8PBf8?F%&\LOi4fG!s4_!&ZEW;I#O!qKW\Au"1$\QH%P1P:3&#;[gW%V.?UpBsJel^mi\qdD@UOf`'eQ%JmQl;\V-/%@Gpl$*3duId9r=U14gq%A9rIAS4+q]1k5ub.2Mca%]0-PA"Vtp5Z%fF>#aY=//'^amH.0Sm,?<6@7EOH#RM!20L:irfjflYn\un!_39MjZ3)=]P-?8MCT`SID`Ii%c]'_SlVc[RHgFj"Jde6CMf/0Hg;L%YmmoZAmm;"F(%=<U_fe;e#*KC&[9sHEPeb"Peh=l;Ccl^)I+d$6mP&09pL"^]bf@KR5KWZ$-[-6\f%NP*OZXM1873QLnk7F54WIJ%D9725;'fE`!_/Rer!"*L<K3RJ8epp?beN*i:q"4IA<mJ\JNGr1]P;WEC%Hoe4W-LRVH@<5)([Zia@I\2#K;`sg/>p5iC.LI523dI%_rq^%["q;6WntYr*.P?p#EFs:o4=Yg%Y<aC*+AHEi?'96Gj1QKV]m`cnD5ltCgI<)#<;CD/r(@/\60&9c**DEkA>c969e0iK#F-(%Yg$XQMq-7G9V/RmSr>Wp</9M.d"U-\Y&,cspg/'=7PX/Z+<'[?2CN*QUf(p3idO;+#(!Ie00!#9U@+S00r2n=/&FG(!I=l:)Es==%=7K(A(\pQ7T4M-g?m$H2[Og'AN;#V;am2%0,rHr?6cKCreip,LE$@J6lQK`(mths8ia:92[?&!iapN#Fk(?Gh&DL.#-HFd4,15@!%*(N0!VM.2:I,O+@Z=i^d!7N-#E$hWX<g?E8MO&g8&qZBn\lTjYeHSC*F%X>E2%`ln1"1ls,<GqQ:7sPqO1JdtEL__9dff>MoHQk+%H3<bI"SX]eYM>I%V;3'^r,hAMbh>O&ZCO\iV:,K`i_WMdD$RdmMrY\ai]0Ic[g78FU);Mt_^oBPB?F1DAu.jo@a//OU:LEN-:;,B%%9Spa?qBQJ7F4MGlprU5Jr1F=4]Aqt:8q?Y1A!Krd@A\-ksa`i+0`'"!="HE\F*`bj29A!]sVD?rhX^(-"1jsD*,A7pkVQ7$MlN=%kC%(gkKhl@3OLj2q3$k.V@[DY['T??d@B>p3l6`re0Y)3h/"Dq"2:?EU7Zr19WaZNcTcgN2@E[WXqTO@2:S%"-i%<!ipN#c#QA7G%Spr5r?ioV-o/7[UMQj_:LLXqDKFRhpQSC83#ZTN=b@m;;9jggF0I2?EAsP0s@U4"&@@l$Ud>Fo-M;/oIcqcBg)s+3"BV2#?[mu*&%n=P2X'n0KNcYp\-^C*>soB!MZp[@jGQ#=Hc*!>Pbf4YC.J\>YA9Y(2+rPG6RK'(ni3.@hYRU@umk.<'DE3hnoe9NkG;R6S09CR%5%e1$?1AY,_Y6<)%c"d'FaO;pATAAo&;LU9O:(l<("FZ*=Lh3)`Yh>o,pO%m#MAu8$r@U12N"sc>h[CJpkgn7B*WT;F#:-t+oWkr2N%F;Ua_9gVo?D)ga5DQZJX6]5tc?H%e[qC![q'<VQP;LXmm@@`()OkE05fMm.Fl-tT=Y?&Y&O[QKK0a3Mj7siPu7iLWnO]\@'04=Y9%=bJQ]U<kJ?p.3]K6UH0[,bW"EB^S(,9OW)MB-&j(Q_-klB!Z)m%pEj',=XcW#d1:]Q_h8<PQn<0rFQc2UE\RW#AotC&<_0r!*itq%NZ(!T3=RoEqdND:<oPE<IrcW*(Blg-"H0"uW'osO7\PnQ'N)jq1R+l(T8-UKAPZ`=(=mf77+aakKmCd\;?g^"T+jUG6qZ*B"X(]E%_LI/>d;=iq&gSps@k0n@6K>Y7ko8SY>ul$,.G.3Xj##aa(@"tTf9.lU?Qs(oFuW#VcceUH'RaF3.J0+F]ZGWLXMW(QGQ:.+Ds0G>%P7P1.5R((TZpRTgPeu$JU9[cP%kWpDc4!qM0$"+[L5:DoBZW78KhsO7:9n3YB8</4OJo^(";4/e1A)>tb&F7\5Jfh%,*(X.1cF`^%Ka@N^_9hV@e6'(U%.7#houkuI:I]0N-CBgQZFt\,fV77u?-3TFp_6W^b#'=TTG.=3F>r,;DZ)9]n%,Oi=&f"u"U2ccT;:8GQ"E`\%e9;2kQR12@A@f<:ATM&kr.&QO=E^j@(2'YA2q`f+Tdf:?<&4b8L,rN]6skP>`<QbU`[G%+bRo.;H1VfUU666+>O*'O:ZY3!b-'G%%m+*;/E=+F#(Bu<;E.]&d.RN39:fM_*R8L`!,A"?edH3!H&!`:`+_5b%da?R"89"/7"X@kfH;6kl=MQ&#:uq)IaVr)*RAl)b#E(,r%DJtXp0,o&AXmJijD8Bd?"Aq-@1EK8SX#_;>^C:C0+CSXtS<(_Q;Iat6c0.4?eQ-%CHA_'!fqnR"[um74O;P!HV&D93dWq2sG=g,d%#g10mC3#LIjN;QM1i:_Ri#\]nj)<.mLOO0AVl0NI/8GD3P*c"\D]:()q]IO:>6EtHHeG4N=t_b:p6M7E1t)(]+WZ6iJSCh9V+5VP%)d*@JUZb>7DC`\%o2;9"D/iSA.GBZ[90(mih>&N$FH8[&2I"1AUs'L0$?#D@dl#8'[@3_imuO_De2aE\iHK>ZFSo.C&DRe?,#V5Q%2\XsG\*6oBB8J4)MZ@0S:&8V`@&;)-6ASq%*Sbpb)9WQ<8beXXh#+nEhl)E.9KU,4f24IJg)uoo\P0``;q`=/N[\0*-"*M^Y1-69%#YpM]Q]R'"QUMg2?0\7c8Q.&)\,<\&3uB0+3ra;.P<KH$T;?Y>4c7&lo&MlV`J@%+LG5sVjrH^@!/gEG?W()f=7%lS593WRnnE)+%+Ed":;f/DXQ9G0$_L*i)5`N+l[YJ("f?PU=fW)Sa&rST/"uaFA=_6;e9f8.V#n]LK5@#>$D7=XFfLl10APP.JiTBiEjlcT9\[9Z8%1gNG1io7pghP"J&WH>]=jSL`p.dO-pje"<W)#QbkDcsLKdXA%$PfjS?j1Ab]QjH]ZEb'fFYAKDd/'QmMU8YZ,1ZRD/;,p]*9t]"g%M:nH;U8!H,dg^HTJ2jMV's5S.jkWi.GKDY4l4-N"VD&+\'iip;?=^M<j)7s#[j<Ab"Brad:grrg*!6QD%^I@9;kj%@D#@E)+C^c%%)C,EuL@4=X#Qt`cc"G@Y.^cXi"'Z8Pq,4,/[o-4'?r>T4NJQ_?DDg/gfk!QkGM:;sI*Y@uam(EJN3,Pk4+RYgY4)LDl]?Il&_m>_%#U3Zu]"G$YTYabfEL=0pZd3#_LuOI($mi/A!;=8N-'$_"X9_8[Hqa,HCZQM1lLMg+I2@=7(+Bi+*m3n*fZ!:_!,)fNGOOW><e>?Q%cgIW.5Y3DXX6"=#12<,s'I!JqU;D5(A2=p(MeT3c2.fI3,OrRj("8:rpF%mKq7W%315N>1MNSX!;Geqn/G?L]4Q$9h+)#2AHjjLg%hM@)kD3_QO'#NeDX"!:O9pVE8J_1)4?)bI**nE:RS>sqFBj-iFQcZJ0rj56%Y[_4gS?>Ao/."6n)auPfd4Dr7-j**p7@0WB.c"WD%@K$dNT9J(>1*j*49Bimp=V!ANL0g2Ln8]rKPd>uFok?m['u*Gc%Mha$gd5\[fUepkq1K=d)]$t(_DgekpnoAWU.?C0#2br[rT2Ml%M_ujoo$`3O?JTIRVuRqc+G0$(N;dluk`-,*.C"2bO:DPme?R)Zdu"@tZ.<tOiG\2YJl8/e4R]'=$u@1%?rIc2;4?%0OhL[PbHQW1%YKEuZ,Kl*oPq8,-cK=$7g`fC'OcrH'Rb:<PBsTE0E\:A8f(1JM+gR4%[;29g2*H&@m@ubDJ_7HbeYE:*g0l/*/k*IH(tF>"bYHN@%E2SM`'VnX51Rt3AW,H"mDFn`Oqj8E=hMZKm<fOlBabg0CI?nQ+-T3(^^/q/%NAL\[>BDB(@<[M',1lE2lm(8[/+EK,_T<!<'<aip%fjn9.U>Eq/<W+%UjJq532)kDp9FGG.;jPZ6%l!i#'rrPPGYrOWakhkr?<<KV>uUJh[s';sIr"i_-_8\jZsVcG[\CK$<E0tH*SCOI%Bs8fH7"p-o1G+(>Io;1?nlZKO^_VnML\l`YMB`cK@>K<J1Yi80b[05HoiUg2'Ut)Q'gSS"c6Eh#.T9g"R:RAb]\>SK!oq`s0<D09%#$%u+D1,QA>+HTUmJ4XZFdm7Rh*oB(n2enTU/j1b,H:Z20C@sN9-8;6YLsr`,i,]ZiFL2G@F-"7hjRlTb98Q_Wu3f0>&uon3j[';%<ZhD+SB4#bC8]HMTA"MiNM:3?_YdLLZZh>)c(Ef9?Gb\JrfV*c7!V.o@V6\[g"Tpr\XjQ/_^IqgP20+VJa-(K:^n=>mpK>5^PIit%=Q7[l7ZdEB73bA8S8!!q`F]*LNe>9t(_nSF]NV3ujHbs1+Yt4jd)M]gm1K?rQso)1\Y%_l=soTO`<Tb9_Jcue8Ih./>@H$7*/%Uo%i"94&4*ZJp,6C5ESE8Wg:d]i(Ab^lI*([L?6&bV)+L'r6%CPSp8LK)m#oO^YQjJfe(4O(Gbg#$0mKaP<I;kIDn.lq)p1f_!@#sN/%Q+_j.WBGGeOgjr/-YUQuS5_,oT1Y77YBXD`S),5g:_;;E3?Y.(*[1]0C?J*K&Ll+*asRnFR+O0S[83Dr#>e0#1S^[`4&i?GB-t%$%_n$F+c0WF@isMY=5?$eT&TVGe_#>W:>Dc,%.tjtC]uDoDk[bjHjQ)^7#d`DsIKb`liQ4AeKpP$mlVMH:TJL@2IIo9oNU1X^"J'cq%,)ImuJg0Q@XD(+e:3\n+@^kYL'LYH3>oJjiUL6/D5>Ud[X*Aa9!,l8<0`uMe-s4<6Ue%ZNfg,t\RQ</%Fj^C.6LcjP>,4b,^Ol&-%QuoP4bq>pF0J`a;2;Pjcq$W,!Vcu3ABau*,0(YVAZ.YGiC<d\1W->5YV?R\aO>JFF]?%]O4\3NaS>1YjeZp4m@k%_i=]6TY!7A^1%[(2g9&7ff"EcLdYb"iF>3lPX9.D:pDS;Dh!T+\nK_?pKGiillm$Z\n2Is$o]OF^Tp?HePbLl2')J6=eRRZ$%Nfet7gl#Xk6Ioag'%:6e>iPRU<2mtO9%i.K`0Z->]Yd!F,`PUj*@+T(t0-sG!.ebN!34$kZeki3jEBjp!GccI%u9XgSLnk=/Z-q9(V-Y>_sq,DmoP;J!C%jPGos5Z%p^6YmpYhEGi<PGa*qSQ,'"/gM`D=np;<g<F2.=)&SP?eUC&M$u/:,pspr9JbGi8XY!#.iSp>`it/\eeZ`4CrQOc!ge=P%!A#c"%D/H)%NDb8(:u1gAe,O=(<ZB`%rLLaI:T*cY=#2K/WuW"Ig-2Taf[Z2ILAT%alt7u"6<+?aO`_`+H,9gon@GonO6NfN2_TZ%(VPK&JZ4@lfufl`nad9^L9L2<8#A[JML81LaIIY'hC$/1*73!JI#d^;e9hc&-_^,d#9rX.0c;/qoJ%ng`.KtmKQco"&5lInHmCFs%8n6JW@?g(C(Ap.HR1^ZLI#jV>'5n1.bb'B4OYIC,Ml_;m6%-D<Lu@L_]pp><H@)NP4<of4POA_,rs?F;8CKiW0k92X*,@MLIT_Kc%8-jD@2'gCtno`\25[kAN.%,^'n<(9WpHjEQ4tIs5r$DcHp9l*39KUXJJ7p.p!8%Hd-Q`Z,^uJM>Y6=,Zm^9'.)at3i!R,V_VLjWF%(lQjFBa@S%Mo%#^h&VCX^*abJ@5CnLO%Rg'D!kLF&6&_mF'6oej1XqIpjf-Zo.W;Z<D1ojo3UJXr:oN&q5VUBlktee=eZ7>9uE3s%"8$i8$CV$EVD+WqV'2h'rm3IcaLst\+ak1-";#\kWBVJDOQ03n%/eK&6Ep2ibCS91o&En3]ZMP$9hdSA[RHC9pe'k@Yd''&+Z`22%0X"^BTW"_2</Jd:3#GLf1Rd/:L'-^:@#M=t%\hd=8tb^WScEP8W94D4ISiKs!uC_%pu$@"MU?#s[!LQH'^AA9h]psuoYJfKcr;VP%rVkk25Gg#N2dKP':&o'CI^_cR,BjQ'Q.480FZ8B3OQA=!&C=s*oU=YO%4:^JA<_\D;TlMRO4_MC6ZBZ:!gjCSFX!%Y\,drAdSE`Y%V/1i"IBGd&kjT@F;M\<3\m<tIjRX6?@%PJISDN8;FaU[B)(Ccm@C#nja8Rgd]-PMg\`<bg8'#StKbM>m%PF6BTsC,BaVN7/Yp[\+%5=/mEPi8%+>+(>dMN]=7rMF8/h%V=qa^kb:8*b=O2i/)N@bq)G;"52AM]QNk?Y1(q^0bIt'%q6r+u/eg=qW[cl!:$C@TP_#9hd7e%1)>uq04W"Gl"dnuUh>O!.T&kpC\%EN>;*jA,E"ZjKPd9u,Z?g"m'<SG7V2hLDsu2sTWY%r_r9LA-Z0HuhNHpBbVGW?787Q"A(;mJ%N$uL[m$r.L(/_!I_FuW5V5t/+cfXWJA?6%C1T9Bp&8H7+1`/Wb(a86_$%2%mM=e>N&[BJj:loJ*\3i0+>GGkt;X"\aZLo8,=]'V^%4O.P9RR(N3M*1@,CFU8GZ.D-G6kgEa0b%XV@n$R+U>*XuC^.H=Ha+T*b3ru+))LIQh%7P6B^6N:@WCaDI#jN:DL9'06p61f4`BQ"%'2(QeQT.e`pLca_,8gi\O+i6IReuhLD%-=)qr8n,giL/q#iYhfdaq@u`*YknElB3JaknS6-.8;cl>\IaA3o@(YB"`CJtBaN![>@#%f^:oO=SOoE]nO*cnj5Q&OF;o,H_Z1*E4146BQ?B4I;aIC)FDibe-#SpN.%`=R&iA5K9QgI\7Xrs:eI+b)%0$Y$_9->bdWJI:s"<9%X2<.qot3+.En;5UPbV4tF5,Tp(CerY2Oei2,MC_Z'fjo1RD!krI)M9ClM%R1U[R&\Gd'jaIN!u8#NN^Z&&Z9j1$.5#On6X\jI'oU%IC(^h@upKm">_YI*Nk$X1Wemp%TKhPg%W;jC/ZIl4i_UgYOZu]j"RpjH6)_c185-M1((hr=`gr6[R5+co#o$<T'<2_+jrX-_Ja`<%/81NQh/EcAI#'fZD>nLfao"/";GTo1$tF%/:RI(kO3,om!.UDK&2G7!QuEc,Q_E"KYDnHN&&N1Tc).<'7P*T-D+_s^>bKK3[XN%G%13FSiG)rb_[/80]]FERgW2b+K_)qk>af+qgO6s&r#dg;E_S#iP_U_1SQ;s)BEi(lF:TpjCVU<IQI#Rsg3][<7LMqoe*D\s3V<BlQ%cat44iu,]':,LDsj76V@+oB<"FKSaSB?7DpO^'5_KQ*]T8ppQ5_Y8@?kiJN&]>$J=B6>2D:TJ1-Gl0nmm)9rP]^4of>B4kSZc&oB%Q`g:aloZr'nE$Xo7ARMI-"%;7S\+VhPpAHFX^+pX7$,T=YN_fuKl"7hVnZ0/1@A]]5:8r#i>qBLk*D'?i'd-5H=(CuIcRZ;^Iump%[Lu]n7p-YQlD6bR<@#fE)R%oOU]O\m"F:"u`dOso/'Gpr?gYn1;B)rVU-ae()sJ*J`>N/#NIK1+B4B`o.68*EH7OATAiuMU#6PH"%eRY3!"8Pr53dhJUCm*:q%QDu$;:_`WYqZ@f!(A/]jZ1pH>=`nSlXj^W<HQ>tVXWptMSe"YnPPbJD]6AgofdBM&gZ^_H270Qg9`YH%Nk;V+6YjO$Hm?+jY-U!YXq11\)E:YE*bsG]4g:hDY\epk^mU7[dO"`,?-R/9h7R^=`c+,D*hH'l%lRKk8"Q@gQ$LE-_EFcV6X*`q%g2$#_aEeLMS%d%cEm#)uaZ^NJmj-T97#r2k"m<1Ka'@t)Z-#9`UJgo@h6uM97'>hG\mqN+'03tRQ7Rld8%U?ZY&ELjcn]JOAs+].%p+sEQ.66a2099)g7jQ;uaIHUAB!l0FI^c<=#\FSG[Zn9qTBhN0&3"skM<g:bgMpOoc:P_Tn2N/S5TaY%9ScrJf<iYBlL3tc>cdN7%*_5REXN+b]5,oU7G(4nMJ+[+kEYIV_,sC,G=`KMK)9Yp\l$BO>\Zl$=j`5It]b_`Fpt@Kaj*\;dj'J>eppf;77Xa(bZ_&>;rp9L%%q7j:h5_=8sOU"K<]&nP`/tF8$,!UrXn3ssSgB2M%3fma*^0p0I#;S:X<RAm5.Gb;[3U6EkBoWfRR%kIEPl1^\S3oThd(YPN7QK?2%bQB\mK1Kt2laRRD[GJsX")jaj:E\<UO;(eThhUFuWgtqId+c3/jp.Wm:2iLEYEPQ&?[p`2%k`+[%1do4ljKMGmC#?77ZOsc,1NpU%7LcWIoJ1gtJW@3r,cL>nU`MYkQs8J,qGTk7!LNZ@e`tqKbbqsdh;hq[8R$8KNsW3d/mk^=lT.!Obj?=+g=pbt#5du<T;IiV3mB$u%,,XAbJt2t]iX-miC9oEm>#R<4?JupQ\+hC-Z4u`t:qhDW2d+r"=-CN(AN5Vn_WC`DN^u9JliRI$Y:4=L(+Vi3hsJsj$/IkVqdHdN%5Xm]&_\1(IH.oGA\LZ]Y)?._BgIkCXL=^$X![Og8l/(Q3,$">@V5UB*-*thdEJ*dQGa90]@A7d=D`2)*_c\'@L<f9YbJM>t/jjAc%&gpeI<=`3)acet:\j6NGI;S)0W_T*<Vha8^%"tjN'\RB+-2Zn_Fbj>:mbiJTQjrsMMH:qGX4jep<\6etpDCenNn%!c6.u`&q%TUH%hUK`&PXI`jMpE0F!V*01L#`e&0B]IuLS$se;iR&m\0gqA80%@X%1aDKmpsb1L4R2ECNV_]$fE/XD(-OA7+@\?J$k&ES!4>B7$Hu\%.ePgJmHl;tA'mYuTeS*elC?-d[M8h/`1g%4B0[4MjtJVI(ra1Qq2TnNfd8G.aV(7?#=!"".odn70_r/?j_!ar5\.QT`K*]E6P9t6%*('@3UslQD&YGGQl+]We`kp7u^(s]cVNDj<.8fHP[b/Gj\r6Lu0K*[o7T'7`S_JB^Y$LoP/Vi0%WB"]r.h)Nul($j5%ZF:\$#,O#%jr.c`+/L"h8C#WLEWRsj;?\6bPMAk0/7jJ]&pknUbc.3leAfGVro7qH?Y%>!5dcoC;Oh%V'ca'MinhtFBBnjR11HA#\9=)^cTLL'%bcO,$)Y_KQ![B?p%uj>N4i_s4B#<i$LSo4=Vo@Wc2f1_npi?%M*JUe*2u>Y_T?]5%O?LEMk4!*QFXroP<Pq3KCejNe429VTIX)Hm%o<i6,Eo!&'oA&a!6[u\RbY/VMj74!H_,u'>];2]`U>:/&?4pDXmlf:DKc9G![q9+Vn@1D2Y#<(3g??'(>VCe]ViElX[=N@S(9h=_%(V&_C`<rFW!Y2M/]6+jk>%>3f>!nLd\o->ZZ>S@<Tch`%@VB[DHF/g4I,=]89Ib1O>:ZI!8UdZ,QGUm0$GMZ13^Vpj"tJ!;*`M.[%Jd%LK5DMiW`E^$8*Rt+b#[t[9`:C,/$tDf`pIWDcRL7P--XpYtI(VX=c:SqZh8_%Xpt#0g$l>6^-(iX)Pr&A,GBp'\lVNQh>+GP!%24.9T@3^<QT\"Qq&gBAm5b0J:PXP3#DS$&3P.u.@(R/>3IMt[N-*-4ANM/rk]mZAD/GgI\D-A+/]C^99@/)?171?3+46m2Xg6tCD%dW1#JqB-^"_%/=u+I/8qG]]m1X4;O^=qkT!&n@h/AdsdE\OU^nl+rf81cuOJN\l<oU/gffn)FJM6%8)Z<bbXCc?8n]E[aGSK?gDf%gE[7kSn+JpZ#LWD*BPO330&A;137i%qtNS939bG/)%2%mZJR$L6]uC:&"V@O`ZCu3kPBB+W,ad=le6eO/Uh]!bS6(t*/91\ncueo%!guZ!Dbn1#q=opZKQ/eo'j?r2*_IHT"[MP>UK+006><-8$Q3F%EXDr$V8hdICk%qUZTnKZij<(Leba+sJQjfYB8qU_r"@TQcTf&a%ls7oj<(GkPKC[2dqmEt2$t+5bm6RXI'fNkS:,T30aVs^9kjHGDqPe[&,7n%!<Y&jU6oX[6,CgMEO!72sS'Kf$]j$aS+?0fiL:XE&%Bk[+f?Ogpo+;.o4`eokVo4jsQmGdT:l6n+4V;(ZX*Sk;GM=bP:P1Bn>QH^jYcA<KPd!jJ-1+f=kcEYaL:p,Q@dd_lR$s=0ba>d#E%[CY?C_?blE!hKK%TZTrCh.Nbje$^,=3l`?%*]'N&4sW5Q=cLd_5fZV<\eR`<,;Dk4ctWH(Aup`TNO.pN8(t?,iuI]I#?=XSaWTd[%:'H&[2E8?+k3-5[(bVa6=+8@)7&GPrai4[T1oPtc9nQO52<"\GI1TLYT0?FL>si3'F=WNWX(p)!.ts10^L#Qiq5C,"-A-V[00h20%@/J>kSS=Kh6Sl@p5"i,7`q37M`m)goXB@+p?K@f/'*-qfdaC_:8_Rur(aBnYMm958Z@^6b4,sMLjWD05X]&iWnV$1KbNB:!VI^*p%b_dgOhOHqRIEnsp\SUQDF\]E+/We/:^JTT4]hRb:,?/fpY^X:Ces+os$Q5RPm[#qm:;!enACJTQ5M+:8DdVr+jdB)sF<i(^`W[Js%s"<d5//5Xkj^(^&HbEJ9j5e5>Hp$AoK&n_:=m>LYlb+P,IeS9ZS&\7<p6XS1H1+*\rV><P!XJFG=$IhEg&45Up8oP\7,h&i">3.l%lKrW7>$&?/P!G-)emAJODCm5(A_t#f6!c17H/P*c=p<lt'X47%p/][pKO4L[^sPg@$XanAe)B4]k7A5-Q*6B@Qr\\Y8Ar6^\dtqK%+Zma!K;;enTFeSY+.'k+qK8Y>G]t1@K_ST^%qkupY@IJ2%'S^j!>^_r+S]s3[_i2G4sl$"b^<V=Jik,b7C[#\Rl%uX,BP?"Q)Pfu%Q[s79mk5]%Tb^/M#i!G07Nr$L3=Jqn/5s=6gBFK?#mTTkO/e/5m/UccV$b*(\)MgdSjtqNGS&F#%qA*);Y>^/ijIc6GT\E**($lh%;k<OA_6^:c8@[9cO"6o6OVH,/mCVf`/V,f^([%*^MN$m.I9@,LkUF;skS%3f'Rp0O"q!AP)+)*bU))82Pm(V2,.FGRNLCss'Kgeu%qk)2W;agFT7;?,`gG7iEktM)3.6D;[)sl3rG`QI(V')K_d?c$SF%&D]K0[>N6X3L'.,<,AJA18Uk5I=F;a)+!9,#9WP%P'XV,5]0%8BqeC3)lU`3C""3!#i0t^a:lD[EqT=9#9c:d3.FP')D7g\2!TPY[*'iYV]$d$HA7o[%c&1K<Y0,iRa*iQbOF&Ik`f@,$]2I-lpuB%Og\2N]F7[2&nMZ=?86_d[7*m!0ZY.::BfVb-6]]u++FXK&?^]:Ce_'#p-$XWkTMM#`2lm40(^$uX^#ZghKIKr@TH<#CfbPZ^k^fJ%lPUWD"\.ASqTfh-kc]uO$uH&A'_sj;Q=<3*&u*-ffUK&5,=nAfm5M?f$#>b@#o"[i5B'@SkLL+'2uMj"mVZF`'j29p43UI`\,Sbi%;*CZ"%F@7c`CIuti;3H,s#`uZCSp2L,@eXiip/Xd$Q5>(^NLBt`>:m"'GG>\?ahX'K67rUQ-dDj[>XCF)9+:8'F/!%Cb9ZGrqlkW%)7EpTj&CMM\%p@A#:(+@H+/o#$Z!.ADJZYQ+H$XW81rR=B3>3(I;lrnN*RGS,%D-26^I^ZUH963pKS/><!8hTNRLor5rR&/Ia/Zs%0rTaO#>RZL3l:8(<$[KeQK[qPK(HohQd;*R5K(,H$]:tiP;j$N<&&.0!")igZ_]nnP)$:[;GVcah*96*s8.TJ:2;F=QnZ9-&WZFC%I=kJ.5A)A[$h=S@GG4(R//X'Q/'q:PqPSVrl&ka\TASJ1Kc7Vi:9<^(p[]s3l]:A6ii6cF]$]-GrUXj`U\42HMauh?5iqFSOo((M%88"R\2&BdU$qF&o2>+r$mds&qgV%,;_K@5enp9/\MsIM)WbX/sdFZ55AhHnA(.oo#j,q:tGei/$JD%-&^1RNV!d3@$Ton'OpRNAI%1E3esK6Zeuj*[Hmbf96TERd2jh<E\hrcp[EFa1*L8!K6]%V?"0/14GrJk%Q?H:^;=\'_tiFVQYbb.-k]8Y4VFA`SETm_nfjj*mRG%J,OB#Q"B\lGb]20qorArfVFT&A3@/b%CCbfpXj*^GN!km`ag.7l`/r*s6!.<jLjACVEm=gMK(i+HY2;`X17F9NUHFUI/c;NT[o3'%o?>6$o*Ru(7fci!$dbrPVmdGtE.U]/?R=Rck>%*!]\cB%'n4u\]AS"lfdkZY`DuYGFJj';qosM=[AJ>>O%0t\5U:Q4H_eIQk*Pnb%ir$Nn!bHDcc_jG,bf;<a.%WN>8>#'.oC9In>]l)sGPX53hol>hhWK:4a!6L>^qMJrR1\8g?Ln1CppGoC3O3S"HqBpo\7HSs\P\=W%H.k%ncT=9k4_)m!^5_QQB1(/^oed\Tb^1DL+YA:1:^bGt-b&YKkjCS$MdU_I.BE>.P4NiM)0c"",:eK6Bh*;.Y7qf/,LLqRNU8ZG%J]-XJ?5](\`k[VYpX!"?pKR-447Icdf0oraVUqV-P%QOfR0N3:.0b)>pIrTu:3"ZE(>\3/k^G<,+?Xr(U5oR*OWOsMDY6@Q#kRTM%k5tNr^*FdPO2U:+?hElg<iBNak`Iu_as4fEcTf^'#*,1$5:e(P?_(7*g%3e+c*r9&T3taA!gie"^>;3E:Qjb>gKl-I.XBpTX_n@-%><e9*kA?[&739W(Zjs\9Ajpi,or,4_jj%G`#gU]/NV&hjOKG-eIp9*pTgsa(K)?NBF4T2OOS%gPQ.L0-9aS"mh4c\_O"a%Eh(?Wo%4nY53kN1!#cNqh@^5_c/;a\QuojqlUTgs`QZb=&l>gZMuJ!h5Y-VFDZh1",GDpauB7sKd[h!GOHH0R7GceG#VShZbII2hM@-AV!9%lBfW'KiDmTb>lTbrRg$\n!B%[R7bWjb<R7VkNc`h.-BY)>']"LZ\H49HHq*=h;Y_U"ECd:,Q5m:YYKIm=Z8"-7t['!f8/1Hd!]L1%!OqgAd&en'>MZ#00otftbdlDpQfjdg`5J.9X.Hdb\,&#*hb4FTD6>Napa+Do:_3;IQb]UBjfN5(>'d&nCRRSM^6`F2(ATP#U"B<m%\(E"Y;kMn<]\L'a)*r)9mj%eee7@N_n#<jOSsk7mlUqW'_Tr&%!Q?DVlZGItZ0]ZVIu@d`>f&:ekAFqZcVq$XH/@sopPe(dmFt`m%2`W;Bc/m.0gd2MV&E2rRL1lo[^J#-,T>+.sNRH[Mc2SQMaa&PP37$F+TV&,gPOlHCF^9sbh!NiuIks(mS<@5\c:]PhYs9s)D[/K[%#M3>:Ata97RBPpaN3rPpgF\<)\V-Y$Y.KB7\XrZ]S*TIeFjCoMh7emAGEYtI>Pt(^9BO'`a%q%2ial<cpXHFmq0cOm#KuFN\*-N1%,<UU(mWO?_4S>/3kO$Q;B*d[4?O-G>'8defhu:MFPV!A:'N*Lfc]\B[>D.2gGFLS>Fkm++A=D,p0$,t*O3l1lFgLR.Y(o2ibOoo%%FjC?QDVmt\^[G"sQVId4L;BHu:nUMd#"S`(_J(7]6<]6TQfmstD1MhU4ZkV2\U985@TBUF!Nt`R_@8BX2WE2,^I2m-(4"7Mllr=?%m^>]n=RW/B81@r3aUld@k^*Mcdd(e;k]uGt#[!$0j;:aWj-T+%!E!1g`f$9Q_Ja\9"td[I>7jp`Uj)h6\h],*qp3$Hq*4n)5:Dp,%o<Y<7P^]TU)EXl=+h?f&?GfRC&_+Q`f>oTgW)oE;Z$\JeBkJ%Go@+=#GI*uMd<4:<p#9l(q9%mfT"@-qpbp^\.#YaclDn4Vm[#[a%aMdU"7e@#Q>!B3ud1VCt0$f=J8P6V_AT9o%(`V6,gKk\f<PVhE42b8T(,BCj=]Z;O@Dq/PM`b^?0G\^6VgE@VP(2WPg)?ct#DDbT%GCB7rg[>nKCu"2kc]!=Bq>Ym)FW,j`/0=O<5VBB)gN;QSP[0NpnL)d?'9hp*+Xdm#j<@mRE[`[Y]4qc^>G;qdG9`Z4[P![USQM(p%?,oXoES[_#(co\^<T$]RF%,Pa6ZO9L@a?IZ_Q%36f)ijD$OQb"$U4j:khg<hO^IhFlf%%BTN-3L-JAkJ@>kEG1K2D)0kTK:V>?W"%Md0$93K3:,M2o2Rhh+]VmSr3WpUoAK$cbLbi>M3]=msJCXus&c2ll)edl6\4dK67noSo>?f3?>oZp"$_c?&Tl]D-N5h.R\ApoN$S%E?js%Qh?e7MuHU+?&NX)lbH/Ek#L$h0%':;9;je]mWDk8gE;!8@Wogu>@Mo!jN3\*m#hJQKIcM;rV5"H+)MhQdY`,iLfTq`+DPA(%g5<C.b-m'=P)8JEGcD!&>NeAj^E(++Wb2]n-[sR,'ga"<7N@!P2nDM?$l`"Krq-MG+;.ZIFDRT83pE-(TsE&?M<Tg^=j%`HcS(E^%TZUkY-@OGqrgM8UZ;Oj?ToLcfSMgLn_,$3"\jM9+PK\ArefidnrBTZ/.,>NE-bqB4E>^)!#ru_@],Z)!^Chk8Bq8a8%k8$WM;W8R%m'*2Eb)\:_gHmrhkSY>AJgG-NPZP(MiMU(2%>2D>iub"AO<nB!'uo0gC0(!JTs04_qcRn*LIHdTK7]Vf)MsZ'kb7+&b:k0%=*<,[%0YIuA7?6:t/&e[301"bCUe:g&<tu/t"@48&](7clP(HDuPh!,A_W"6ke2DDTAj<NkKlf,6]hn@kTW9/<7Lh&1egoYPo55o6R&H@)%BY$q@fjWrGY&'ccS[I3K&qeM,b2GA_Gs+R%05!>,_'Ct$BIoF0I@cnMkC33)<Rd1Z]2:$B^)QhN=Tg(cPO3r%YD1nh8&2PT][mS;%OO$\_)JnW?dT6imiA87hN4PPeeckVmbc#\WM+S(akfQ>+N`iMi87P&A'miMmP4E^#!bk=b^GBCC<l.q*Cn?IgAFSAU<)Y6<!PNS*%#qR3h8I:G\Cf(c:d\B28XK`=:EQfS;)1A$(nu'T4oUkGGl1=]YqO0KWI\UTp7"$UNFb7:=:PI5&cCUUU_5aGu)TCCYjDLr1S>%9?%ADrBR]<\`,W!SX[n-$*SleQV]^g9u[Jr!/3H.V=""(>?S:Db31X9Da[_rNTgeM!1>"SKL]oo&9sFD2AeP?8#"X(Z1CC-&dZqb.XW%&f4JKou91r&@Nin0sh=iRF`1YR3AOAl(ATeeH\NNqSW3)_8.n1eY)1oo",d45V,iQ2jam$oOG"!rNmd//i^tA/lTK#A)iYF8QSk%%AQ30X%gRH\<jmb#.VJ?b]`p.uS3.Kss0SfX(58"s*=DblU$B\<!pch`Wb/WK]:NA2.hch+N<N/kbe]1>dQ.(SEoP)BRGpeY:*MU.%AqY;D-8"KhgSceLhu#mQd`ANRP+lJ_nf</X$rJb6;oa1XR3qRP')c!Dc5D@o@Za'WM[Xc*,+5Ro4M_cNZP9B,!$[]R;qRt&b$MLf%Gq*%[973fM;k,"/>aKqA9CFT(T+qN,)u?Gu,X!QE2$en>AeQ<r.a.+mU?NZZk7F\#=F"Y5`loqKi2iGQ('9lgWHfPc+,NkuS,d4*%Z[L(H3l+%aU&Hk/gHlZu79_RV'!5tB:bckSpt0:L)9k#tjkWPfE>jt.1d\YpNu=Zk;Nt1sUV\^C45=f8DL<*5L3_C6BW31a3cG$R%<P<9:J!Oq':n[J3pj[H$Ind.8IVs7-?daH(X9$h'K_!($KP7/@-8N:AG_=$,+]K89[iimYkt4&NKq-8Z"C&6b353>Y[l,20e<Ja6%(rCl)%8f_BMJ`f:#PL&,6=mXZ_?"grFpSAsh9T_dq-.q<FFr<KY/V"^D(!:6o@l3ndJ6cT3qtti`3+b<#$Ve915!:0A&GTGiZlZa%qh8IUd[;QI7/qX3H7^F<M-ej@QM,X*EHG/*q83l62'rH[$_+h[?)Wtl]djB3.R)rk*CWQFAk`-4<(itW@E)]h3cCA%`*%WRjX8"\%1)Q0.J9;9c3O?^3G-r?#!94q;\K+U:`\WF:q9Hcf^bQ(@XhN(($*F\ae%3jl_RQfingPQI<JDVW;iPMMJeJ8a.m!VoLR[tcIL9gG%HqUZ=]VEW8L+Ak\Ju,>$GJ)\%blreqZj.-XjgVQTguls"f^@"<_Ons>=Jc$Z#$AMB=0!sBq04JYQdpnlZ1:AY+T8<o4;JLR*@[*2%*2TV&&-6sPW17tPeuPEhE\&-[*kp3O;Q8#^MgN9f+LlnS?4a$e,GD[fcK6h\haY@jXEtYk00:3s1IA\_NRYOn%@p9%YWA=.YgLi%%W??"TUL8?mD4-)UZK[$k5fb$W$+q[hiCJealQ;Z<#!ZH(^I55R[I]X!Zre*Dgdb=UIo\p&E`4VgA^D:$qBut5+f[7$nDSgaNg[5;%eAb:X@'W#SG#?UYd5CuB%#QSZ)WiY!5AHDGUr.THB'L,@\GHuAU&#*DF:JWsG*jb=S)%ckp4sl^lQP6_4MJ1E.^&/G6PQBH(4G&K%Z=Wo]=[f`(%j)ZHjgPMdoMhl4$,OKgoMaS)V+u<ncOA4aQd<9,f0(?D"4WD!nfI$@5gBZJ\KV,OT-%MXnr/)lDOTA3&)1!W'-lIZ%)-2OXi28@-"H3^f(+gGs_9.MJ\5kt`s$-X"Xr0+U"kcDck((Od>ep@_-??2rL_ca#,6kQkNu^W-k_b@rRu5XDd#j<J*e`Nf#<tC[%?S)&^6e#Oh?t\QUJkN2AfIjLb0S/NmgT%3$P2%<Bl5'9Gq/r+]MkAGW$_hHFPRsh7Z"hHOUT!T$XD-mErf]Q`,rgS_?kQc^N,+D#%"n'-X<Mq_nEtegc=\5-F*Teu#rLkG:7E)&O\a"uRlkqZJf]'4'B,5HZl=M9NcY.N#->H5Z(fe7c%Uu3ZIePKkc-P7u:P5.<"8[a#%j_0?8d$>?Z[jO:T3lBHWk&6Ys<eQ;%P8$a@52nA:Gn-L:mju\:Y`;gC3DoOD2hAi@DO/(l1kJm`V,=l.B8\r,1R;ckh;sVPEsu1s%Y8l-V.s*HALCq3DgE!#W>*Q8-&>2R+2E0C]ql]'5=i'2-k^&i)BVQlYJohTfW_EiZN;SY9!a6L\.0h*M:-+)7G'R9B6WQ]RiN:78%i_7m;5lS"s_7bKGNhE">IM5[J#Ub>XM.Le5aaDL\EcYZ%_EjiMXs^=bEsg<YD_SuS6.%e\om2SR?6XfO<SA1(UeeuIl5"/E'K<<6%J6_$1lR_t.S3Vs,^;iJH0T&g>aa#,a.tj_?OV1(JLROrA./1rYBLc\J()pi<pOGD!:c-RL9c/?N6E1%)iF]Uj'38P)#K0Ash@0o/%H(V9l>BI&h$pJ0KeZ,oc)P@gu#VIE.C5YW,B.%'<@<^-ob-=$S'<75-W6Ot`7>Gi4#!:<\h"d!U<_ID@m7gbg\tD1k+!]\YqRqZ%%0;60%IUh3g@rLk<lp]OmV)2W6_Bg``3[8H//a,gX&<V,/0D_#&<5SDc>JH[Q3%R:,?DD30^g\W[[V*0DS=C9keEZfY3eVbml(K1L%q:g$Bnf/^u5/^Ci<'YTRmqU=,"h_0no^/u6"]I7][fNXf5WG:d0kIm^ZJ+9kUF-L9,aLe56-)P^_0?@UcbW1>K>b.WgS[cY/+qh.%lY%C>(\+XSnn'JCcXfb>>Zr8&TG=JqG70tahBu<6hHg[;[t&.=/hqs='ga1k<G15q-L]OK$j3DP'P7Fb+aZlSP=THrf^#EaK?A!+%-&>npfEF@"$cWfK.3NV'!\/t#+;1_0W^7Z+F^UE0+!nd""h_B6Nd=&D6NDMVnXVaM-A\B7BF=EfjJY0ET89U29,AFA'APcd:_>>F%2^7bO-sF?&,<L^Y%1[S.!E'bB.A?eu1iI8K)"O:T:7VisB1;oB'RL=/""H"O=q!2co/:9kUQ0?XMh!q\:O->.V@fQK\n:R_Oc`J<%+$sSHnTW?j<HP6AaJaFgV$h\VID^r%0N#O.OHCG&cmnp[g%7jZClLT869lR8]@Fq_f*p;J9(^%o_"SZoRaDI[$#P3sW*9fT;$s'g%DXN%_Mg-o>Y[+/X%]3MbN!Tuh#$Md=6'$W\NrH-p21P;4KTdQ%YfebsQ@Cp+:K(q-8UO7'=pYTh`")mU8.qe(AgE+Qn#M2!"S!,%%*5^i.[]g2Klm.Hd&7!e[ZQF+t]H')c/TIb9hEPeC9aDdL6'?Q`]$V#PK!,P'M2'#>R+P<K^Mjc&+8KAXS2j-;,;[Q";i^hS#WOeH%&>g_P"7ao9h[UY2r]L"k[=h^N8-GdZ/Quqt78/D1pPqF@Q/EX4$0rV5+\?j;:.N!\P$VP8%VfQW/6qf/b8_uLK;a-l+h1!J:^0tP%4@Si`>=:k%mEk3KN`:l/Yod,gc>`3/C9%F&Q9jF+<-.&:YMcW)`&i]i5Os[gLUVOtU`ZeII8$q,K&>&/+mO)A/K>nBkd\L=cn=p4%[rAGK-4V)ul-t@W^cnC,rK:25;6>p0j+J;/[O4QV&Lq`=RRE1$]i'n_dJ\QON<L[D*-"sqJV4BQT><*H1+\Yi#V;%p;;9$ZiR@73%b\J#Pd$luHM%[CR.KidGf>+u6i_\<IGdYhrJ6H/C1ItJGZ.,"+Y_8W,]l"442o)sDdZ.u.&WtR\)E]ir83US6edKB#$jM3P>7cP:%Ft]G\i4m+f3U@u]g,u2F-j'M%&Al)4p*sYIg*?1PVBnLu@B&g5&&X1/6=HUfl"PF*gR@g=,1q[L#6p=+4`u2\N@]Q&W6A.Lr[EN:%HABLK:p%B*07lm*U8Ok+"D<Ign9-#up6D_A0)6F@o?_0dd\TSt_7F?YB:hTS"Hk.Xje8hMeSa,6&^=+(D$fPsosioKFZFIO()_\;%I2VAapmH1k/MMhHT+A@ACQ?,2#\lU[%0&[d!a7pRY`dTmr`'"=9]fNJBRVLG`gj!Kh#LgfQ[5XM+[ngP22Gbr%Ug.doD*lTD?9,o%RHL8HSAWW3[f,oqU[T23BU?bif3O(0JQN.u?\Uk$8M=Q2Om7HC<gZl'F`A9=+is7(5p\37)kH#WlP.<u:&prFSQ@!T7Y8.EqI'G6%q^E6/[U]G@M=@dT!ukdTjDR3j^)%Pe9i%m3"kaMU4h2W!7Vj0$7XXWUi$tHo`M@3@N8IaABRLIEZO1pp+PL_lbg'X]N1#=^be_qb%'3Clk-?<4EC(J`Sk0ZM[Ae:9Z`(1EBo?op>D:-Q"0c__=Hn^Bcd)0TjE^2q?Zm2V[Bd5BT/P-*Z'V4k1(OaT>@8D61#d1G14oAlD%/7`N`:cJPSM+H&]lPIP=L,dO&*/rR:PC`jJ%*TZ<D$MUUU.)-rO8.?AOnjPm_f>,T:V]PQ#VLUuT&AQQ-$Jhcm_5-fJ;^35#u&HT%(6r"*I4I8fWi/iNJskZsjp5+//-!jlqT0HV"=Zst3o%qd&dCd=a%jQ'Ro:EkFjmRr,$Bhc4oD;k#ZeklS>A7jon.,bn;,X?8sZ-b%IPOMGi(8*0B/"PRm!BIDV#bq!a;bnTS:V0Xs#;i!\ls+E>+<iFP#2j>=N`a=UnOsqFVi*Ra0lU)5t6%^DciJCm9j,^b>EIAj#]T'%.:mfq+b;HBI;V(,N4^fr5RSY.0+MKi@!3oo-@qF%/4U@Vf9K'7Z@.krW&gmI8cUB<D,$USqeWFW@5Lhl8lWud%4)BD*enUCEu:cY%a:5*QrGG2t>87NQ7QV8]Ha-,1QMQ+u?jmsNd"*`0],#-?Kp12Wm!s=Z(n;$U00JV,6Q)#3d!!c`:B3iqV&fOK6&G(%b@q1_F*]Bb%^*Coei^8`,Dj@Ike4L8u10Kp)PhSS9Ut!\rHBLj,.i^#c>'T(X2fpHB+fXL,-dJa&)[OCe3@q\un\r*8%:P!0J$C&:TnQJ"\1FHs%Tl_u..dNchfjHNX.'m9MZ^&O,g)Dr-GY6&pL#`C_E]!I16eG>q=As!8jtFm3.U9YS_V(<X"Nn";r"leu;G'WhLcD.AY3F[MVI^Lk%(qR%T<dmbc(W<;CdD)'(1XqAH]sqIHUL@AaoS\h;"-1]1)!Mi(EM#iAe/:'jg2pY%,X.=[%qo!-CsiKPcTh6S,gW'%Geh@q5omdR%MB"rpD^B$Tk2uDLTn!ke)18uhfHOD<@.I+0d2usGNE;ruPo<st5r/X=VJ$@ZXYkbSL+6?CYR*,29-u3qeZU1WC_dnpClp"@>ZW07%oF\c\N&K,4*mfQK&f(TCRth#'$f?$;A*aA4B]+6fF:fkC(;<kOe<)fqQQLM=4iR4!i0PY^F?-?8c`GaqE=kCJCI9bM0jb6..J.hX%'+sgtM1PeNOm*@+T:[1t<n4:.(%@#CF;tlh]N+9kqJ.6lJePYuB[?:d?)`Mqgr*4[fpG-o:34KE+P1:\%S/D_rlI`M4%S3a>Y0ak%N\hkBo@o%o&R!<A6%_jrK%tYXS$Nh0V]m4^+tY'd&o9P'pgU95CKJ6@'.-E["m1*#&/>V!4d\C#dYI:04*nEE/j@qOJZiXLUi<P%%><iA0AN,itkEAM@.G3iGd-\ECW)4fR*P>!Reldq/VSNfdB<F7e%-[N@6H[=u5ttOn<O$oD[`I\l</tp>1t9UA-qUbS5i%)9A!^7!%,7>CMZ+RArFVQL3gm;I!NUSeoq&p[+&Q]M\H8orTo5TTKEtfC<X1fcY($@'"mZh5C,`*!8:@%NKEmQ:eXZO1&g!0=/KioCZ^c/S`%X5GQ2L.-WB?Gl]e9-m1EW\^DJK/JOn,#;oaB)a"YH'E.Zp.cM`CLtd2en#1WSWI6u7,AYM`[*,H;`h;:_S0YDDM@&6_LFh\(n&7Q%a4X)k#<tY50Gpi,c6A)"P6tV(bS>q'%?#>L=fAP^8!pq?BOFHQ2XjOTd`kZ"#4'U.VK8'$r@Hn#^kZo8MR9"5[[U$9[T[EEOVhV$%X.]mFQ7b.2*'-pIC]Nk%V_HgO^P4dVY!MH;[sB$M8k1V]Q9FnTWdChoUNAi1GRn1qVeM.\?:J1*0F85u#b5WpF7,kVT9mAj[..C`%$,q"KWc#n4:Y`N]3KD91V@q<<di@`.k2(7]]?X$k3t'"rIGQeG;./W$\kCk7EX0%i\N]b[\Xi4W0Zsuk6kMp+dEIM_WPE&o/p/Fb%fE-%k%Lf#u+oF:li$DmrD?4N=>W3\+,E[>#)QZR_A2S'1.,t-brqp&)&[[KAk7*i*!Z"U\k4Y]I36Ij-(A5@.SoA:*F:[`,H,<Iu%8S'j%Bi_V_KfRS^5MB'4Gmh5mEqNIpEb?[U&*9rbB@HCJE$CWDf-P(:47Bj-/^PC,#p^28T8N04Z0Pd;'M5+TQ>\6P>2pl:,6LDl%Yd+O/e6Yf!n_E\WEIcu%16nQ8VR&jJ/>-`Z#cj)VH2&4`Q5"(!2?o2"TJ^hq0/YlRm@#o48nIcoCWb5>7:l.,qe)5)/i*o6Z-p'f%cFOWn[7h&3%<?Vk2(@(-_@GE3>%cN0aVdT?Rg1ucI-C&I50bgfiJUU@SK4?#Dm_]i/G+j-IQhHs,SX?H<0Un4*-[Y'T]LoEpBL'S%&^b+M4ed6+@7QVsCj?U-0&cBsU9<;X,fnnILhca'1]&EXV67?Dm.1"o]2kiHQS-bp?XE,?=Q"^X#.ApRT>i@9j'%Q#T[hWD,?@$g%:C8VVa];&L)M._k[+D0DQW&h<Y['lG&qp<XITZVN^IKR<k?&hohhun4^l*4,lFH6io[,!m:ME5KqG?5Q&+)P?fndb^2o1)r8@TL+%^bh*uE\"A:ZN=A+>-Sq8/m<*%R\1@f=O`P'DZdA.EkjI70sbJGFWlR\6tM9kGfi%r)Y37.kaTpeM!!,pE-`GR/moPLL+3A41uI/)%-$DUEN\T_/7T8Q'fDr[E]3?r]mF!@&.Jc]&8uldD_/Q*bmZC'1s0;:[8<Y&Sf'!IN#B#''mdLg/Wg)8>jHM+-?N5p>i'mj5elBSj%A`C=A#9Vk@%M#eE).%&sg8407f&uLd6>@^``?5KJ6-%Fm0*&Gh2gVN4LJ=1]2l0DK"BK`)>$>^en1WUHL.*GpW^kPL)\M$?aV;O"%E4nXn`)J,%d9!/PIB4,u'((dpmkF"0IlZ$/*Yj#U0mUts]S'0;lL:R/eP'^LUS(?"i))=imT-_-c"C-Cn,QiHT07U&5DhD:b\l4m%KB1V#cb-F8&kuEj#u]faRf.Upb'_',KoWr.oGu<Y/!`FiWHo)2`h!*CC:kuX65cV7L*/P++u->5&Gb3f:DG]p/Ce%JLY%IBDTu!$%Q1@N=r)Ddh&5!DimCL&@d)-&a8hD:XWN)scn4L3?N!RuE@r","0Q%#mTYa1c0*ZLO]?6:OAeop6#U8ZRBId:DKqbk8E0-<#.NW+R%%?5T^L':FUits]@_AS:r+0L.s3o2_n4><XcV^[oL@sY9MA7TeIKaktAh!7;!l`D.Y%l.<8=(`.QQ&:m,^#EhPV`]9IoGLGEg\/6R%QS43)J1i7rnRU[niEmMQ4:0A3ltoOP_-jk1A!&(2N^8osWYITY*:[piMPBtoCl^:oFt*R'lVn(b,LLo(TF'G](lKI'<D4,SG6@AL%g!#Y1aN[iUbD5]&%Pp\I:!ERA\J<jc!*BEH."JpWBWIG#;#QlYN@kOlMWj,':'nF?3_g;%757FH5"HU"0T_5KmAPdi8F1Y@f!Ph?%Gb;<X"d:H5'^<O*S9.I%.-6!V/%j(GQUM!"TYZZW)I#n>^g$"WFlmb61CO^\;Ug8Sc<n*9]fXDB#lTunOET;/-pGWrW.5Bb[8`%A%Znc0X;,-g^-'DZY!)JOCQrc?O3MW]5;Q9^:pNQ8Dl$C#K,?BcGcVj"H`0bDqf,qD*V;#+XId=K]Q'L(Lbd/i1c@5@.^%Rid<&L&\%3nd=5V9^pt@Csqn9CX;chiK<sM\uk1XBgiWP7KVZ=BAsKgrBb?qoQsNa!<!0W2%g9[oH4O]gc6_"-KW!&XKCogSsT11b6H!B^c$%%We:jukp'#(pOMKQ%b#l/m;Km&-(9$<I%=KU`(P>\?3sTMQ4!8[U)o>KRTm=JD5+HgST=pni&61>g:&;TQpE'&+W6RW;";G,[sOiP%dDK$a\JY#FdPV_]lbCt_4gM*p&C11`!YELjrrPjJp!^C(9cc3MAm*T2[=SjcE#^\O<100J%ms/)rc0M0d2BsT\RDlLXV&/Eg"XQ`%A2,TmibUtmMD9ZNYU*Q!)8Dr:%=g@</F?\<98AkGr'G(gL-]+E1O1Bq3XGI]SLUC?'ZHM`-D,NXgG+XG<fh+$&mY+2=+)=uM+Qi>%J+OA^*OZ)a9ET_^cEa6Rq`*Qtg\qaVQIe,Q+9XSJ\Lc1O`VljE)%(]?b:to8oLs[ICIcrR#U4dP7Arhn'TR5G!\%n6)Zu2+a6o+I%2L,]c:8T9S@ENmRmW]IU+)+?aR,ls3)65"DOu[i]L,5?F^)C`DjZatB)+r2E<h`RN(CH4H#@b#<Tn4N##_HBp;?^9L)`5r!Af*jG%EMiS+nY'*PmBm\rpfm7Ka8a8_KXJ>WL5&=cs&'U)D#H`rOfO$VJnW36kRPE;rolHf5NgYS:rm!e4%1omJ%>!XgMea]\#A-^rQs`5%J,"\(5P>$olP*jn35m8T#I*u0UU\sIE`b:0mt4V&8Le\4?!HYC2Au<,T?Mh>LD+7)7R-7sDfY(ccTDNg2[]$H;^_em[Gd#tpcc6J%Y>U`\Y6KV9j'r@-YUZD'G+C5(hq,^6Aj<6gc&a`Q-)ua;?sttgrGj;BB._.#'2XHO(&ds-Uo,7!@n6U7l>4=A_tGj&h<k+Xh4MFc%.r)>++<3XO^C(f#8cXE+72)A@<gJ.?A%m%^&?qR,U-n(u6O;;J8@T)@gl>h%7WORr_O-KkZjVTKA]J#n(,J1(P7YPC$)bq;G9^mr%Y"O](ql2-Z?_lr%HmKG"D5lTdZaE??J=^gY$P`9?AsLJs=uR]Q+Pqd/FY`pJ[*9LF>o[7)2K;?oXj2TS)J4qqa^67a9QMN9#BD$Z%dqk5sN@NoZ:QpdV.,&_613NKGD;0B.agX]DN<r\Z5/_s[J>H-i68)DOl8@3$;cX`rb/nOp.5P/o"J"S@Ek7F1585!TN/!8>P;(G#%#[)9EnkIYSi+!kb^83U8&@0Xd6B2t(0jBQE!t)U+K51E,j^_psCgmJhHoX&>3]]uZLgJ5/7ZBH.6^5Xb"G.b"JZloTH9$R\-PNa`%]2UM"LtEMFL<*-74(+f'!0s^47o;u@gS*6O_QN.$='rAXMn@7X@hE!.Teii/=j^HT4);_A&->a\n=1aq_>8+<GJ*7A^d'<j7U`YM%YO:iC_<A-MRLCB8`dtW0!;%Fm*8c6CnM&qbfn?gBo[Aff?(>3IN5cF=heao3g;J9QD[Lb6UM1MT20tJ,Z>s*q#JhL(G1O&,mL2KO%!:"/C#Jqjq&jl!TZB/7^m#&r4H.u&uLtG?=,c.:odWsLm`A/^JbD..:HQ<bi/"^_On/cO:T`\``o,nntn&TI6P#te:d12pLb6=>E%*J<gHFH4]OW&O?L@7<c<-._%,-W"(l`Kbl_2PK;%=YD#tVkp&@UAh75UiSoB9[,!O-c'48/V/fkJs+h]2UI(18S$=Qp[:6V#R6JE%+uN<C^_f0s1TY]080s!6lkAjki,XZVAW\3*#sSna`UUcg6hqL=.h1,rh$s-G0#6L:XS=5?<Xk3OX74Vu,VDMeC7[uL`OiAqTsht(%VpNTQUG*6J^kd(a#6<j7(g@Z7XNr<EXYh;dgXef<oGR__&?cQSFBGj1&2e'!<[hWk&fU\F<DNUN#9jBIW6do-C^ne<jkI$R/jq8&%jNUduf=#B4+CRoP4d-FEc9^LWJV]Sd!UKdu:nY.'Qli&!lYR9gh"1\dCB>iDk-IN%>N@Y(UN1\jc&`BYeE%[ZRLq_up)t=iX)IbY%(s<#7,0;H?8)+oaJ*O[[JApN[%h*(k+Vf-Nmc`6E@koYoge%`'gH!oB4g&3*M<B@fd*L1/YSh]J2,_t6Sjr!9,#$&#]+si(0Qmk5%ONXbIQ28'HHk7?i//5KQ=\.Bs@:-=g)f)I`AFccfQ/Aefn*TcEI3$IuCG#=!=J[;)rHKgA"u-JR\"bEhoCEoo&#=J7^6K&rma!W(%,dCV>4`Zo&Fpn0e@4VMdo"8UEFG3!:dl!6$.s%D]F^Pljo/ZaVnDDPLU--6d?:oit"8TLg#.YM`(+'Y194uAQIc8>q,C``SdhZGA%mY!kEXR?T#hgEGq`^7+aE9?og"#D`K76Yq[!+<C(K?@Y3D4UIWnH0bcH[TZ6j:Auta'eFCHtjN#B6&K;,7N>.gIZ)c_t'e[n=;*$%>6BJKYP8"HPCr\Jql*6)f>f*(:RsR6kb/OC$rQBaWPJg?WOC>]dfU)UA+M\m5[-FKT^(;L%,&Voq(c@MXfleZP#6%ESlV&?)II.2%CoScZ3;RTte9KRGa`5gD]FRn6r5l/6(3l=^lT1W[W.noDgumob!(DhD4QZ*]3a<b2!*C8pEGq$ACQZ7_DpnbL;afl2rIMN0[f*F/%OKI?"^I3F'WS((:#>*cPk*&La0!Y7t>#6H.O*k/7R+N(%1WBWgQ]DZHNN11a+3ci_Kk<UgIjF0a>:UX)Gd9:e3+YYg%;A[BS6S^b%N,9E/Y9E8M<hkUT/=P-A.O1;<4;*N9`\7UCO"ZE:FD],q_]&DeBp-X<`o?9a[KWdT\01\&2_/YbL^45Gb3I#17bQ2[%@EhAGN$@i%hm+.8AckEooaJqUiGl.%k-.,'VR<0=RiohiQhpkgJp"`Tb>#h^&ifB(Vhc,2:R<S*b4t(dnYfSt*ZXlH.h>C(*eF]Be>q7EjB?:V%%HKJ-4ifeap+DJf/pF4`:rj>a.:3fsFhSl"7NK2?bO*7V0rOScNrqfogW,GHBL5FZQ!F.="Bj!ioZIK">_\hP34f3OT+4&<CYA#d%*$@cRB3h?A!B.S#XcK+V6b)Y$I,OF1hOV^%</1!#OF]j,qKK`-N1q&Y@T[/7e!b]>:Csn)dd\&a_85I9=MYi-I/A3K4gR*]HF0m6%%RotOf1h0@4BG7@-;:W6$7RR$fmK@M:?3"thsm[sK#o"(<Q;<#[ED@QlW`GKfVd*DZZ4+*k^XR]Cqg08T+^=JW$9kOEk7&Q:)QQ]%Pi$"F\R)O2*38P#Z4uM'@%ZZEO6b/=?45fRDL[#uImb,;`9!r/A?"r<*C2g7fq:kQ7$)As,pZ,/6'=U03>eS</(B\p$!]aHXknFi%1(@N>X)Ok2!np#kOtN?a&8aPo#K``?]hKZ,cd8DN-$Bij,WufUOd7(]+GQi5aMdkB8#QL?\MDG16%D0.'sbZ7+%5-/4Yi,bSe>ot%(agQXC;(L.4,N<k(Icp_1!1N4U).0Q#j2lZ;k^\O;$2ZeK""H7d,*!).L*Q1o+]&m`!/VnjO9[=P*5IJHr1On*AOP05s#GM+Cn\D%#+bRY-5>;0m^Hk=`rs&@RJDl).0_7u`!?q298';c`-TgJ"f7F\UehO?_T'<Lq"0)s$35jD518)X?mJiPZ^9gMREu<F<A]ch/Yi+J%..R<^Rt>qp?o*^_%J9M=n[W0h5f#/lIY-?fcik4Vi!D_4&g.C.B?K`eSHuDknLD8[2p=%i!L+7"[15PuGQSceU2<$;WSdnr#T*jY%(f.E,&g0DX9HGOfK&<laUPL\Bg=Wps%,O-m`[#:F:i?5pCbh3J$[!-CkY>h-%2K;rZ#k.@h[*6c5"7_!QeYHJT>_a4,s4H-@qZcj%p2$Z/i+/c6Ut7e%,W)G55YjOp'Qdl*=J>IsEu1r4:(X`0`2,.<5SG5MZG9scdY9q*KeW:)-g!),o<6+oaUXbU>VgV)1'Ei*PU_&.%3qN^^XGr0Z$0I/ufEDX$oe2Xj65o>'8YA/l"Ce^U(8BD'V.AMWi@)K5k0I?PrI9'1&VHbl#ts!We7e1q$D*qsG'-2F<(44kPcMbW%iA:b$j%Bcl_^jf(E9Ud2"q,c#@rr*27(uWbI^?Kb"qno^,dIn8'b/U/GQ:SG,.9d;^q^9l&h7RI/4rEr5*+i_.mYsb1Dla>qT:^2%7oMufA_+FrQh`kIaCnm!(Y.8F[ju62+=*$05$4P7/gRPl$aNG#d2$,U$:c`XLnqM\S\nbJ../0fS&3E3UN0<9alP`X8-pkuJl(h&%+Q";`5^6uCR;5r=\IR]_TEU:.iiFr#%*>g/`%p)5iG?=-&R9cfA1ogi8D5JP")5Jd*\s[]Uk5+]gu3T%PYM?ra(Q0^Z-h(]:g$OI%<jH9Lp'Ze[;\OWsJ(A9"]H]*PmmTS`P;V9D5[U[s=[6^B*6b@3=M*l-La.f57BZ,)@0-t#0Bss+eB*?sm1=-RQK[E^n1]/DL`M.n%j@SEe+4Hqt3bIO$h%CK/ph33j(T@IHIOVa7-h[jB"d4])$q(%5>!Qu@mS"eRInZlmUO-EL#!-\X/&<>l,*;@+SQTKlHG(hCZY&Kl%7"c$?/i!l%[$iFDEN%bU:(JdXY?r=^nJ%DX@*<nQqU51pGgb-ui,9V*`88iqN;*jh2+.R*@IE8!765eaZtf#V`*h!(c&EM:Jqg&;%8*@gBe*AUf91Z*ST%GaW0"M;(O2P^fiOP0-;0+Kqq-#:AKXe8N]8qRRcOHV-?AD#)l(9:1Grg!NTINtc^o8WJS"`h"AZM(g&GRlA%@u0FgU,A6*3Nki'/fBDGX)*m7-=[DnQm\Je5oM)cFAYB;5"%3N"q1R8;8Ui;p=)t7H9/j2'VT]5U5^b!ATUITcq.RFdT6")gLVLM%@*14^RjGT>BkGg]0p,X/(feq0'A)4kXGc*>GcA5KI=W.9J?X+j\dfHBd@S&iI;<-=8egmu-mXb5_DV#51KKJ]P,SEXgY[['at3+F%`-jV$LEAhI!BoGnbAHT(IOREuJ,[rRFH&8,9PEjL0_7%OOmn.i%Tt5Rd9FloW@]@Q4kH\CEk?B,Te'0<R9L&:Z0r2lXUY;PmIfuY%P17P^S:b(4%!M.#pBgljpdg'n&4<K\D>*,_;WU2=gYRTCPFSnSScKOYBXDboa2$])UbAd4);o?2FI'b%/Z-#0p4rp_pU)K_2Y\/K%`Gs@jgbi4c'V)jEoJXqq%/nRF,YVMl=dWa+MK5MYl)mOEnVi_=!$YDDm[."QO@I/Ck85<cLsD(m"+!VeKEGTrh<3%RhN1"</tW^b%GK0O+BmlPsF7QV]LG]%@26r^e3ljk/M$%3"2V*FT#"12uLP6)IP7mfE=j*IS-WD"rMN5s;r[HL"EI&pPMEHOZ/u+I!NtdagJVMaA%.V@.,RA_B1d('j")^=rapk<5+>slBniU>K&V6J#6W3bun"p6bW,&F3e>IMV/21U@k)s5KkhZ?%8b(kV/2NPUg!0BlEU5+4)UB$V1%@WeSt.2Mjab.bG>;"F5@98M#8%4?c50^oRd_'?g'F`;`_4J"hpePA]<1&!Lr5V%7U0*FTJm)@PEpJdc$T#"/0U`[Dk,RBB(-8L#3%"JYe[>dqilHAs\(/\(\%mP9@P=sq\i1'XCih&E#L!)T9!]JS%[ldu4Ik>8VaZ7H/T*I!q@.&7!=pJi(69ld.cUq:0;26Sr5K13UE%I+GciNVEaB[-(+i2[RH?XIl]p7Oh*[(L*`kr;aT8^eR&$Ro%s8Hq8O?5mMC`>NaPh"Z:"&=f1.+@s/eEEt>O</7LO\)R0Ymp!USj%P4em['lWppG$D8hYhY=4f,:mN:"[`e&:#uQDIkZK,rEPCZ4@M`Xuq37[BLEFmK_ZhHR@beBV6GS`@<U?q/b&=2C5u]m.Of1R<@\8%W+Qko+Wb\5gRo>!m8)B5$+>!t@fbFfjf[gb+e?Iue5h'YH-;%/NBC8_\?42j@>G7nLFR&)=)[h:3PJ5s^G)O&>t)b*0>CNg\'?`t%SAbWD0Q]S,2hkh>*QHZ#i=aG,3YX1Zn3iA6mDjP\&]@FS4?-C3%DBL/pEtq`PMM:&364uh]\BHmG3u"TC&>0L\s]'g"jR4!=$IjB%n]#>*C6=_j_JL))!iInd"g[dXXcC8]88U.jZ;L_EX'W:=OjE87=Z>L?hW$EZ[@nZHLtiK1<V68KBn,abfl"24Vk1F&`^dMbZgD*.%#-``^rf1l>_`au*$ZFRNp&]KbXGtG<5t$-ec*j[BQ("@CeCSXTB]ghR?-F92p8R!9JDOe)m(GNM>+(AD;?T[7-d<$W[uZil*R=BT%AJ"o?OVh!?/%t...st0deta&7^Bhf6]eE[0M6ENWN:HRP;qJ9^gMaMs<CSN"M);_JNqeg"`q9nJcrb#;2(G2F8aHlC/c87#8L!<M%S%IK,Y(dnE>(KEQX6EBglBkdU!_>@b*B8C-]ADr:^q+`QJ*cP6E*m)J6=Q:3G?T?d&n4W2qQe'q,Na./QM,Ap"g6L^Il*"6*_hJ@%fqGA'-@q3/`pAGG"'g,!fWsE:W/5Ss]VDI$>u*%%.+"l0PT7"bj1<[";pK^*R$a\V[Xr@#e]2Hj,K,aUO[t-o9.Agl;tB=Z\/YbT%R:Spq?t9feAl"i]#_Sf[%g=LeXhA`?A40%V`=BQcnK)*u>#lp7jar/Z*bh5JnYRP6e7[r$&VHiFX(%dh(Q"Ed*Z^;,2efkNn#D?B%6]JmQB/88Y9UVWV?kW[8]WClN(%HDp+^&$XnatpVa\lN<%0W%,UH(;rP<XSiaFlp"%CI/\XYdTuZSOJIk:0b4+aGSFBBHsnGj3J,%R)a$R11+\A%PRj@&I9YlR.7W@LVg?`8>MG+e$hpQ02@tA<!-J]fSa:m:?S@o&FZ)>d*Mb9EdCbh]r8^bkRi"(om)G4n@KDL)WJqh%=`j"+UJE*"?EuA`/TQ$C!V^TG27/"CT&`8I)2["iCYHTu4P-@<iGh,If4W'*/2<PTT!_tQ-Zh@qG\Xo>3/s.NN3[I.q4f9N*D\8g%jA-X_YV'0D`QLp_O0(Lr'FA]YK'GaKNT1;]>"@D4#;O4Gm0oT5VG7m]4dm/?4nl]\WORX;=@g;@0nS_#)J.s;oL?sglUJmB%(E$G%4"gc$8gPs3B_+M#&2j[cP`$R_DF'Mb@N33j*u"I`l'#s,mS8lhS:JV`5r,a7ZQ^l'A]JK<grnd2jPkaS1gbI*QdD^[e5PhGgHT7T%Ncq<=/q_-:liGbfn?;;(TJ]-RJJN*JX_A`;"6AIU;/_S#NObqlA!0cObHY.D#;e/BOq+N[OpWIW!Epn1-i/HQW9`=1T_&&q`Vt:$%bSn]J?.LLt_id2g<C_h[:ItmQ^H@PsHt&_Cf(E'jl5%Dbd=D8E2I*/7,!8H(.k0_n1mPC3iLHb94@pUQ(L&Rb.>md8MRqK>c^nV?%^eC=TJk.R<M;OTrl<F@65;BREQ-uNEF9:+6[HMuW6L;rIG#oC,]Q*:i=MdB#+=?fpE@sC4864;JP)IEk&SZHA7.P`[n@jQs4d\>^%e#?UWL'IC\/MWP1@j5De&MSVjl)^,S1L!DtJ6:d_q/,nWa]IhP<WcY)-p"][g.OsSKtF(CM*)::2Dl]Z5P;1W9%Us4b?\;OkB4!l%BOjD'Q0.1Cd:CC(9l`)L4,I7A9EC$oE?oX[TV:%1(R2:5/$*40-QiVN+X*Vrj7"\-X7L3OC#XEGY2^3j+]e_(*-T4oQHlnuct'HH%#:-ogHOrl-!'[^cG+N6=:"DRj1PMrM:r%O*R4#25?=jT"SC\?5mAb*D\-L_kNE/,pbTtfRb-ceiTLd9h'ukcXVW.`>AQ?GVYo_,P%LWsKlb<IsQK;bPe>8]77,RnB!CjYun6RnQ^5mX(&-J1q&M>i<n*I*`4E%J^g\,bO"ap3(p8^3MpgSiJSH(s/bQdG0Po+5.f:9^9'%rPLpo(rt6^?-_>M2/pJQ0VLIfSS-LriT,e^A?uMkZL`ubL-&-!KKM$\ooNu&mNfD&:&b^hQ[9D)Kam0eIP7\C#G2cj>G6VD%5MPp%pZ&.SmBM8L^k.4=$g^BJBW&]TB.7O=otb'$GZ"]83ls!_U7L#7X/QAk(0N[^I(M[7/'G!N=L(=P+WL^:5_;EJST(/u\L^Mn'7oLO%g9`Xg;<)?"C+AOB"/JlHfUE.@*pH0>E!OGlRo?O<i\g)%ZlNKPP(=nke%5CGE;DBK@`'Zi2VLJ=r\342fkqrNEESA7YF9"igGm\Z%hT.Fe&&Yhk&>,O]%A`Jg6CArTDq0I5L4m;f4d"Y=df<)p_Po-49MptjkBI8S-7$:>_kHBg\Qum/J%(7W^^_#=(:NeoFHcJ#0D.65%:aq9?\N[$F86Cfk\>]hHYt7r7Q5Xhf^#0F!R?>&2pjIo;Qe(fiBftV#EJ;e2jL_XXPG\GNT)*Y-TcC*b5UIaDUH[f:EW`VP8n&Zb%H\^NWfT_=D*+X,h("`r]ke64P6;LiPmLDc"\Dsd$5!Bg5K*k.02XDiloR/?[,`"+/Tg$#hO*e>K$F4t`o"uM9I>!5@Gq:35a_:RJ%d^pcu9YOe1km^"qi*!,"3gA4,2LEQ>EKSF*[Q_X$"Jj[ne5X+Wp_$ZE>B%=cm?p)W)<=FcoE3>p$LY;i&p8q2M<.O+Uj05j_CY:G%NL5b!H<3Q!l\FQ./N=`s]d2u0Q.MFS'TaHt(@l2sp"_ufqR[c5)'lC/Mq=uV@$k?=aj0`sW5CKl!+uVkK:Z6(/16']rKFbH-`SWh%&2^+rX.iCKkp#Li4=RSeA0XOSMAZTk1=U-??-5(jBKLB)p)<]nN@]@*:5$tA4OehaC16W<L)!%4K)rUPC+#sL4/trJlZ[!29p@6M%Ku]iu@Z2kNK/O%C7gS+rI`'p&(QqDNPo*d3*-?q17.WC.="3@,:+eb"lYt#k/O#!GV`^n^mH7rF.Jn'l^%8tkde":KQ9VUuBG&9s%CT^V7l?Dm+8='X*a:t.\CQlNFf:bZb\3ELFl,b4XV-L/lA-4)-<GaYIi.l`I'lHK#'0\F2SIg%YT%#M(`28h*PF6knTI0eeNtr4p%Qa8"Mi/M(=9id^*0`l(*<&7/KY.:PjH\0_DnA]-<W^-pI.U7ZU=O^`k6L"Zn3]`5T/AP6op1F+(&c6HS"9:r')DJ=e3'`!F+$0ps%(?bue_rH6F28R>fDrnB#3">0,p-A9h)hJ*sh>C45X'VM_rafCJ\"eqCh[q-`#e)J<(&7Dt^&ZCOpRPYi!X0H>DfPKE)o&H.8/*1W%0nb7>nTqEodUg3cok>Y9V)msMZVSE_!.6!8Bf<0ifbBk/XQ(p?F&6.cRIAXuKEBM2;Y[1&PK&$"TXu\d6Pd5M$Cu2mnE)]][Qg$C%9\X*aIRjf5Tlqs_7@Ha!V/k*/P(/0aE&pAMgbE./e.:MG5gU6SdLYlF3sDt>'45D5T8N/%50&96MdF65g#ipC"JUO\nf<B:rT"!`%B<tr7&;98.f-o0hITIVA?*WZIc9?n1c]\Z(.S?eDiDn#Y[1K<MU)*0rZ_KOt8O?8O'EGZ'--7JK^[;3407o&;*a9LtnLrn<?ftcV%mP(ou1>4bAXak$10Q*/(0lHepkbb8gJ\2l1l]K@8]U5J71)dh1rA&YQ9K:c[e4_6QhX%gW&-ZNh+@N0.VA^\?,lQE6O(G-lP51j?%k(;o6T[%/mjjoH7LQT`%[lB&o_LSd/H2n?IKA$1WVB*fF8GkdLo(EZ7-[SF/JTg*QKYHdcgf0;_otI$&TBTssqtScVcR_t,@!Z"K%Q0FZP!^)QDX/X([LYVie>EF)MF@"K)q>ghCN7=?!('QVQ5Ks,Qs&=\KbV;loK0aH%2[@eD93+pr^d")LlWl,ISlo==puOs*ZjL90%?G1$%/07d?c(IcLA5RJ04Qp+HH%G1*^HtM@MSk(e`H)bEA`D`>a@aknrHK7E3mRI]n[/+<D]DC2>aYNTQU1DQNh&qni^"B-G-_ij%RGk-o#"0$`Tq9r0h]os5V]Y/Tf/6C?o\?(n+El8+#:]7hkk&;GjY=.WWDJ/++(&865[a4_[$E(QeC@RtRUuB,e)*@T^L&TQ)69DU%&CgVN%7t)`V#6-8.9!EZ[Tb!:.C;PJ#+GAXPLLG+OT*.HgW4i%J4V^V-M#31[L!N\T2$mLA_(alJ3u+,d^[+#2XlkL4"BB<c,3ai%U+ou5&\Y@T)j3%r>kQ]Lb(+!5kJofH_m<h/O6J.Fq9-=dp)tY^2?UPtL<$9s$<G+84%F^aV`1-kAX-Ga;6VpYfU]Xl1boGkVje&Z%=;-_Nb)/]`I+iRtIG7S?W>\69#tuGSMh(/W-Kk?eJ,d1]HL67NjZ)DFA`CsVT.IFj&]2dkTE\Z,`J,V`[%NP)1>l#.f3o*VrADD6%LH>=uWaUMGB;K_&Ji&5>lNo#UIQeMf=A$.LA6PA]Cs;mdI.=PC9[P%3Vbm9G#eu>9O%7m-J]`?nJ\NV./c&d%+PnARgG:5G%tE_0%1lL$OYC\!C4Ln02\;ALXY5ftIJnprh!cCjN]ff#f)lNA>i-KOkeZollj^e_t=h;@qh1&Zirs].cs5t;HQCK#!$2.1<$SO"0%Z+=W%In%<O8`LN$2fa_[L@Ke5[E/s"MID(oJ[l3]"bGI5Zlp%n@]<+\&iQnZ#Hqs^7-Gtb[9g"&RKnTmZ=bG[,O#EkJ^6[oKCY47+G<5j%_e1PIC-Br'OZ\!OCSiLUor;&f-iT@[XHNf=>qa'p&@+O;=5aOBRFBO)K*WfOs%r/a@.IH-MSKiB!e26Is$5k))V*$:A$i4$4APLA%9SA'hZ%aFa!;'i8?WN="Y\G.8IGMOE,QjkS[OQ*3i^Cj2E^6[s&rFMgj)C4u)!J3GJl,"dLgC)3L;jW#oFUo9%S[8.qmSp4,'u?:%f&7Aia7Ddl80#pV&3inF&:TN$JGg5Q[YaGtOG8Iu46=;J#CPeuO7Q`j*Yq#9B6(;_$7o["b[Ar/T)#k3rP*%L9D^&?s5?^$d^t8E%1]du.04kEU"7,ksVC8<^8mULRkZ'YcCqsG_D'GTmS9kl<R(#EB%jn\uBAnDc#[)p0W,1bt#ljfsJ\Z%E)dG_*jtRE!iYDNGTH,^:%*ia1T)Hbq.)js-NY*`a%_8Pj90ieW'7M^$@I7QBC:YRT<\85@k2T7JrYU+YS::a2P:a-1fq7NDMV94a2S7!3SV5Xrp:5YnfRbcrj%[e#[FV).8efOFoUQ\L<WLc@di\UT9F$$Cemk`Man(:oC.1IUY"Kuh,6Og"i('"SR_m-?nlo8`TtJK>PYRSD\b[Tq:\UI/MsA&O<e%*-@qL0U)gU3oQ)4>bqJYC:\q4\QQJ(i%^"-e(tR/i+-I_XE/8^9`,NXD)6!6X+@]DHHpm!.`_dA_4&Nm[C)Elpg.-=+mp^7NY+n?%VIoIVbDpkM?L+BM3"Bsd]k]>ZT%m/pC^\%@9HntZY/r)2Gi-YT?/e&@@MSuUn;>1W_h.rlaZf"9nIcut+F@\+eOu75"4kLfnKPS4%Nbi\`#MT5W1<_5d5fT%Ii!i),/n6N^LrcXtO>#n0KA;K[`9>E?]H2/85p>T)FR$(=S:(f=q62+h7!GFhM&)J;+7Tr9XeDIZh>t#"%m$59W;=OS\9G.W-L9_CuK_e?(kTG#&cG8XphShp;r7Z>?+<5W07n`uAN1dM>1.6m<<3R8n&!r2W;bOeuL8H9UA;_[3C6!'A6Yu$D%.TOUEh27rg=l+!3e1g6u`X3]A3mfmV;iM$nkB06&Z$`=u!K**HY9WcKib@nVR@562Pf#RM;(XUC%A1Y20Lp4IAO#Y*]I+>gB\t-L%Ne;Gg+S;-Q>dB>s3Bp.n<`kV8#a;3RkR,\Yc`\__Q?klc-VMMb[TW"RBBCu85=U>!B_X2<ST=<_0*h3H:_r12Uj1bjZEB^tMn*EG%0m2fa9C+S]3oN)952oFiI$]QcEo@*KW`'+k!m*c.(I(NRZ+ZdEWUFq277XS](0+&n2,lcDR-=)*--<[kbk>,C@5]'qMsqAt7s9u+%d'e;t<c`9fiMkk*R2C"$:(A4U;a%?Y!=B8u"Zb<CD%GAVYLfBDcqQVTG5.jS8,LnDHThU45Qb++>-JqN[g.5_1g`2/>%6Ifo$+>D%]UPH;D+Z/8RAeiKp-G#4-mIDJgW\Wt?!=Ijp]S4CDs'd4=U52RJ3=6PV?S"n,/>GhPd_0uH'`XF'^lgSE9&fEmCq5>/fPia0>[(O%NF`PB"Y),=i@Bph82"JI0:c7E[EUI%%\e'$fUk,e<&XFtK)MI)T'd(-lL.ed#eOJ?!'k])K,L1I/_>D_-YoO>EA:sJIJ+Y6b1N0"%G=15Mp*.Bn8"qI-oK4`Oio*Q2$4FFmA>uOA9/C.[36A1Ji?>]B_S$B/%@`,2]ncqA"WNE%+`8,B"%Cju]^_-OHq=-!5uRh*#^S6!%,F`X8;'bj&=Em.rB!PlaWB6E5;1WI!k0r>U:pcN$is5rG;@;ApCLb;G3ltMQ8g1XT$kA.giW:YYaWr=J$F?rV<?aoc.@QQ=/RHT:%0=UDs0/';"+?JT.=9$ATTe>QLDf3../\DF=OeGL4Cl6q?O]!p()qEsufC>>dGm>lsnjXd340i6E6qQ$LkD/8c=H>[td+Id'`-qb%%oceROb]Q7jMX-n/PP=AuZSf_h/K/;14&@.r5,de:m<,HGh$h`mi\EABG.EI$!0"NV8G"=H9G$@I@SNch(G-@t^7ub'a&0eCLb')Z%^XR'r%HX=Mc.-3>(:dmoWKeh]'o,h$=uChnCm>AbR7^p/!S8H=ES+fFON4E/b#(?<**'RA+VB/)O.(TCkV='E9Y(`P;J^hbrqRCR%qHnK6@aHbAWO'6S&fKtuF3C9[Y<B.5Zk?K-Kfq(%:Ln,=]VGVVO@/*j]:(Hk&e:g*=o-GlO<4mZ51pDeU>\caaCAabj/Hi$ZT?46%Ci]<EWXklHZ/oZ'Mc\P'f^)@l[N*Q+G)f]*L'fWI?77s+LGU?b)q\/-Z;$43Xc_.o"oE?&&[6"Mo!2HQ/mC8g4Lei@^EiE`dRd+@%5i^[k<?tFVO?cfs&#Ad34hn24mS0gYko%GEhd10%\_5fl4EO+aiFqi*CDF6lVignng\Z4cmUn>Rak_7oDc.A#r%J95>(+i(UB^8N%J@0>bSC\\2h^*`W^9WTola$,&2^)eem^]RI+<"]g4G5JDX)%tj,&!0\'qqj"A8VXKj!cb'LaUn%>,WTj8@p+1M&4P8*EbBn&Z53`%;:kmEgNZ'\i<[e`G=X(1;kd$'+PU9V?fX,&i9M%Vo4BPHf\K:k?>^V$_.JUMM^:nXA5]C;%@YEYOe5GNVA@$qCsm9"[+oAYk)6Ft%`uS#(+mjZoFl/G*-J]@:&1XX"+?Thr)[&X9rJi'j#?CPV165^.1mUTIkuMf+*]'h#e?d8C"!MK6.h@u;4[OdNP5[FYo)t4(T.J*b%Pfa=(++(!$QG\UCVemM;?CbJ5e8l0]N5]pAo[(-GCi/RQ/"HU-8h\bBYPJS`<eY!STBgAYj#K7h(!(3H,;YMG_@lYu.m(7T`9]\,%M4rt@b;8@d*P8Lj[pPKjY1gJrqN/_1q5B\H(8na'2aD]6RD!&in8Zp%S<Vt4V:%3$/?n("TR;jn-.k\Bk9X_5I23M/4?to(PG)</%CJc1\h<Y9rf]/k.5K).FFs!pR.IZtu5\BT/9QFuA9FD]C8@u:sG)-PRZ$%0i&g85ma@.QX%W`4+<<D]P3%Dk]m'(pb4Ra8.2q@"F%LcY>10_Ml&>-](H<(;5)3j52B=J(&7VkT/"lI-d2"V`1<5h2Nra!O+m6$e8q[7.qkQCY3f\)Y\f;I.8\FQqHjSL$X$Jk16N],Q;l%73.^7KqGC/eHU\`_"/MG?4JN\PH:#p&quqX!l*^6HQ<NA;lac7M]CrRY"]fP*1[3N5!1T4Fc+m-I0tY=5Tl@-[[GeGK]sDL!@>nB%0\](]<9n+<e+1a#Vds-?[F[qN/=tqK(j27=l0oH0TLO]m*VNX^Ct0&tZ#uTrWVU/X<QHU/Lmfo#gYOliIp&p0kH8!$"iBPI:/9ra%!YN_`N-f\]=J@OISUFHd^Mf[IAB1&#qNkhYS`TS$*qD+7S[ua;7$o<bH"D>pY#_OC"'TQHEGh^Z_9R@[qZ!2urV3B5Z^N5"=`67J%%.)0[%HB-AHJasGT_l*%O?SN9VNV0#/Sj%CUYOO`qRME#!?-ip,Ejg;?M?4:\"m#a[FWnm7@6ZXD6ba]PR;1P-%k:mE\5Fq&/(gr%LDGp8lp@eHWbkp:DYT2*l2ND@8he"1Nr2O#2YfG?CO2Ui+KW@s_1'sYgg:CKa>`eqFC07fh96`08c]\-*!l3a$GF6A-UCqIi>*I.%[L@3q@bW2Q-5]bn.qa@8gkM3H<Y%7pUPZJiOc6+ZjA7KBP(N$-^6>]N=Qgk0)orE<Ruf+1$nK*tA/O"TQGYj=LNWMIQHS<)ecFLr%#H:)C>Znl`n2]D7esmK/_%B3rOfM%4CY(+XY/"Fg%,%'Tj$<g<6GZ2#J9430.X[:og6"#M:h@KrBgl0cZ#jrhPqb\c=>OR&/TZ;7%-QN`eU=7`Y7DNfI3)`lZQ'5s;Y(obBk)^8X#M^U]W?ZWgRO<N8Z9Nl[M-^DX/Ct-1$(lj`Ph<*8L'paIS7RT"1@/dkd;>Teg;P?1%`;-sT7;EEj_Jtnp4peKWMFnuZ$[kX[>kkYDa&anc!M5TmSp=e7!MhWh7847@4eX1LldNLQf(@GbMXmgbn3"")Bhh3%F@a&]_dJPT%,>ifr*[/%nR/0D/!Na>hk8_gPYQ9,bMc8cTp,Cjg"2;[Ak/*Z(ZK<=in%ADb.5/0`')D2L:.AN21dLY=5I8[En*VG[kUKYiCIqGr%[LPe'=.<OcTqh?;fQF`.i\W<I*E*>0_ul$REQC(7m%74*>mP@#pf>62,Vq$D[6:()Mm)[]UU]Q^P.'bpoF?ZQ=Yp:Z<u(l6B8J/&%L@We5h(Fjt<!P>9mm,k$eY]u9\$3b;;4LR!*d2LhY#AdO.!2[u_+nch%jDDB3CLB:q!GeactpUofGn3ccB]`"cXNLdZWfN)1r0_p%,tW(FC(m!J.QU!r%XTu//i'7JVXD?&\DiD5l3MRWrWc;)BsV\_.ADeY<B="2:q"B9cKQn.6nfCNh07Q0Eu!)==1ARI4B*MgHWEWX%n:VrAlZ!POe%u(+L"lKE2#/ba#Oi[\e-Qge-B[IIX0"6D[(5)i8.+Ga63nD66m4(5ktPp^iDusNJI\eq<2a)pBQJ9:lH\c"50Y*q%rYXBC9Uq88/d-I8OUThJgfIG>$/^dm#97q-KuY%SU`$C&,T#$qOeb7=aV<<ULc^O>24^sX>L]OKd[?]0JY]()^e,=%dmK!\bPjE-%0,:Ob48IfXU_kA>Ep^Z<GI3I0\rL5N'<hLp^FQY8cm@m=:Hm0DZt1CrEcqs!,6[l-)O2/R*"m3Elg2Lh%l5YA)5k\fb?.rPfkO5h%90j2mP1E#Gj)nSMmmT#-]&.`<&hHNP"B0iGY)g_?&9=JFNl1mOArpl9f,>uhKB.SDCu\dJ=*C3V7Y9iZ;,E>X)Z5XSKrPbk^]3'%%$h#;K0d>nLLqW6F#:-TmJj@(X,Cs.cU20DEdbi\a+,(n*BJn1,p=t\I*uNJd..-`0g.@D5qQp@foXS[GeD$[MIo8fC+bdi]cpCa*%'#+FX%E>N>,/@H#jIIIBqNSJ;ahS@`D-Xgr>R>`6^"f-cmkBiMW<#VSg/-C4X7&Z^I9>=!*$:^u2W'77*j+Gg4Mp"`[o:"K/(&VT%)[D[]khFC^:s$7Pf3NND@h`rdFQu<_Fi=j+?57X?OQ3QWH$!P674;J4[bl:7RAm81ZF>)[?X[V8I99VH8fn&E5W=;s;Ws1+`u9$K%cSTo)8!k9\(_]"8;Qs)Xj@lt%'(VU^]+kue#<!`[J43XNqf:jGcj>6bpr@<I!+Vr<[Ca>HFBd$F.5ADkW4&5@,7je:Dt:_hr*Zaj%A`,A0c9o,Y.lJ;/]-1$h"Y3GbcBEVff5H^f0PeACn>]Zp`MC9n&]QC<2DL,m[KSR>(V(Dr=f@J<llF/g@-O\-JeNb=L>G%GC?3l3%'q0M<YTt+-:%eb0He]s@'j^R,&5GZXZRp.CC8?Or8<u)qqUD@3@0bcZnW8i%T3Q`:ON6Z`7stJK.bU3V-T;7_;;&I?D2B#G3^UO6%/t7PJXpiai_#p91A')(LLDop+WW<U=Zg4t)(WiNG:h@HlM0pA%%$uXG*+O+4?Z)"J2\l.)A/Wud7@(e?^:QKQD)joiD+@H)><TB=%kEin05n?C0>VUmGi@eD1.f;f"MP6>nC5]Jj*%s-P#96SO7E0a+R'?pZ_/)g]o-+7Zgb;g]FM.eY<5FVLr!Q;+N,iDo0EqZk3j0IS%rMO,@#7qn.V+-sfC3IFS`p;asona]8>puj^-&[sf+^Us!K><?om%_OG:.@Or.7ouDS9G<mFMVBf*6N_kjK2/D9=?esUeakU&%(@h%AY@\rRh2eqm`P`:c(]8!5O,&QUhGTU&@!hH[40o!6_$d@-0t:>i>6_F\n5#>j5nK7ABQt9J^:-ToZJJg"JWGal>Bj@4d:gEAO4=^%^ID9Z^_l`AB3$ge$>ge<S0O$BKS[RUPL<j#P:Sjd9p@BRS'?2tnqqXo3t747>?AGF:-)ABaZ6@D37sF-Z(Ya4/DOEtk>#8;d's2h%@Qb,'3`-M`X;k9cC0QX/F-Z0.KMJ0r<@]ql@u>Q7Bk(qX+qDah0H4"F13T\=,aMC8[(>7H_'7uPD<;r68FQ%3S>*db!5m'i("*75%S&#A<.@SDj/N"hB1BE*Mn@H&1;L8=t\n5fmDA.:3gLd_0+n`frJ$R?8mF3Xb$QgfU3]5DOM^XK,4-60EW`oCd4j0,u_[:Y91/#&L%(mfBu:650`V*\XiQ5r:f+Guf#$2'&'O-#0ret-'1ACAlDFLAZGH:Kh>`\$sg3Z"+rR+<)7`ug%$XCrAUe7l.oVs1-J4%uO2m_>.R%isBitc"XJ^SgRZq3joL!.%PQUm\>\6ZfG`G1`fP6nFZ'A$[!O3J[!k]nSg8o_M+8uJ-$c"_eTWK@"d%9N1,A<h'i$iMRi/b"_$`R%=,B>ElKkuKXgqs"3O6J]RQ(V2Ygl+#oL`E@/aGhN.uH#Y.!3g4>Zj+4l<`??,<2M"X/n(GL_D%aIG-G<cGIh45h^>+;^Ca3PRT+^%70"9u1u+KK)P>4Z3/><+L_JHn/45S#X[r#j8erO#M'$3n]C2V_:_W8#02!%%;hRQG-deN;>_7&@VhN%=\g5:Xi=>0gK#`*qp<GGJ%Jn$CE.0GS>Mf;Zj6$In;M=fa(F=Vg%N+thm(%sKjN)qg;E`<%2%s;b@GNK!>s)rbGB`.F]*k6ZE:`lA0\#1N!X2672,84]r@0Pl'%IIu8Dp[7@FjTb]Oh8''#>_tl*4$K4e^F23m)"rH0Ea]b#)H6dc*Aql:N'iJ&onV6W[0$;j*f"U&<r&R:6]FRHdU`j/ka,P3:.-'Z%G)AmJ!n.V!&>CM<#,7bkjqF!%K8_rj](f3g7d55W96NUqmpog(fUTk3lt*ESSC(`=f4h(.\H1fGfg3Ra@;KH;/nr@qL`,iM5[LaQ%c`@u!Oo<2maW:p@FYpU>CRa'!NYnPl?Y#7s64%d@5ksDF8!G@%9"'CnAEU6k-R<aI*bN^k[%TPQ82%Tk.Ibb\(^q.q2D-\9Y/;l5%-q_!WWY\L$fhoE:m]Bm,RHg+o:4[B9al8-FliFr<*X\&i897cVT$9L8&ar$pFEGk_flY:Yh#IY6I.4-X_Y\M"A,uc.qQ&2;,'lcP%E5_r5UY10+#T3\ARl/`4bj@r$:$\b?P`Ef,<D'/4+R[4mGr\UCP[=Ha?h_p>XQKg`@=K%PW1JLGrjR\-j+qh(ZU=M-pMN5uOIR:]%0SPil?Y[ECjPVk"BZ"AXW2I+>TZZaG?3TFtZt,.F#(]5O<rt<NG6r[s4fut0TS9:/3QodB.s1J\(=Wg_6%L.j04M/p(jH&?(R`EM%H#0:6VJU.EouLXY:A<hgn=@G'g$Vn%-`V#+\Z^@2S!\S3NOb4KLHQgYaR@I9f7Ra6mtRbD3\pX+S&,@L4@Ch\*R+;F&.=;@W:<!o%K'CbRW0[a@*-2kgEPVDZ2Pte`c\Ok@rc6Vm1Q:0?,;;X_>PRRkA.oY3/Rn*NOPNlK0U_$'`G+'"J^PlR(SLaG5#@Eel10\9-bJr'%e&k()8Z4Tc^oK'P\g)54L=^OV]9JG45!*m2:0k;T_)FI0DX^TlZ2g$=.O$b"OHjH7ihAD*N<):17k.-]US)Y..Am939%Y%+1!jSA%U8Z79]!"C'r74"GHh6Mmr@OLBOQTW+9Pe#<Ku'`=kS]De[[/F]Z;SkrQNSnAZnaY$08n1`qT.kn\`J2DijUCqfrdV8ZB:UV#R)D]%hK;SMQCYm+%W(l'[i[>a->-heA-gp+h9kP*aV$'t#A]@987`sg_&ck5ZZ6V*D^,F_rTGU#&3jIrZ=N3S\jeNsG67,FbHK+K5-O1L%d3X6E,5*>"WsO\SCdAc/cj6%flHU@(@b6r$lA5f4IGbi%7X$,d5iu0)^]k>uds\RM(f"WR^,AJ08XE2uo=GdtCCge-P_<D"fctB\%I7sY?blG'@WD;2Wm<J1mTd@fMRCa0=3Wpa3bWH?JE#6-,4T8#Ych@]TWR#[V(T7)CR_Cmm"@ob1(G3t;Up&K':MP]*@4J$%$rriP%>iOf/L>LFC*5;'H9Z(Jl$3")W?J0P'CWF"$C+&bZ5ZUeiD1VeD\l+J+?3l1;6gOtQQG1XkaS)Q?4+06>M&'k(OAcb=d/G/+HW3Q"%g3=Z.qk>m%>ota+086V=V1WJ'!WfP^drbdS&=t3^QNL)=UDSg`jcJERTb\i4:G"iTraPdYeN"G_,ES>>;T=EfJ=9c=:>I+,S)*;(%g(mYa_NjBFJglEqL@tJam%rm\m.<b4m\Di_**!E_:IO8Fr'3B^Q3+AmDt`FjY-T7Pc[qN\D\+=/]I\^2Wu,%&Xg_SPIGBBE]erJK%[?.W2+ju'ZhSOj#D'q9j9F,K-I:1F;e+W+crd:f46GNWAVWP[g)s9f:=p<9IOGKAYD/lI!g\E;oEXSFNoFDJg-"rbT"Jc1N.OOee%9Z7>@Ng6OG4%c1Q#t2FO<t]k2^gFq>1t%L,0soAu9DUn,]@9D_W/!H"^O6Ksem]Q@bb>,,n&O@.&O[VuN4?1ZO_gpS$%S^Ipghk%%$_n)dqB2Q2CG,_s=#?Qf`K;Q[l6!I\m=nV"Pq3#2cjZsmpCt@"(m*P_-@u[dX1a<]q#TGkl9QUtA=8QMN'R?H,9r2;"L63oNI[EF%nu5^.iTuTNiDMVL\4k#A;B(jAZ<W]mA@O%-0]5W/17[X$DLOj6O6J3=!_.uc,Q/Zr<M9#6'^sUQ]bb_[5#pAHI6lBG[Ge_BCNDoF%92trA!MGhZrg-3!KEhr2.;mH/PV<R=YU"pb6Gt!cX*P7X.]C%g$o,64Lhc1ppN<^*HN1S2>P.I4[h,e9+jEo/K+Y`el_tZuUp=,`%`o!pTZ500_/D@#i[ajl\j#%3CF;XPb\*b_&4hqqT@dI4:kdBc\CB8_/9.?](Qmh`4h?dnX)OZkukdsN;!7m/ZW3R/(XdLAJp[EJH%^iB?-$e6[;"j;b=C,q#MbTR]SgY9)%)0Vj,i+/BFWQiPW@W9f11$Kp89I7\9`HBQ2nDSh#1@_U&_I]Uc8Wio`6'_+:PYR9IBk0?C%l[#])3I;I.D<!dQJWi%-/d%k[XO#Ge+aU>d%q2TKpW[GEIQ[58F9C(3hj74+T<EUT73Bj'$]bY_E&.R?r\/e.+1`/j_+/54T`d$%%g`m3m<l%T!p8t_fDSAuZ_aSH1BPXfn.n=p.i4Vg_g697g96p1YdaPHBnd*S[Go?FWSK1bHKW6./25%"/!6AiFq?]"]d>dm*q*fUX%BYVu)T_gKL's8*G2IH]p-3ce[GWFN.VlIL\BJe6KFO^UoFL+`+mS=[62n\gOc`.dlY,UtcS8$c,A=M4`^=q%`/7E9NB)d8sqlV'`%+P[NWaBfV&:P]#1YYX4t>uOg=,\\^>dOmo75p8TAMKu;.<Z`E;=N,24)=pA`-B6t-Tb"J)/s->ScE*I)QS2k_L74abb@Mil,,6e%%b!/9FKUu4AJ<I%'1PCO\K+5<e4T%*u']MEUAiS8D&A]*H=^QNBJ[I>Od@T-+.u)nbf'l\[A#^djAM2Ld;)E)Y?3Z2K:.7b0H3me$%D"f\%$;ik:%du)O9=I^kc/ts]T!mM.+&pI"6^@*CSdZ@eFue@M+f!2)gF,_&.IBMiT<bM30G!7?Rg5,l(!?0nSdsR(8[FM2m=e[d%pEu+tQ!7O'q,,SB$SbDW5F#UBX(Ho;UgGL(7dd)&>a8!e2#^r2`2Op2kUU'sm9"MmNEE`:$Ve&%r=^*RU.Bp!]?/3Yat,f=0h8Q#%L:!5JS?UA;Dg0T]*#Y@_h$<8-QBFLG0=tSn$[Vn\X^4b0c_c:kV0$?2>:OBh@hDqK5<m\"AMu8[mB!=Ec,iIID,d0OGGXj!EpGbG%MV:>0gSh>>M9R/`\Kuk)-M3kqjlmW+,SSV%)e?FI\.FgMmH^f^W_+8'F^(-_Dt[CFDd$Mg^_0&t=!<?]:0saBfO^"[a&je&h[Tmf%#@a7d)6:QW#s-^R=p=FeaD,rg!R>^!>"G;TlP1<WdQkn?opW\<._P"X/WQfQjo7ZOEQ254p'SZ;5M[kj!M]&F,D$\bke&ENrD\Mp%._J9$*&tf40,K9%#iHQmi]T>J;0:WS_ffPq,u<7/'uqR/58oh<k/B$>n0r$$XZ?Og_lmg;X5r'L`;%ff.R4:RlDLW6WhaWJ_%Bc:%0oE-@Brk0AFR*dT:11u4*L4@<_R`<*/Uhs[)>E*;-%o((%/&G+l@)L:1U6DP=1qGYV<[?lp)jul2.PsLJ5eP[2K.H#0T!+HpAqpe%*70$-8c#agP`ucM7*^'Dl'W`-4$!!EZbkLTZB?2FVU]c-9<<3TOU1SW%5gf67`m7s5mt%TjgsA2A-c2Os.lYn4Tnb&,un9ePI!lL%8$E7;+LgKQA$-$YpT,k=\ucd3,M+J9MQhQ%;739lN7nBl`9o'jI2A$]C<^aMD8\]N)#Fq-ND[m#^]Ct`]I_ZR^+iArb;:1,ChTNu%lj>hmo@0gDWiN\30r^;.?cE0]hDt_X6^pP'0kJ8WX\;V_i^=+Db%hG%kP]_pkW$H:MquQ:/9OZ(Nd?`EAGV\mr]<Z*^jr?s;e%>k%5#].)Xl>X+<bsfP20SW@/h.kEXUVF;Y^3pb]*(,F.(e`"rCE*bLH66!-G'38,ESN"6ebI;O?YtRs0,+kkU"k1'TV1UFBW;l-X=WG%Z&W\_If-(70?l6.\]=f,`a\0W.*:leInU[`k^E%b*B)dG\i=6&L[cuaOE>(o\IT"N94SqXABamm@2k]U6.B-NZN[BH<EQ:XY)?.J%;2@iSP9:m?>FCEq;%PgX<@rg'2@fg9murWqXkQ"DC^>saJ;9\.[IoL+XGT48TgJhB<nYH#S:oZp<?tF_Lap&rnMQ)t/BT03A,B?u%fMrQ^;%'.$m\\qJdp[.D.4n=h\1>r]W?8Q2Al$AtXuVk1#>]K>Sh'lQl;uH,>.']ZVo_$[a'eS&Hoa6<q`:*$d"2ge/Hsp<@2aK4%!AdmN=Nf71W*'gk#V(rBn[o#)q;p6h*`lVbA!`T1[9d!*OV/g&lj=dg_@'O!rI3Q05Q2>"/+[>Pdk)'Z^R3F%Ar/<F.Pj;%\jhg@%Wlu"H+u2%IWmY4sPt%+>'EAs4j6mY$I`0t0a!]Ul47%+q!Q5=<87:):'m2'YVq57Z.8Yj?mod"(_bDsU7J?5MP4G5\mt5hLjo<T5%;WMJ%QM"9!-Ws^E^725^51j37?-OX#A;-!EGl@/Oa8X!Orneupb];Ko.I`KdQX/(O8LDB\9!iHGf4&3+eViOQYn`@E#FCA%[=t'*%IIP"[-l)KR11f&LG,oj):Ot]/g?5.uAW,PW"=a1H2BL[]1oj##/rRZe8cY\Z4GpGP%6*a%;nE+8Hn5+DrmsWVP:&>c_JG=l=!arh%A-%.Ndi\]hcMfT1s7^@-QaFf+/&M]A6K@i[]i<NuUdFei:([t^,<M'S9!VtPfJ-E;W%`s.hS9I7HE>;lci6ffbS6]*AgE>0bj%og%4OKRr`%8X-AZYN)gW`NVTDC-E-cBD=8-'>[a`4-Vm5t?s9&;1]^ccBbs$\)fY'JJ=]E04?P;Q<1>4_NlTlLl1&4V=@q/nmeU4QoS%W%e)]nX2Ukq\BfN8?<\])]Ga/Y(n&>pt8W4:'X5Z3/$P4(D&"=bFgrriC!W,,%/3O8Oc0G&Aj$K.I<_R%-NBM<]eS9]FBdNh2.Us%6pJh#c,r,=<qaBQ*S4CG\jEeg_n0T0NdNN,IAemTTMhTte-,.2*=an28I*HPGF>:[.'l($E)?N2l.i'I6FqpsFPWRWF@b3QEK,#;%aj33<q[Od-.eliC%NJkhM:/=u]a%A#rAoC/DfXZj%&#o^/V-SXTq(m,Mm\.m5Ef'#W5nH(QctqDNTPT$]P,\;FbY9r#5I_4-C#a(%\3(f?$q2(,%2!C]N<Rd_H6D1U'OJ(X!EG2P-2_2(J'Xc%N(o11lSU99MYA5\Z5a_sR#(Hi^($r0?\o-??63+N2#u24M)Z+<e9k`?%ELnkVUGUEc_J\Dgg"cqN!RHq62F\6t1Nns.m8eQ/7?6BllV&^INd6'Y5V:6E6F3+`%c[(>*(MTG5WHg5RKKI\l38s<)5AMjX4&>7%6Z.Pl8aaPh=A-2c9Ak-;]M\ulcEj,e2`M.f9!8!5*0*ST)fT]4E@0REX/h9%UZ70Jb/1;hk47rXM_LcLCg:YW`=kN)\%X&U*[/9s%hjTRXXr=0RNj<#7:A3>.6SZUOcFrKi!H2au7p[?U+J`(.iDC])CNG'$jgttfo24T,/%bTPU$MqSbeHUM!0ZaoJF,k02hg7#@rZ2e%2qCg#=c.MT\$WuG8^RO1R=7cb"::b=.E_#Y$.6)Qq8i2t`N7L?;o@"L$P\6uJZ*F83BN0lOU5%64rmf`N"Ke7mTI7t6,6kpa]`\#%+l"4LBe>_N8(Sb<p&"n#"69pR#E\lgU,uO)d8idYTn>^rp5Bt,NF4@Ik>s3k=HohX[T<-t]&Gc.DTV#(,$QeiF4'Xf<5Wh7XuGa/%6YB=nQmU6+S5[',]ma_&"2a.OZhO.99q#_-C7"/PC)sg&o2CtibP;tfQAnh]O<6pCq9:/@#RV<T%%#I:Ub!=r@JemSXn:aI/J/K(%0"^eQR8--1#g[QVHhj)(OF]+<o-)2]Ra:%fEjZS-\U?TTAB1#J4mqhnlS..iDWYG;5,B8sQ')]A@XtXT?6"hbbNe37eU*mCW]l-;%Ht3[`D<A!]3_*j@8mJq2=fYnQ;HlJQ+dAj``F'/ihH2'BV?b'(fP:RENXMBr[HZ^2/$(ATg:8GuO3Q7XI"iQp0W%rr9,H<emklCa%jc6UjBhMl1SLNPYi[9gh&]]jf[^ee^RGsX\\1(]A<Xn/UDQ"O$k@Fr5LD8A,SqNGMTrck6cd\kUfSb#l/s"I=09_M5/M5q!VYYma%!OA0Uhos+q"epDkG!u8gfqhO*s3!Oj,&Jm4eZEaTQ(b:XE3+t?N+6&PL62Vc2#h[GRK/:U8^2jTAI.)?I<Z/Pqk(X&BiWB'4+q,?%d<aD&U:T^3=D*)4\c^Ma7@Z7<Ro#:_XTj3G'XucfQiJUMc9NXlL@:I:Y9NHE=V/np#X`X-4_ratdKiI;=sH!13cK#T950JZ*S;F&%>Z_34!%o.3>/3lVQmKdoAq^4F/<0<kVsl9J0>@dt2[BE(Wfq:QM:c_Ed+Bm7kB9"=-)#!/FR.0QaUj?h3W>PYlC`m3iF%3?7D56Q%!3mh3QJ&8?n>]89K[4d8E&Bm`qtq@N;EA%#54\P!M7pPhKXfe(RF*&SAZOj5fp&0!GaeSG)]#oKbalK"S3BUQ-1_X']G,\\\rK$A%/O7g.o%QYfA`(uX*5Yik&]rKM>.*%D>"T5=.e)XmJUek)VbS7+/OamZnCV:<Uo9<g/[(;R>]m7[O7$S4P\21fF1k'a:(6=^Vr76M%'6a4NC\NNqq6^!sf<2X_jW7Rfp!I=pA(,#'f3J![_jCWN-?n%QYm2<gEK*#J\"Hm_)Bs%o?M&Y^mHU+-Wd$b/[esgYZ6"K0PiXIE%5ZJnFeYFkaFXF!]#EMS5A6QYbkergM-\rj(*(gUWokReJ#AO&ujJOr?GKaT*)6AV>0f_1X+G-3Ha/uf9Fn8kqDkSqFU.i>C.Ni"9%FkH*/CJJ)o1;6sYGupPGLMc'+$ShV/]9H7Pe?lOMY:jDWcO`iVP;OPt_p^Kg&:.6@O#p%L7sqB7#"<Tu.!@3"h&\5*e`U%S\(i^H%B7NIW/jh+:<KFVH"sB1K0QLf5:5Z3d_i\Wf+uS3E;lWU0oM<N4q_ZAY%*cE0/<MIboN]#mD\t1pWS;cXH9%1#MY+sg=WJ2pVlf(.%:FeWUF@m`"?h9F2XR&a>$8&KUD>1L<K3X7T=@$IH9o3]A:g7,-<jF^qMo41k#`/!)*>G!=jDDgV3RkKX<G1UA`JZ\eGe/Db=!)15%j@k_IK\m)farU`OB4gNA7SsAhE6UJ]:K[RQcsuIABT\e;OI0OD2]\b6^8ogT@oFCiKO(1^I`ud5-s6<2K4Z"B3#1a(FG%A'oMaB.%nNF%[ff:om^k$/ae0$?m)N&I<@TLG18DU$nU#q(%1o/1%bF^ta#t%*[NiD;l<V8[R.Hn^,-+XNiC+21LNs`P7*2/g<(%''+g>?R1%Hc0g7<]Qm9MWDX_i-ND!c&[4N4F5W(8REnleln:4[cUrt(%d[jmr>raA*j38WW[oV2>:=/$:Es]etD$o`6ENQYmih9jG>rN-GMY3%Ze&X7d=&A&/sqZ%1M0398GjE.[#,[Pg!N*bbUgZ*&[TF&Oq7FLp!@*4VYdGpXEKNN69<H?g<lp!ACAC`.=7WOS#H\E6)?n@GW@34%dcLTdJPTB1Af*V%rm]uDGrX'pop$#l2pe%6gk]oWh%(BD)k$TqbjIYSW2j&.Ec:VWj^hL:BTb>j;Qhu$9)YX(WRug`CJ]ZXW?1`t%_ocLigM-&*nM!\dnBB6b-VMY#$Dd1rgjP+%B!:5RlXL]aGrf';7)n1u/r<\'`Sie&^m5G'f=dZ.%`hM!3MKtnAsNr[0(i8soE!.+%[DeK,8BEHdb*^a;ii(R;,'.(r**=Jb?>(AY%F%cb-c5f/"T%G:"\RRg>E[rI/G?RT':FmE1pU%$?`.odGfb+*l;3!_G\@bpJ8m%)%017$S7$LWCJafV?CK5Os_Hnh0eZ:uBQB)j?j]o'+2uR>$/D-]7Ho#$IZEgX-RPV+51FqU4at.+P!1@rT;:qF3eGsj@F`q*eNZ:Y4%Cj%Tie["CoMBIZ1%:ua*GZV(A%8j,t@?HM2U?:'=I9''oCdHcp6R"s3;*pq#4%*]/l>6$(fs-Is;\J?I+\)GCIbSan(lX2HZe(%9%TT?L-]u?,4Z*'Xl;:[L\C*dAr+4rR(MYKr;l"^f:2"rL!/QNU3f^/!!P-8n30gA=K9$5W$jO.PEf2o(aK7)GmNnm(k6/PK_dh#AV%G2MaF59fqV&W4S><\?Ue`@Q>o*oiK"YW(!79iWt>#).A<$PE,OQ+_/+:`Tuqk_A`E7.)DVM""m]5?uYHEuE^O_I.RS>2%T&_9No0%&IUPImX&,K?O#hmn=n[O5CO+h;:sEb2a_S2RHU_kV6"pZ)?++uqprrre.A?3*_Nh8IuWge1)CPH9Sur7mIMW-8CZ\QBW(0Fa=R/V%]-IWSLfJ!X0Cu`QVBq!%&m;!BG5UO)-cf8)jJ1jQ\EaI'Cu;u^]+,/E7c4Bu`LI`]J*=QjT3k%oR9o>mr:3W:P7N)!iJjRQGJuM.%WqsUu$JFU:"e_f@N5R'[m/DG2T-X9S@r>(gG2M]KSS8,)4Yp4E&[HVNU-ri.7l+=4o55/dIIaQ8>pdIW_i+**:1*1Zp!<o?B>(KM%g2t.MhW&j3Y>sN^mRStZe'"Au^>$_7Dk"O48iZIdbkbo;lVUmZckoQ$<:<\2.(b+#q1uI\6ejF#qKV!iK8mJlCeNAS`iN]>Cko:L%ZYN?^0pbF&$5q(n_\tW8krM>e!po?dIi"Qg(EeQ$l:N>q:461<B"=YUaD54r<N=(K&(on6dXXtDCi`Kq@f!0u*nIG"FM^;aG-N9)%R;@DE<>#4E3nf8hk4C\Y6SjWL=ieC4$KLU4%!;3OC)a/>!haPF2Ec0/s"]no8+Y<f\Q(_jhH_=nZm]RdO;tS6HS/I#.%FT)3O8'u%\%PeK_%;6jg0?,FR,+^M]<58iC!ga3a0S&:VU%I]*JM5R%_6>3KScl)]@3Hlk'8cok/.J5e#fHBBGIO/DEWUE2N5G\T!bGli*r1X%OD@6q8)"GW>[B[^YZbgTXgjsfeU@8FF_%&>F@M2c**H?gVD*H#=#oYmKR!2NeoVr07p:"hZaI,G`+KkW[9;5bc6IC&3GLW\Voj&3%b)]j>^$@l:@6-?sT-<Gl5=HTW,e$d"<R!TcQqN:Q[X3C]3)%V+d>CpEot!p?m#gD2ENbpTGW8&)2>+.-mI-[5Eb'"lF,Y7Y;MF_A%kB_-Uo/sF?jt6.MP?Y#flU;XcGhjo&]o#ph\8Ae<E'dI0=,@c.i_V8bD4d`*hUQEsH;[nM;ob#He<*28>Pd\6g%hpZ/\K!s^,qq8%5*&/0pn?qiLLFhlc<5Xr//\(dnC7(k`S5]R,9&)sFDAF!@6Z@03iDE?Zt=%/1=p4T^5%lN%/P4)f_Uj>kLlG4Ig[6XFg?dA&6B4S%o1.G&CNTnff4R?Ng3p<MJ="eISWsOXdbf*0.cJ2K/oTNoNr(Tg>4\j3d@K=NHa@bE=.pQ==b"IKr>L`ZlHHqN,;a"&m?]WPDSOSa%0gC_IHd4?J^d$oZrS]YtAWUhmG$_!lA<(/PE<>^NA'#OM@IC^eL-A%'cMLl'[j0q!k;6qcN:lr[4RReT,>33W&K><&O/fSI*\D;F%4F-3CcY5G\X2#9\L$"Sp-`mW-c'i8W/P<UIHaSE*Y>K'o*aB(,WY1WS*V7d'gM!&.je/tt4G$d38[u2b]"NK1@V'fb6sG^rG3Y`&%^+>;iK[q3*F1Pd,R>`u6h,Uab9o)@X'F&6h9KU/&daY?*@#Al4'l:#<FuVh+`I0R7l'8l;hd(go1#(3;4_%D>$5^=8TfHKKG08o>%!bN7;"/<MT^5O8Y@0hQ@J=!4ff/r8u8MHaLoY"EkF15><*=\l7@9Uialk#q(ll*p9C/tiHcrI5_K1A9_hA!U8&>3!>:#pQ67R=kN%f?kA?'d%G4@B@k:M,R>=DI>EQ(`Wf?L$fTTX]2dHTf%;c[#dm;4<3>*^E["Cc!G-6I,8X0*F]]3"&fr4_Gf3&KVT]gT\F#M;%jp>%H9fC!9hd*!>;c9pb>i`TCb?nM[HOr8F_Z$(*!;&(od:oLA(CqM!MEVqBchrnboWXGh^rBr<otg`ZUj*nD)ebG]A#0F4hUdJ;S.*+%WSV&OWi?toB54jR>XC#1$XVl#darh)#GN.&U7fJ;!J]:`Kh'bK"e]`0_19LE:q!@OR*Bsu6B9X#Xcs1hhGSjd.,G5F'JKj+^S.\.%p[6r=!=&GM]TtD:SMAt&SGu%:Cf-%91)tLiVO[S>3aTXs&5I\W40+`5:-k],2UOdVg/bgs9'.(Q2cN<fCt<*`k[k_V6<Ros#KYX$%0SZ9@;"m.^&YT$W@<u#B.o&f@k>jTlC8I*1Z?Z.b3TIPNYQTdeMTnKo*JCBA&%bQopfB<PE]'HGVB9r</G/Z-!@P0!j%n4qB-D04%#aP:*kKSPTR1dKlKhp>f:68>G1*/"@Oot>A,.]j[Sh+EtfNHFLU>jaH:Zp"9"gItOn*&q[Wr)Y?`d_q>7nbXPBImBn;g9`LG,;*Q%0L7Z+_`:2DYAefN;1$b\=]:,8FOO.<+bY3ogjiUlU/ea(d;)$).qa1NM'\][@>e@'>omXWQG9"RWQm8qH$HF[Z+GU`9C1YMTJbIK%rPO@=MT?ak\Y=G)1^?7&PW<^:6i8?jrI:2m$hFrEp(#s1daCM`jZ4:2ml?(^.M8_EnPHeT9\E^jAK^UT3?f]FkjGOaD;@pFOF!q/%C4OBN*`])!1`6?=itGNTqWk%o"=AMlZ8&e$V[u_.fW1sC6$a+:Q4Mpnk/\1'XJHRFl\NDp>ChRK/A,GgdsP=Rb1:VdCP0HHlHD5Y%M&IMkY7iV5?#&,6-7b/I&pSC676#*#$qh<W.\qR%k#>JPoAM*9%&(uZA0-JklVY)OfhP$G3p269G,c-c5$$YX!>F@#c*Abm\p?6+%NH&n,5E2TI6PHjh4Q^ZLqCqfgS9n</.]:nMmM.!FMe+HCrV5M%o-#H:P1CXYBr>4q[[%UQA,<c8':J(fm=Cn^9A'paA?VRTT4Lpn%80Sa6+^0'S2E_JkA[3lLdA0p#Z\^**]aF;:\Shqd%nAU2X/:TIpCQ^pBu3LJ1DGVN5q%s/2#O;Rf_2AbE\?X#T,+@!a%5L5cb/Sr%]NUM3&($EYM7lW\l!H?lUI8W%P;uBBW2iCEAmHM-e1sh*O3A<*QL=9N.A3P?5TIj5:Q*]]qV-WCb,GTV-/-Lh$Z->>hmMEYEVF6+%G2&%'T^g'9,9?*f`$P01$JVB4-eA#>lGJ\:^eme2pqK!)X;EkhYm'>JL>S?S5%A?>ecHemr*W4#25pTI[;c,"quG0Z\7>6\ao[f'%4cRQD<B9JT^Nr`aH(IN1@?#SLL<_u?e7t&m18C[0GKf]%"<ZmlBmr>).XpXS5])*3*Agu"\GE0c5ArLCiOA)cmtB4n(*l%O*`DI=%!Fo&CEXO@REGlB50^Y(..BtWY8QH'oC7aC;6W5B65bmor*+[R!;$PJjb6cds?IRB95W#67<>(j=$23`jb6JSN(T`X)JZB;`C\Vf6%H_r3=[T9e[Bb4/J$cYfDY#O\T^8S'r.4^/drddm;:XN=6(2iO4'W4)B=)Sq!.5K-?'L3g=dR,G4Qt?!K<dE0U]KNL#-=cA:eq,Z/%-q:19e>Fic(`3<WJi#e#!W[84:Z'1eSsq?^bbKJ;ROd+;J.`b-I!jJde2(1_Jq)^#e0:op$SIV^2LWHoXa.T(:]5BQ+^L0P?qQO;%#%Q#)h&Jo&S4[GWBu\DVG9:C+64n.->"3;K+`=kC8$-W0,n>8>I@7'bi%66)i"fX+G8P)S]PFd+:ifeK0rdDmQW)kpVuhF"hIA_a%PA=5tE4T9f>UiC]*37)gO5j7/+%GRo&pn->,E5*%FH@,has\ahg/q-PpNo#a],,L5G(\`$FG\2;?&06W47?]el7b>X)9@DRoh9F7%Y(D_*R>!"Q5$d+%%iHHG5rEr1^fLJBeu-4G!/ColZDgfjp?kXNB\R\LY6u@K'4AH3N`4QOX;EGV_9M+'5&UgV'hs3LGZi_t^7u1i%>dnU:9>Ra_@?5IOo;MgO[VYC*SlOI0jb.MQ=1"lQ1&#u$Ag0D%\"`0YrBZ^Z*I@2+bN^N+6F8j+>f1QuD=aF$JWB:MX-VI"Zgo`\%elM)h)@:mBlZc\DZEk><M@(B\Laqe'172X$`\jV#@/qj[-p_W$YLljX+9m85%_IuRisQ2TG,L#)H>r2Dbqk0G6?ce7=dsLcP:!GZ%N,=KB'd^!Z_-Z>Jh5Jt]$DU.Rp+/OI)&.p</]+V6Qhb;R&A?OH6)80n&[;(1+hYM\gC6<?a`1qCG*bar)C,@,.^-5>"Jn`=(#H%f%#oDA4.WUrk.[rbj_;_7Olb]j+[=n]JeRRrQ@@MgN4cQXn%[\BA_0!%"_6rP&nFel/7=tohoj,VI3dPWhs)i^i.W^O6=@Zn5,\XR8%6.ADLa..D2?NKPCVN9id7nm\[7rI)hI&gkIJ[SD`^B/G(gPgW^fQ^RAn$_IOZLH_6pt0E]WM[9`I5ISXld"lU%9Z*k&(]onAG,_9%BFCgGrK:t!T/da-AS?VX=j@bn(W!Dm=Xf$[\1S'Fa)TiD!.m)q,'o[jk$YA4R!J4XE%8(`,M2Ko/L_Jq!Dpu6lfaT9G0Q_I(iW1s%11`eMO]gu/\-7'W=nRE`oP90`%cUk<LfpMYr*^uh@F>6X`t'5!lG_4!@hrJG"5%$;'?B#C/"HE&o"F%<==!Yd?_70DJL+ALJL2Ng%'HJcDi$?Ei80Md2ki;:$_qeG-5VOY;";2VG!C:N@kt\ZX_h,h@d=FKK;LY_jG&<sb1f2`)X=\6u,qVTBo6l^^T5i2nH;$ME0?k1!%6/;s%>iZ!C=k!"58>"[B+l]Z*ejPDfJUQjg!UsKD1!:,hj;=k(I^mT+U(".fQ9W/`R0)(:D>Rn*UfR0YL_^*(2V@[sZOF&q5;V^,%;mbAZkr-4>Nj%"s0=;E,k(%NI0Iegt`0[b%fCF':=Aed7h3+/U&oIPGoEH0N^#2QO\0Z_B9(EE3hlD`\PH+,!&:d'J/H^ag,hNm_%A<O@c#Ii>gN"0=M&i63(]JM7Y*9q:k,oTKk%_RVA&Je.eG(\JDl+qc>o"$+OR3I8Z(r2SHOWA`I8W;-(BHiVU*IG[7D1Z/*diP>"%#-e*^fk;tA2!YgIN*iSd8<DS8PX\bQr9.m?W/#m3iYRQK9fR5iFGZ"e0@W?CXp!]mZBY-6]a))/KD\BeCC"Kj[,+Yne#&K+jXGfP%StY7so,BSI.oMiq$PP;!R0!4motVl,hHYMj&!7_08qcq-31dC2pN8_'C$Dq=#Ap(<\.t6M.,h\;8fJkHs7pN9ii?,=V/s^1m*.S1%!ri:`Ql**B;KaFg.IMH(#/)$h7NVqerb&qkqLU6Um;peh@Z$<L=7Y5ocl/ON5KP9rPbSA:/%$5HO]@d$27(Q([^7,b2@KPCG4-^I%$Gn&rfq?0p@ajC-!4q4KF6TX-hHp,L?kOfa0Xh*Ws*`_%2qY_T>(,ihj;Y1lTLqUrp75O9ltj40M)DE+)Hd>)8e?=KpeWfA7nILr%rd&[k^TGMF5DEjQf^C0jaL#Ku]O+'TmJ"ZuU,2aGjN\jd0(_bM]Y>K#Zl8i/4_'/j>Z8(LNMP:?h=WYbCnp,qp;EnBg?Kd/#LU&X%\*E9,i"diW^O@B.XGPN.H0m(lnDZ%qhqoP<U6Kr+6:baL:J%Q&fuI8cPI%o!l5<59U8`f8D%(SXPD*!U#X8d''YK-N?A#<(05jAe%KC&$P`l6[N>@&M$!]gq]YKK2=d.9n`dl.&h<e7JfHtjb1JkJ+BV5#0e6`38M1-Au]_SJn*EHDN(HLtZsQWUNF\,HeTet+Y2W+XL:%5-25pNF-<Fl5oD\es;SFp4mgh8C3#N!q=Z%g\Nr\d"d&u'i[[1SiYq`e\Qkjo^R`b5d=ZZ;:j,[`]j#eK@agmcPh\9]h_'&"mLA/%:Pb0eT$J;?X3T="9OZF;kE4"Z.*bWo4'tCLT(i$kiEH%k-\OHH91-Uc^pdqD0;AWT,CNUi#t4BN2*h=6UK$B5%3:C>p:3B2+c,j)%AQlo`JuF#JfsJW?Ca)Rq!t:o+mF+a]kiDY"kCNiMFcOl9K4s*>@2n3C"h8drO;O!qK?Jur"ufM4<T[tf@Hjc/fk)aff/d*d/QV[F%%&Zd,Le@9k:kn0^(L%)$6ph=2<]=p1<j20Dl^TIkl/]/03Q"I>QEAJ)3BE]PT7@"h2njYEm#Kh4h2RC76._T;J6d*#bq<gnZN=!&%SQWK[@R&V._7T$2>oDdFOa&h(:[L[2M4;`0+5Re-XVb6a/)tX^h1?V*I-''[f8k96!GWe$c#+X/Ef<N,V2*d#AnTLd-$3cu2,H<*%:i//7%\2&.>O[;1*_5oOFlucCSQ'99)RiP)28%F@A;`7;=kCF=/m';>UJDY.Ir1ISs!'-[4uKhojR%?NN,<mR)TbP#SU6M*n*`M#%U33;S8^,giG@W;l"E1VbH__ODNHXpqo+*#W[d?pk$27f+VDl\F+47Jn62Bd:GCcDSH&FQF\ij==P_p_"nMI:]`_7^iSmrD,X7J/:%<rl]n1c$mF;J#>^=K)r8kDUpW%i3s!>*5HBB_;uV"g$3K*;6+ia8P.4&H5W/+Bdbjd!eMAiL6]mFF/HrNfb."asDl?WI4?k*m/Va%`C(k?"Z>F"\7$mL`NIWt*.oI)fESZ`:Q7i4qiC&^I+1r?2hYR_s4^ILO!A`+Grt(OFBs:s><0baIt)6q1@TZ"8[,il5)5-94El2a%0+GdaT@4?fWHpcV$d*JMpRDk5(\`"=EU7G$ecI"&FnP3WKOCB2R@XQuCs<N`bEAtTme?"++fsb2`mqGjJ*mH(='4"dG75,JK'Uq+%MJc7up0OQB,uOF:s%Btih8ka'q??O&^%$,42r?Q\?k!`H8[)T`/7\>q;;K=LJG=KVS.h;.\&re9Z*TI/jWj=2n$"Uj@OeW'c>rne%::To26QOsXDcmkYhiE#l5`f*Ua2:]8P@Qc1.?MYRn>s5`.ktP]*o5*7JLYS!dXgH)6]c"9Tj:D)Ga's<0mEjnVif9.Rehs8""68H%HXes4@Nc>aXLe'!L(OuR=IJQGN"lHJ)kDG%lSH_7h3d6W(opC62Ce8GBT[b78P-47]TF9aAaMG)'8<^-WPHak5clrlN_kQCjpn[^%]W#-)_aD[bkdu1`dt"Y:A;;%dKhrL3(MQ9gm$6V('PRdQ/LK;87U`qZ[1,FI"r!C.H*;,4O\'AuZ6fdobbn456L!e<6!.<[Ku58q%!@=.n#0fB"]P'XNVN\\YP%&^lVkhj$Kl8pR$Eif-J%VE#FRI.m6me%6a>MP-^K!:!'QOQ:^1t4jU.Xejf\sp\W2++d=?mijTI."-%'AFW1/(;HOgJDuq.8M=E>2;'Fj%i<Lc8G=,6QJr_[^Mm>K8'/n7)Ls\B6@u*#<CGiMcQ)s_]1JPBDZX.Yud]P2fHUU7H*!Vn$_a9%cdnQ@$J)35W`W1>pJXls>>XPUe/9u)4F$(T)$GO_F+[;F=moZ#"fh$bpD^,2b;uS^ZIOORM32>$$YJ,:,Yo/W28c#nYZD6h1lYW8%BKt9g_]ciK%=$Mcc'V0q7Zd$V[B[1#YgIt(,mIN[/qhaIc#%,n_C.kr6Rp=2LIDC]m>tN;=+M0J<RhNZ:l@[hZCq=nXYr*a5YRFt%Vk#=:2$keu&2^_O;,P]i!.rdT[TF&UJhdt]VnQ1p+aRrh-kD_EFP'4*7YjaqOUp?c,20B\<qgs4`?m(O_)K-:/d,0dAfb;Efq*FM%jFHqUKu7I%\q_sRn]Llke_0lF!ouD.Hrr(%/@21W<CI[Kh<kA2%1(GR0*Nad*--7Y*ftXbNN3)[e#\'68+QrA^D0O(kS`E3jS&e'%B[HV]hqXcJPcd[qP"Y:rkm2Uk(NquM=l)a5_iI"ba00u[cWdl&<[/'mYV-58.S7hZ!((N&`Xe;"IKi,)quN'g]7[m@Y^T2(HjBX_%%u8^OAA(1!4D<b:+$f`mNb3Eb^L6VO6SV-SjY>ilh3uu4m>`[B5:.U)82)Ing=WVg/dDq&Niq!Rq$)M/*]5f'1gUIj>q-_gSN"_W%`+!S2Yh)rQVX8XdF9'tLo>uVCYk&=V:^t7MO"dFB%`:!ap#JV)^,sPEXkf3$&cJBdD"[s!gKtF-ZH6m34)hNB)bMc?/RQ(U6tnfX%J2X*&erSK%#NrgZ8m(1Z>EJOSI.EqbG<TCgqGeDCXG;Zie2@,c%-[BF7_HH>o9uf;dc:E<@B4reID&^Is62jDrY_CDbM,N_*k[E)%+FtBBKpfBA;^l+T<D&)sr5%Oth!$(U2mL.N&-IT4%jj<VV1>Le;`5BEl'ei>Bk;u#5Mgl$3cP+Jr6%e@8kJu9E%or%@SW^A8oSq+%krSDm!+K'i1Q?(,)^<obc+V?p(j2TaVTNP>`hXL%U7`*#bumX=1MsA-!G]!PJ4O9\`[)R_DIuq&$%<uWc&@]lJHojSYmc<iD!i)$%6&c%KjN=oX1K%.YfThg.:p;\+4*kOG#7tZX?,`raVlUeCS4k[n,_frRkW_]P[)$$c=btHk1pbgLm&8+&TcgNA4TLkR*7Uu"n^3d4%\,f3&a+sA.Y"&L'C_lD1'3LpD`r%(p?#ePK]JNW%h%''PpNo0::^S48"Plo=&QuBJ\m9<7RD*X@7Z%s@MY*D#`i$p4YR4#>=Z:1&%e7pGTeHU4jEi&m!<pB/!n2g"%Aj0OXr^.7Q!/4Cl^=d0j`(rHNf4'(mVbLhl0l$,V`r2R^eG&K3"\47RVEJTgBC57:2^ER8a30fK%'c?@W4kf_aOm4hZ1eE`T<7lI;X_OcTWn-PG5.2\,5B!!lMr$s!r/S4H(*f:T"@$:"d0gaS,FY,YWUbGQ-)ep@h'KrVHI1[49cf<#%;AG![[7pSBOGp9e.T9'XBdE"n^eP\YdWa6D@?5M.Vq[+A"nuMgpP0B"Oe0Is$)Qc^ZY,?@_g58#&jaa+$)lADe<[V6QO)pAP'f?k%ATJ=FQputA@Rk\D<GoL[d)+^I2Q!;6=VZbB!H62/g-/[K<$g5*]EPtEjWonRc1V>m`iGU<BXK(\bX;(s?ZlVY1Q:WHk083Cb]%aW%kC_A<5a</?-c[],>4QH6f_L%LY1W^J6h#S6Q-h@X_*+jc_9"0Rd$S#c>kV2]WsgE=IUn_Cf3l+Fqi7s[34-,eaXVXVZH=4Fk14`b%/?g5=A<m+TkBC]NZaDlpr-0A0Y*tfSisdXHE3dVV0Eru9.-_6gR&[Gs*:k_"L2jfE=.=n)c\=PiXKi'YX*b&lh"p`("noj$XKir8%r6EXE>.Z$""8[RoAW5&HPs%$.AIf]#$_&"!YV$]YIM1HmcXpR[`RfOX;MXYdfRbHJm(pLeHd$_=f>HNsf0C+Hm)HY$>I0cXh,<;7%"Z%s'<'A@IRrtFJLZ1SgrmJh+:np'!:cSk<jDG!-GZT4Q3sYM<TVi_;"&e:`8hFR:2A+>OFEcD)*D_Ye;:0H[R!=^TW!Lc,LEs)K%1X1FFBlG_`4?!Vq'os.PqI2FG1tIrMF09`qGekZ<Iq#%TDs8l@FZN8PeL?VLX1L)).5M5;`n_^.[%L_RXnO7C($tJ(r_GHI'M,&)%0=*(EItK:[">5M(_EnCfHcJH`QiTBQRifCNkWUlg!mj5/>g-rKG0hppR:H!8eH9iGSb@<hl0WV40i^CL8GCg#6d-Fb8(SfC%ZUC,%<^HVbAMa,Mo6Dn>n+;F/o`3K66*:8@(>D&)q^%SbcF@Ai07@X,J#M1jQ+E)5nGV-Z',5#g!16n1#%2+55Ktb8:6$*kiWh;d5ZI0R%nI!,$jhe-gWFmIa%PLe!I#\JF(M.K(4t:h*)"*YK$!;'HMqe^@WI+t>U)Ii&;O!u>`Ed0'<;P2)Vo[ft,aq\9A>XlLPW<m5-i%?$%7A7JX1]hnorfXf(0`Fh./+gs)3^'oF$B%Kpf^3d2<PbpI<@86`"i<B'G19JW<ShN=IYYiI3+sj1-c$0ajZR/sD/Z5",pNe3CX_^+%92%,"[)52#/jT;9MM+*QglM)3"URfMS":4U([YgIb$mEre8!;4e+,pBJ03!-mph\RXYq6J82$F5Z5%tsGt#\UlqrQb"`pWBoH4,S%![<`5)MY%Us,p[0rWJq1]j,dX2TQ%cLWaO165U2Jp#e6iqkX/1^uA<#EF\N4oc\ah2SqV"+0<I53p8P7%iSdp=nOr1[9JcM"C"(?%>hr3#?*$L/XKMHNf0>e\o*;rmi9*s_`[&F?coVft=&el`("Lg^a'bT]IG5bf08if;cJq!TT>o:Cb9E4p@@/*HYm9C](p,NDp7YD.%(1_&f)df]RN2H"jqM6or)6DqS1(0&``Mq9YaYnK$?]-CG^lVXZ;4Jo^=4s+u>uM,7A8ra%Ad^36F*^P(hlBP*?;H#`o=Hl2g"P7M%+&F:@Es20#ET!2o.epB6gmhN6+bg)1(c/aIs&J'$k?FC2gFa-Y'6,U`l+.?@=kpOLGAHiW[C]T@s0Z=^^HFaYk4du`^O5k#q;pLP%mm$bmH@#GJbNH?!]taL<Df>*Bcei(.q=a(7bEoEi?bX;RrVE-^TASP?IK00Cp?C>8?iL;jqNLIFe'ft"ptb1!K7_.r~>%AI9_PrivateDataEnd